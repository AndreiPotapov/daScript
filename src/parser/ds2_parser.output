Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"


State 60 conflicts: 1 shift/reduce
State 380 conflicts: 1 shift/reduce
State 469 conflicts: 1 shift/reduce
State 474 conflicts: 1 shift/reduce
State 574 conflicts: 2 shift/reduce
State 610 conflicts: 1 shift/reduce
State 753 conflicts: 1 shift/reduce
State 763 conflicts: 1 shift/reduce
State 841 conflicts: 2 shift/reduce
State 907 conflicts: 1 shift/reduce
State 1297 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 keyword_or_name: "name"
   39                | "keyword"
   40                | "type function"

   41 require_module_name: keyword_or_name
   42                    | '%' require_module_name
   43                    | require_module_name '.' keyword_or_name
   44                    | require_module_name '/' keyword_or_name

   45 require_module: require_module_name is_public_module
   46               | require_module_name "as" "name" is_public_module

   47 is_public_module: %empty
   48                 | "public"

   49 expect_declaration: "expect" expect_list

   50 expect_list: expect_error
   51            | expect_list ',' expect_error

   52 expect_error: "integer constant"
   53             | "integer constant" ':' "integer constant"

   54 expression_label: "label" "integer constant" ':'

   55 expression_goto: "goto" "label" "integer constant"
   56                | "goto" expr

   57 elif_or_static_elif: "elif"
   58                    | "static_elif"

   59 expression_else: %empty
   60                | "else" expression_block
   61                | elif_or_static_elif expr expression_block expression_else

   62 if_or_static_if: "if"
   63                | "static_if"

   64 expression_else_one_liner: %empty
   65                          | "else" expression_if_one_liner

   66 expression_if_one_liner: expr
   67                        | expression_return_no_pipe
   68                        | expression_yield_no_pipe
   69                        | expression_break
   70                        | expression_continue

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else
   72                        | expression_if_one_liner "if" expr expression_else_one_liner "end of expression"

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block

   74 expression_unsafe: "unsafe" expression_block

   75 expression_while_loop: "while" expr expression_block

   76 expression_with: "with" expr expression_block

   77 expression_with_alias: "assume" "name" '=' expr

   78 annotation_argument_value: string_constant
   79                          | "name"
   80                          | "integer constant"
   81                          | "floating point constant"
   82                          | "true"
   83                          | "false"

   84 annotation_argument_value_list: annotation_argument_value
   85                               | annotation_argument_value_list ',' annotation_argument_value

   86 annotation_argument_name: "name"
   87                         | "type"
   88                         | "in"

   89 annotation_argument: annotation_argument_name '=' string_constant
   90                    | annotation_argument_name '=' "name"
   91                    | annotation_argument_name '=' "integer constant"
   92                    | annotation_argument_name '=' "floating point constant"
   93                    | annotation_argument_name '=' "true"
   94                    | annotation_argument_name '=' "false"
   95                    | annotation_argument_name
   96                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   97 annotation_argument_list: annotation_argument
   98                         | annotation_argument_list ',' annotation_argument

   99 metadata_argument_list: '@' annotation_argument
  100                       | metadata_argument_list '@' annotation_argument

  101 annotation_declaration_name: name_in_namespace
  102                            | "require"
  103                            | "private"

  104 annotation_declaration_basic: annotation_declaration_name
  105                             | annotation_declaration_name '(' annotation_argument_list ')'

  106 annotation_declaration: annotation_declaration_basic
  107                       | '!' annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration
  111                       | '(' annotation_declaration ')'
  112                       | "|>" annotation_declaration

  113 annotation_list: annotation_declaration
  114                | annotation_list ',' annotation_declaration

  115 optional_annotation_list: %empty
  116                         | '[' annotation_list ']'

  117 optional_function_argument_list: %empty
  118                                | '(' ')'
  119                                | '(' function_argument_list ')'

  120 optional_function_type: %empty
  121                       | ':' type_declaration

  122 function_name: "name"
  123              | "operator" '!'
  124              | "operator" '~'
  125              | "operator" "+="
  126              | "operator" "-="
  127              | "operator" "*="
  128              | "operator" "/="
  129              | "operator" "%="
  130              | "operator" "&="
  131              | "operator" "|="
  132              | "operator" "^="
  133              | "operator" "&&="
  134              | "operator" "||="
  135              | "operator" "^^="
  136              | "operator" "&&"
  137              | "operator" "||"
  138              | "operator" "^^"
  139              | "operator" '+'
  140              | "operator" '-'
  141              | "operator" '*'
  142              | "operator" '/'
  143              | "operator" '%'
  144              | "operator" '<'
  145              | "operator" '>'
  146              | "operator" ".."
  147              | "operator" "=="
  148              | "operator" "!="
  149              | "operator" "<="
  150              | "operator" ">="
  151              | "operator" '&'
  152              | "operator" '|'
  153              | "operator" '^'
  154              | "++" "operator"
  155              | "--" "operator"
  156              | "operator" "++"
  157              | "operator" "--"
  158              | "operator" "<<"
  159              | "operator" ">>"
  160              | "operator" "<<="
  161              | "operator" ">>="
  162              | "operator" "<<<"
  163              | "operator" ">>>"
  164              | "operator" "<<<="
  165              | "operator" ">>>="
  166              | "operator" '[' ']'
  167              | "operator" "?[" ']'
  168              | "operator" '.'
  169              | "operator" "?."
  170              | "operator" '.' "name"
  171              | "operator" '.' "name" ":="
  172              | "operator" "?." "name"
  173              | "operator" ":="
  174              | "operator" "delete"
  175              | "operator" "??"
  176              | "operator" "is"
  177              | "operator" "as"
  178              | "operator" "is" "name"
  179              | "operator" "as" "name"
  180              | "operator" '?' "as"
  181              | "operator" '?' "as" "name"
  182              | "bool"
  183              | "string"
  184              | "int"
  185              | "int2"
  186              | "int3"
  187              | "int4"
  188              | "uint"
  189              | "uint2"
  190              | "uint3"
  191              | "uint4"
  192              | "float"
  193              | "float2"
  194              | "float3"
  195              | "float4"
  196              | "range"
  197              | "urange"
  198              | "range64"
  199              | "urange64"
  200              | "int64"
  201              | "uint64"
  202              | "double"
  203              | "int8"
  204              | "uint8"
  205              | "int16"
  206              | "uint16"

  207 global_function_declaration: optional_annotation_list "def" function_declaration

  208 optional_public_or_private_function: %empty
  209                                    | "private"
  210                                    | "public"

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type

  212 $@2: %empty

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  214 expression_block: "begin of code block" expressions "end of code block"
  215                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  216 expr_call_pipe: expr expr_full_block_assumed_piped
  217               | expression_keyword expr_full_block_assumed_piped

  218 expression_any: "end of expression"
  219               | expr_pipe
  220               | expr_keyword
  221               | expr_assign_pipe
  222               | expr_assign "end of expression"
  223               | expression_delete "end of expression"
  224               | expression_let
  225               | expression_while_loop
  226               | expression_unsafe
  227               | expression_with
  228               | expression_with_alias
  229               | expression_for_loop
  230               | expression_break "end of expression"
  231               | expression_continue "end of expression"
  232               | expression_return
  233               | expression_yield
  234               | expression_if_then_else
  235               | expression_try_catch
  236               | expression_label "end of expression"
  237               | expression_goto "end of expression"
  238               | "pass" "end of expression"

  239 expressions: %empty
  240            | expressions expression_any
  241            | expressions error

  242 expr_keyword: "keyword" expr expression_block

  243 optional_expr_list: %empty
  244                   | expr_list

  245 optional_expr_list_in_braces: %empty
  246                             | '(' optional_expr_list ')'

  247 type_declaration_no_options_list: type_declaration
  248                                 | type_declaration_no_options_list "end of expression" type_declaration

  249 $@3: %empty

  250 $@4: %empty

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr

  252 $@5: %empty

  253 $@6: %empty

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

  255 expr_pipe: expr_assign " <|" expr_block
  256          | "@ <|" expr_block
  257          | "@@ <|" expr_block
  258          | "$ <|" expr_block
  259          | expr_call_pipe

  260 name_in_namespace: "name"
  261                  | "name" "::" "name"
  262                  | "::" "name"

  263 expression_delete: "delete" expr
  264                  | "delete" "explicit" expr

  265 $@7: %empty

  266 $@8: %empty

  267 new_type_declaration: '<' $@7 type_declaration '>' $@8
  268                     | structure_type_declaration

  269 expr_new: "new" new_type_declaration
  270         | "new" new_type_declaration '(' ')'
  271         | "new" new_type_declaration '(' expr_list ')'
  272         | "new" new_type_declaration '(' make_struct_single ')'
  273         | "new" make_decl

  274 expression_break: "break"

  275 expression_continue: "continue"

  276 expression_return_no_pipe: "return"
  277                          | "return" expr_list
  278                          | "return" "<-" expr_list

  279 expression_return: expression_return_no_pipe "end of expression"
  280                  | "return" expr_pipe
  281                  | "return" "<-" expr_pipe

  282 expression_yield_no_pipe: "yield" expr
  283                         | "yield" "<-" expr

  284 expression_yield: expression_yield_no_pipe "end of expression"
  285                 | "yield" expr_pipe
  286                 | "yield" "<-" expr_pipe

  287 expression_try_catch: "try" expression_block "recover" expression_block

  288 kwd_let_var_or_nothing: "let"
  289                       | "var"
  290                       | %empty

  291 kwd_let: "let"
  292        | "var"

  293 optional_in_scope: "inscope"
  294                  | %empty

  295 tuple_expansion: "name"
  296                | tuple_expansion ',' "name"

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  298                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  299 expression_let: kwd_let optional_in_scope let_variable_declaration
  300               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  301 $@9: %empty

  302 $@10: %empty

  303 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr

  304 $@11: %empty

  305 $@12: %empty

  306 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr

  307 $@13: %empty

  308 $@14: %empty

  309 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr

  310 $@15: %empty

  311 $@16: %empty

  312 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16

  313 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  314               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  315               | "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

  316 expr_list: expr
  317          | expr_list ',' expr

  318 block_or_simple_block: expression_block
  319                      | "=>" expr
  320                      | "=>" "<-" expr

  321 block_or_lambda: '$'
  322                | '@'
  323                | '@' '@'

  324 capture_entry: '&' "name"
  325              | '=' "name"
  326              | "<-" "name"
  327              | ":=" "name"

  328 capture_list: capture_entry
  329             | capture_list ',' capture_entry

  330 optional_capture_list: %empty
  331                      | '[' '[' capture_list ']' ']'

  332 expr_block: expression_block
  333           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  334 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  335 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  336 expr_numeric_const: "integer constant"
  337                   | "unsigned integer constant"
  338                   | "long integer constant"
  339                   | "unsigned long integer constant"
  340                   | "unsigned int8 constant"
  341                   | "floating point constant"
  342                   | "double constant"

  343 expr_assign: expr
  344            | expr '=' expr
  345            | expr "<-" expr
  346            | expr ":=" expr
  347            | expr "&=" expr
  348            | expr "|=" expr
  349            | expr "^=" expr
  350            | expr "&&=" expr
  351            | expr "||=" expr
  352            | expr "^^=" expr
  353            | expr "+=" expr
  354            | expr "-=" expr
  355            | expr "*=" expr
  356            | expr "/=" expr
  357            | expr "%=" expr
  358            | expr "<<=" expr
  359            | expr ">>=" expr
  360            | expr "<<<=" expr
  361            | expr ">>>=" expr

  362 expr_assign_pipe_right: "@ <|" expr_block
  363                       | "@@ <|" expr_block
  364                       | "$ <|" expr_block
  365                       | expr_call_pipe

  366 expr_assign_pipe: expr '=' expr_assign_pipe_right
  367                 | expr "<-" expr_assign_pipe_right
  368                 | expr "&=" expr_assign_pipe_right
  369                 | expr "|=" expr_assign_pipe_right
  370                 | expr "^=" expr_assign_pipe_right
  371                 | expr "&&=" expr_assign_pipe_right
  372                 | expr "||=" expr_assign_pipe_right
  373                 | expr "^^=" expr_assign_pipe_right
  374                 | expr "+=" expr_assign_pipe_right
  375                 | expr "-=" expr_assign_pipe_right
  376                 | expr "*=" expr_assign_pipe_right
  377                 | expr "/=" expr_assign_pipe_right
  378                 | expr "%=" expr_assign_pipe_right
  379                 | expr "<<=" expr_assign_pipe_right
  380                 | expr ">>=" expr_assign_pipe_right
  381                 | expr "<<<=" expr_assign_pipe_right
  382                 | expr ">>>=" expr_assign_pipe_right

  383 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  384                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  385 expr_method_call: expr "->" "name" '(' ')'
  386                 | expr "->" "name" '(' expr_list ')'

  387 func_addr_name: name_in_namespace
  388               | "$i" '(' expr ')'

  389 func_addr_expr: '@' '@' func_addr_name

  390 $@17: %empty

  391 $@18: %empty

  392 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name

  393 $@19: %empty

  394 $@20: %empty

  395 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

  396 expr_field: expr '.' "name"
  397           | expr '.' '.' "name"
  398           | expr '.' "name" '(' ')'
  399           | expr '.' "name" '(' expr_list ')'

  400 $@21: %empty

  401 $@22: %empty

  402 expr_field: expr '.' $@21 error $@22

  403 expr_call: name_in_namespace '(' ')'
  404          | name_in_namespace '(' make_struct_single ')'
  405          | name_in_namespace '(' expr_list ')'
  406          | basic_type_declaration '(' ')'
  407          | basic_type_declaration '(' expr_list ')'

  408 expr: "null"
  409     | name_in_namespace
  410     | expr_numeric_const
  411     | expr_reader
  412     | string_builder
  413     | make_decl
  414     | "true"
  415     | "false"
  416     | expr_field
  417     | expr_mtag
  418     | '!' expr
  419     | '~' expr
  420     | '+' expr
  421     | '-' expr
  422     | expr "<<" expr
  423     | expr ">>" expr
  424     | expr "<<<" expr
  425     | expr ">>>" expr
  426     | expr '+' expr
  427     | expr '-' expr
  428     | expr '*' expr
  429     | expr '/' expr
  430     | expr '%' expr
  431     | expr '<' expr
  432     | expr '>' expr
  433     | expr "==" expr
  434     | expr "!=" expr
  435     | expr "<=" expr
  436     | expr ">=" expr
  437     | expr '&' expr
  438     | expr '|' expr
  439     | expr '^' expr
  440     | expr "&&" expr
  441     | expr "||" expr
  442     | expr "^^" expr
  443     | expr ".." expr
  444     | "++" expr
  445     | "--" expr
  446     | expr "++"
  447     | expr "--"
  448     | '(' expr_list optional_comma ')'
  449     | expr '[' expr ']'
  450     | expr '.' '[' expr ']'
  451     | expr "?[" expr ']'
  452     | expr '.' "?[" expr ']'
  453     | expr "?." "name"
  454     | expr '.' "?." "name"
  455     | func_addr_expr
  456     | expr_call
  457     | '*' expr
  458     | "deref" '(' expr ')'
  459     | "addr" '(' expr ')'
  460     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  461     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  462     | expr "??" expr
  463     | expr '?' expr ':' expr

  464 $@23: %empty

  465 $@24: %empty

  466 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr "is" basic_type_declaration
  468     | expr "is" "name"
  469     | expr "as" "name"

  470 $@25: %empty

  471 $@26: %empty

  472 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr "as" basic_type_declaration
  474     | expr '?' "as" "name"

  475 $@27: %empty

  476 $@28: %empty

  477 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr '?' "as" basic_type_declaration
  479     | expr_type_info
  480     | expr_type_decl
  481     | expr_cast
  482     | expr_new
  483     | expr_method_call
  484     | expr_named_call
  485     | expr_full_block
  486     | expr "<|" expr
  487     | expr "|>" expr
  488     | expr "|>" basic_type_declaration
  489     | expression_keyword

  490 expr_mtag: "$$" '(' expr ')'
  491          | "$i" '(' expr ')'
  492          | "$v" '(' expr ')'
  493          | "$b" '(' expr ')'
  494          | "$a" '(' expr ')'
  495          | "..."
  496          | "$c" '(' expr ')' '(' ')'
  497          | "$c" '(' expr ')' '(' expr_list ')'
  498          | expr '.' "$f" '(' expr ')'
  499          | expr "?." "$f" '(' expr ')'
  500          | expr '.' '.' "$f" '(' expr ')'
  501          | expr '.' "?." "$f" '(' expr ')'
  502          | expr "as" "$f" '(' expr ')'
  503          | expr '?' "as" "$f" '(' expr ')'
  504          | expr "is" "$f" '(' expr ')'
  505          | '@' '@' "$c" '(' expr ')'

  506 optional_field_annotation: %empty
  507                          | metadata_argument_list

  508 optional_override: %empty
  509                  | "override"
  510                  | "sealed"

  511 optional_constant: %empty
  512                  | "const"

  513 optional_public_or_private_member_variable: %empty
  514                                           | "public"
  515                                           | "private"

  516 optional_static_member_variable: %empty
  517                                | "static"

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  519 struct_variable_declaration_list: %empty

  520 $@29: %empty

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression"

  522 $@30: %empty

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"

  524 $@31: %empty

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

  526 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  527                              | "$a" '(' expr ')'

  528 function_argument_list: function_argument_declaration
  529                       | function_argument_list "end of expression" function_argument_declaration

  530 tuple_type: type_declaration
  531           | "name" ':' type_declaration

  532 tuple_type_list: tuple_type
  533                | tuple_type_list "end of expression" tuple_type

  534 tuple_alias_type_list: %empty
  535                      | tuple_alias_type_list "end of expression"
  536                      | tuple_alias_type_list tuple_type "end of expression"

  537 variant_type: "name" ':' type_declaration

  538 variant_type_list: variant_type
  539                  | variant_type_list "end of expression" variant_type

  540 variant_alias_type_list: %empty
  541                        | variant_alias_type_list "end of expression"
  542                        | variant_alias_type_list variant_type "end of expression"

  543 copy_or_move: '='
  544             | "<-"

  545 variable_declaration: variable_name_with_pos_list
  546                     | variable_name_with_pos_list '&'
  547                     | variable_name_with_pos_list ':' type_declaration
  548                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  549                     | variable_name_with_pos_list copy_or_move expr
  550                     | variable_name_with_pos_list copy_or_move expr_pipe

  551 copy_or_move_or_clone: '='
  552                      | "<-"
  553                      | ":="

  554 optional_ref: %empty
  555             | '&'

  556 let_variable_name_with_pos_list: "name"
  557                                | "$i" '(' expr ')'
  558                                | "name" "aka" "name"
  559                                | let_variable_name_with_pos_list ',' "name"
  560                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  563                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  564                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"
  565                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  566 global_variable_declaration_list: %empty

  567 $@32: %empty

  568 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration

  569 optional_shared: %empty
  570                | "shared"

  571 optional_public_or_private_variable: %empty
  572                                    | "private"
  573                                    | "public"

  574 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  575 $@33: %empty

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

  577 enum_expression: "name"
  578                | "name" '=' expr

  579 enum_list: %empty
  580          | enum_expression
  581          | enum_list ',' enum_expression

  582 optional_public_or_private_alias: %empty
  583                                 | "private"
  584                                 | "public"

  585 $@34: %empty

  586 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration

  587 alias_list: single_alias "end of expression"
  588           | alias_list single_alias "end of expression"

  589 alias_declaration: "typedef" "begin of code block" alias_list "end of code block"
  590                  | "typedef" single_alias "end of expression"

  591 optional_public_or_private_enum: %empty
  592                                | "private"
  593                                | "public"

  594 enum_name: "name"

  595 optional_enum_basic_type_declaration: %empty
  596                                     | ':' enum_basic_type_declaration

  597 $@35: %empty

  598 $@36: %empty

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

  600 optional_structure_parent: %empty
  601                          | ':' name_in_namespace

  602 optional_sealed: %empty
  603                | "sealed"

  604 structure_name: optional_sealed "name" optional_structure_parent

  605 class_or_struct: "class"
  606                | "struct"

  607 optional_public_or_private_structure: %empty
  608                                     | "private"
  609                                     | "public"

  610 optional_struct_variable_declaration_list: %empty
  611                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  612 $@37: %empty

  613 $@38: %empty

  614 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

  615 variable_name_with_pos_list: "name"
  616                            | "$i" '(' expr ')'
  617                            | "name" "aka" "name"
  618                            | variable_name_with_pos_list ',' "name"
  619                            | variable_name_with_pos_list ',' "name" "aka" "name"

  620 basic_type_declaration: "bool"
  621                       | "string"
  622                       | "int"
  623                       | "int8"
  624                       | "int16"
  625                       | "int64"
  626                       | "int2"
  627                       | "int3"
  628                       | "int4"
  629                       | "uint"
  630                       | "uint8"
  631                       | "uint16"
  632                       | "uint64"
  633                       | "uint2"
  634                       | "uint3"
  635                       | "uint4"
  636                       | "float"
  637                       | "float2"
  638                       | "float3"
  639                       | "float4"
  640                       | "void"
  641                       | "range"
  642                       | "urange"
  643                       | "range64"
  644                       | "urange64"
  645                       | "double"
  646                       | "bitfield"

  647 enum_basic_type_declaration: "int"
  648                            | "int8"
  649                            | "int16"
  650                            | "uint"
  651                            | "uint8"
  652                            | "uint16"
  653                            | "int64"
  654                            | "uint64"

  655 structure_type_declaration: name_in_namespace

  656 auto_type_declaration: "auto"
  657                      | "auto" '(' "name" ')'
  658                      | "$t" '(' expr ')'

  659 bitfield_bits: "name"
  660              | bitfield_bits "end of expression" "name"

  661 bitfield_alias_bits: %empty
  662                    | bitfield_alias_bits "end of expression"
  663                    | bitfield_alias_bits "name" "end of expression"

  664 $@39: %empty

  665 $@40: %empty

  666 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40

  667 table_type_pair: type_declaration
  668                | type_declaration "end of expression" type_declaration

  669 dim_list: '[' expr ']'
  670         | dim_list '[' expr ']'

  671 type_declaration_no_options: basic_type_declaration
  672                            | auto_type_declaration
  673                            | bitfield_type_declaration
  674                            | structure_type_declaration
  675                            | type_declaration_no_options dim_list
  676                            | type_declaration_no_options '[' ']'

  677 $@41: %empty

  678 $@42: %empty

  679 type_declaration_no_options: "type" '<' $@41 type_declaration '>' $@42
  680                            | "typedecl" '(' expr ')'
  681                            | '$' name_in_namespace '(' optional_expr_list ')'

  682 $@43: %empty

  683 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  684                            | type_declaration_no_options '-' '[' ']'
  685                            | type_declaration_no_options "explicit"
  686                            | type_declaration_no_options "const"
  687                            | type_declaration_no_options '-' "const"
  688                            | type_declaration_no_options '&'
  689                            | type_declaration_no_options '-' '&'
  690                            | type_declaration_no_options '#'
  691                            | type_declaration_no_options "implicit"
  692                            | type_declaration_no_options '-' '#'
  693                            | type_declaration_no_options "==" "const"
  694                            | type_declaration_no_options "==" '&'
  695                            | type_declaration_no_options '?'

  696 $@44: %empty

  697 $@45: %empty

  698 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' $@45
  699                            | type_declaration_no_options "??"

  700 $@46: %empty

  701 $@47: %empty

  702 type_declaration_no_options: "array" '<' $@46 type_declaration '>' $@47

  703 $@48: %empty

  704 $@49: %empty

  705 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' $@49

  706 $@50: %empty

  707 $@51: %empty

  708 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' $@51
  709                            | "block"

  710 $@52: %empty

  711 $@53: %empty

  712 type_declaration_no_options: "block" '<' $@52 type_declaration '>' $@53

  713 $@54: %empty

  714 $@55: %empty

  715 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55
  716                            | "function"

  717 $@56: %empty

  718 $@57: %empty

  719 type_declaration_no_options: "function" '<' $@56 type_declaration '>' $@57

  720 $@58: %empty

  721 $@59: %empty

  722 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59
  723                            | "lambda"

  724 $@60: %empty

  725 $@61: %empty

  726 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' $@61

  727 $@62: %empty

  728 $@63: %empty

  729 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63

  730 $@64: %empty

  731 $@65: %empty

  732 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' $@65

  733 $@66: %empty

  734 $@67: %empty

  735 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' $@67

  736 type_declaration: type_declaration_no_options
  737                 | type_declaration '|' type_declaration_no_options
  738                 | type_declaration '|' '#'

  739 $@68: %empty

  740 $@69: %empty

  741 $@70: %empty

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

  743 $@71: %empty

  744 $@72: %empty

  745 $@73: %empty

  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

  747 $@74: %empty

  748 $@75: %empty

  749 $@76: %empty

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits $@76 "end of code block"

  751 make_decl: make_struct_decl
  752          | make_dim_decl
  753          | make_table_decl
  754          | array_comprehension
  755          | make_tuple_call

  756 make_struct_fields: "name" copy_or_move expr
  757                   | "name" ":=" expr
  758                   | make_struct_fields ',' "name" copy_or_move expr
  759                   | make_struct_fields ',' "name" ":=" expr
  760                   | "$f" '(' expr ')' copy_or_move expr
  761                   | "$f" '(' expr ')' ":=" expr
  762                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  763                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  764 make_struct_single: make_struct_fields

  765 $@77: %empty

  766 $@78: %empty

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_single ')'

  768 $@79: %empty

  769 $@80: %empty

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

  771 $@81: %empty

  772 $@82: %empty

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

  774 $@83: %empty

  775 $@84: %empty

  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84

  777 make_map_tuple: expr "=>" expr
  778               | expr

  779 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  780 $@85: %empty

  781 $@86: %empty

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' make_struct_single ')'

  783 make_dim_decl: '[' expr_list optional_comma ']'
  784              | "array" '(' expr_list optional_comma ')'

  785 $@87: %empty

  786 $@88: %empty

  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list optional_comma ')'
  788              | "fixed_array" '(' expr_list optional_comma ')'

  789 $@89: %empty

  790 $@90: %empty

  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

  792 expr_map_tuple_list: make_map_tuple
  793                    | expr_map_tuple_list ',' make_map_tuple

  794 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  795                | "table" '(' expr_map_tuple_list optional_comma ')'
  796                | "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  797                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

  798 array_comprehension_where: %empty
  799                          | "end of expression" "where" expr

  800 optional_comma: %empty
  801               | ','

  802 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  803                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 107 123 418
    '#' (35) 690 692 738
    '$' (36) 20 321 681 683
    '%' (37) 35 42 143 430
    '&' (38) 151 324 437 546 555 688 689 694
    '(' (40) 96 105 111 118 119 246 270 271 272 297 298 313 314 315 383 384 385 386 388 398 399 403 404 405 406 407 448 458 459 460 461 490 491 492 493 494 496 497 498 499 500 501 502 503 504 505 527 557 616 657 658 680 681 683 760 761 762 763 767 770 773 779 782 784 787 788 791 795 796 797
    ')' (41) 96 105 111 118 119 246 270 271 272 297 298 313 314 315 383 384 385 386 388 398 399 403 404 405 406 407 448 458 459 460 461 490 491 492 493 494 496 497 498 499 500 501 502 503 504 505 527 557 616 657 658 680 681 683 760 761 762 763 767 770 773 779 782 784 787 788 791 795 796 797
    '*' (42) 141 428 457
    '+' (43) 139 420 426
    ',' (44) 51 85 98 114 296 317 329 384 559 560 581 618 619 758 759 762 763 793 801
    '-' (45) 140 421 427 684 687 689 692
    '.' (46) 43 168 170 171 396 397 398 399 402 450 452 454 498 500 501
    '/' (47) 44 142 429
    ':' (58) 53 54 121 297 463 531 537 547 548 561 562 563 596 601
    "end of expression" (59) 15 16 72 218 222 223 230 231 236 237 238 248 279 284 297 298 315 521 523 529 533 535 536 539 541 542 561 562 564 587 588 590 660 662 663 668 797 799 802 803
    '<' (60) 144 251 254 267 303 306 309 312 314 315 392 395 431 460 461 466 472 477 666 679 683 698 702 705 708 712 715 719 722 726 729 732 735 767 770 773 776 782 787 791 796 797
    '=' (61) 77 89 90 91 92 93 94 96 325 344 366 543 551 578 586
    '>' (62) 145 251 254 267 303 306 309 312 314 315 392 395 432 460 461 466 472 477 666 679 683 698 702 705 708 712 715 719 722 726 729 732 735 767 770 773 776 782 787 791 796 797
    '?' (63) 180 181 463 474 477 478 503 695
    '@' (64) 99 100 322 323 389 392 395 505
    '[' (91) 116 166 331 383 384 449 450 669 670 676 684 783 802
    ']' (93) 116 166 167 331 383 384 449 450 451 452 669 670 676 684 783 802
    '^' (94) 153 439
    "begin of code block" (123) 214 215 574 589 599 611 742 746 750 794 803
    '|' (124) 152 438 737 738
    "end of code block" (125) 214 215 574 589 599 611 742 746 750 794 803
    '~' (126) 124 419
    error (256) 241 402
    "lexer error" (258)
    "struct" (259) 606 767
    "class" (260) 605 770
    "let" (261) 288 291
    "def" (262) 207 523 525
    "while" (263) 75
    "if" (264) 62 72
    "static_if" (265) 63
    "else" (266) 60 65
    "for" (267) 73 802 803
    "recover" (268) 287
    "true" (269) 82 93 414
    "false" (270) 83 94 415
    "new" (271) 269 270 271 272 273
    "typeinfo" (272) 313 314 315
    "type" (273) 87 312 466 472 477 679
    "in" (274) 73 88 802 803
    "is" (275) 176 178 466 467 468 504
    "as" (276) 46 177 179 180 181 469 472 473 474 477 478 502 503
    "elif" (277) 57
    "static_elif" (278) 58
    "array" (279) 702 784 787
    "return" (280) 276 277 278 280 281
    "null" (281) 408
    "break" (282) 274
    "try" (283) 287
    "options" (284) 36
    "table" (285) 705 795 796 797
    "expect" (286) 49
    "const" (287) 512 686 687 693
    "require" (288) 37 102
    "operator" (289) 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181
    "enum" (290) 599
    "finally" (291) 215
    "delete" (292) 174 263 264
    "deref" (293) 458
    "typedef" (294) 589 590
    "typedecl" (295) 680
    "with" (296) 76
    "aka" (297) 558 560 617 619
    "assume" (298) 77
    "cast" (299) 303
    "override" (300) 509
    "abstract" (301) 523
    "upcast" (302) 306
    "iterator" (303) 708
    "var" (304) 289 292
    "addr" (305) 459
    "continue" (306) 275
    "where" (307) 799
    "pass" (308) 238
    "reinterpret" (309) 309
    "module" (310) 22
    "public" (311) 18 48 210 514 573 584 593 609
    "label" (312) 54 55
    "goto" (313) 55 56
    "implicit" (314) 691
    "explicit" (315) 264 685
    "shared" (316) 570
    "private" (317) 19 103 209 515 572 583 592 608
    "smart_ptr" (318) 698
    "unsafe" (319) 74
    "inscope" (320) 293
    "static" (321) 517
    "fixed_array" (322) 788 791
    "default" (323) 776
    "bool" (324) 182 620
    "void" (325) 640
    "string" (326) 183 621
    "auto" (327) 656 657
    "int" (328) 184 622 647
    "int2" (329) 185 626
    "int3" (330) 186 627
    "int4" (331) 187 628
    "uint" (332) 188 629 650
    "bitfield" (333) 646 666 750
    "uint2" (334) 189 633
    "uint3" (335) 190 634
    "uint4" (336) 191 635
    "float" (337) 192 636
    "float2" (338) 193 637
    "float3" (339) 194 638
    "float4" (340) 195 639
    "range" (341) 196 641
    "urange" (342) 197 642
    "range64" (343) 198 643
    "urange64" (344) 199 644
    "block" (345) 709 712 715
    "int64" (346) 200 625 653
    "uint64" (347) 201 632 654
    "double" (348) 202 645
    "function" (349) 716 719 722
    "lambda" (350) 723 726 729
    "int8" (351) 203 623 648
    "uint8" (352) 204 630 651
    "int16" (353) 205 624 649
    "uint16" (354) 206 631 652
    "tuple" (355) 732 742 779 782
    "variant" (356) 735 746 773
    "generator" (357) 460 461
    "yield" (358) 282 283 285 286
    "sealed" (359) 510 603
    "+=" (360) 125 353 374
    "-=" (361) 126 354 375
    "/=" (362) 128 356 377
    "*=" (363) 127 355 376
    "%=" (364) 129 357 378
    "&=" (365) 130 347 368
    "|=" (366) 131 348 369
    "^=" (367) 132 349 370
    "<<" (368) 158 422
    ">>" (369) 159 423
    "++" (370) 154 156 444 446
    "--" (371) 155 157 445 447
    "<=" (372) 149 435
    "<<=" (373) 160 358 379
    ">>=" (374) 161 359 380
    ">=" (375) 150 436
    "==" (376) 147 433 693 694
    "!=" (377) 148 434
    "->" (378) 385 386
    "<-" (379) 278 281 283 286 320 326 345 367 544 552
    "??" (380) 175 462 699
    "?." (381) 169 172 453 454 499 501
    "?[" (382) 167 451 452
    "<|" (383) 486
    " <|" (384) 255
    "$ <|" (385) 258 364
    "@ <|" (386) 256 362
    "@@ <|" (387) 257 363
    "|>" (388) 112 487 488
    ":=" (389) 171 173 327 346 553 757 759 761 763
    "<<<" (390) 162 424
    ">>>" (391) 163 425
    "<<<=" (392) 164 360 381
    ">>>=" (393) 165 361 382
    "=>" (394) 319 320 777
    "::" (395) 261 262
    "&&" (396) 108 136 440
    "||" (397) 109 137 441
    "^^" (398) 110 138 442
    "&&=" (399) 133 350 371
    "||=" (400) 134 351 372
    "^^=" (401) 135 352 373
    ".." (402) 146 443
    "$$" (403) 490
    "$i" (404) 388 491 557 616
    "$v" (405) 492
    "$b" (406) 493
    "$a" (407) 494 527
    "$t" (408) 658
    "$c" (409) 496 497 505
    "$f" (410) 498 499 500 501 502 503 504 760 761 762 763
    "..." (411) 495
    "integer constant" <i> (412) 52 53 54 55 80 91 336
    "long integer constant" <i64> (413) 338
    "unsigned integer constant" <ui> (414) 337
    "unsigned long integer constant" <ui64> (415) 339
    "unsigned int8 constant" <ui> (416) 340
    "floating point constant" <fd> (417) 81 92 341
    "double constant" <d> (418) 342
    "name" <s> (419) 21 38 46 77 79 86 90 122 170 171 172 178 179 181 260 261 262 295 296 314 315 324 325 326 327 385 386 396 397 398 399 453 454 468 469 474 531 537 556 558 559 560 577 578 586 594 604 615 617 618 619 657 659 660 663 742 746 750 756 757 758 759
    "keyword" <s> (420) 39 242 251
    "type function" <s> (421) 40 254
    "start of the string" (422) 27 31
    STRING_CHARACTER <ch> (423) 23 25 32 33
    STRING_CHARACTER_ESC (424) 24 26
    "end of the string" (425) 27 31
    "{" (426) 30
    "}" (427) 30
    "end of failed eader macro" (428)
    ";}}" (429)
    ";}]" (430)
    ";]]" (431)
    ",]]" (432)
    ",}]" (433)
    UNARY_MINUS (434)
    UNARY_PLUS (435)
    PRE_INC (436)
    PRE_DEC (437)
    POST_INC (438)
    POST_DEC (439)
    DEREF (440)


Nonterminals, with rules where they appear

    $accept (213)
        on left: 0
    program (214)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (215)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (216)
        on left: 17 18 19
        on right: 22
    module_name <s> (217)
        on left: 20 21
        on right: 22
    module_declaration (218)
        on left: 22
        on right: 2
    character_sequence <s> (219)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (220)
        on left: 27
        on right: 78 89
    string_builder_body <pExpression> (221)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (222)
        on left: 31
        on right: 412
    reader_character_sequence (223)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (224)
        on left: 35
        on right: 16 411
    $@1 (225)
        on left: 34
        on right: 35
    options_declaration (226)
        on left: 36
        on right: 9
    require_declaration (227)
        on left: 37
        on right: 8
    keyword_or_name <s> (228)
        on left: 38 39 40
        on right: 41 43 44
    require_module_name <s> (229)
        on left: 41 42 43 44
        on right: 42 43 44 45 46
    require_module (230)
        on left: 45 46
        on right: 37
    is_public_module <b> (231)
        on left: 47 48
        on right: 45 46
    expect_declaration (232)
        on left: 49
        on right: 7
    expect_list (233)
        on left: 50 51
        on right: 49 51
    expect_error (234)
        on left: 52 53
        on right: 50 51
    expression_label <pExpression> (235)
        on left: 54
        on right: 236
    expression_goto <pExpression> (236)
        on left: 55 56
        on right: 237
    elif_or_static_elif <b> (237)
        on left: 57 58
        on right: 61
    expression_else <pExpression> (238)
        on left: 59 60 61
        on right: 61 71
    if_or_static_if <b> (239)
        on left: 62 63
        on right: 71
    expression_else_one_liner <pExpression> (240)
        on left: 64 65
        on right: 72
    expression_if_one_liner <pExpression> (241)
        on left: 66 67 68 69 70
        on right: 65 72
    expression_if_then_else <pExpression> (242)
        on left: 71 72
        on right: 234
    expression_for_loop <pExpression> (243)
        on left: 73
        on right: 229
    expression_unsafe <pExpression> (244)
        on left: 74
        on right: 226
    expression_while_loop <pExpression> (245)
        on left: 75
        on right: 225
    expression_with <pExpression> (246)
        on left: 76
        on right: 227
    expression_with_alias <pExpression> (247)
        on left: 77
        on right: 228
    annotation_argument_value <aa> (248)
        on left: 78 79 80 81 82 83
        on right: 84 85
    annotation_argument_value_list <aaList> (249)
        on left: 84 85
        on right: 85 96
    annotation_argument_name <s> (250)
        on left: 86 87 88
        on right: 89 90 91 92 93 94 95 96
    annotation_argument <aa> (251)
        on left: 89 90 91 92 93 94 95 96
        on right: 97 98 99 100
    annotation_argument_list <aaList> (252)
        on left: 97 98
        on right: 36 98 105
    metadata_argument_list <aaList> (253)
        on left: 99 100
        on right: 100 507
    annotation_declaration_name <s> (254)
        on left: 101 102 103
        on right: 104 105
    annotation_declaration_basic <fa> (255)
        on left: 104 105
        on right: 106
    annotation_declaration <fa> (256)
        on left: 106 107 108 109 110 111 112
        on right: 107 108 109 110 111 112 113 114
    annotation_list <faList> (257)
        on left: 113 114
        on right: 114 116
    optional_annotation_list <faList> (258)
        on left: 115 116
        on right: 207 333 334 335 523 525 599 614
    optional_function_argument_list <pVarDeclList> (259)
        on left: 117 118 119
        on right: 211 333 334 335 395 715 722 729
    optional_function_type <pTypeDecl> (260)
        on left: 120 121
        on right: 211 333 334 335 395 715 722 729
    function_name <s> (261)
        on left: 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206
        on right: 211
    global_function_declaration (262)
        on left: 207
        on right: 6
    optional_public_or_private_function <b> (263)
        on left: 208 209 210
        on right: 213
    function_declaration_header <pFuncDecl> (264)
        on left: 211
        on right: 213 523 525
    function_declaration <pFuncDecl> (265)
        on left: 213
        on right: 207
    $@2 (266)
        on left: 212
        on right: 213
    expression_block <pExpression> (267)
        on left: 214 215
        on right: 60 61 71 73 74 75 76 213 242 287 318 332 335 525
    expr_call_pipe <pExpression> (268)
        on left: 216 217
        on right: 259 365
    expression_any <pExpression> (269)
        on left: 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
        on right: 240
    expressions <pExpression> (270)
        on left: 239 240 241
        on right: 214 215 240 241
    expr_keyword <pExpression> (271)
        on left: 242
        on right: 220
    optional_expr_list <pExpression> (272)
        on left: 243 244
        on right: 246 681 683
    optional_expr_list_in_braces <pExpression> (273)
        on left: 245 246
        on right: 254
    type_declaration_no_options_list <pTypeDeclList> (274)
        on left: 247 248
        on right: 248 251 254 683
    expression_keyword <pExpression> (275)
        on left: 251 254
        on right: 217 489
    $@3 (276)
        on left: 249
        on right: 251
    $@4 (277)
        on left: 250
        on right: 251
    $@5 (278)
        on left: 252
        on right: 254
    $@6 (279)
        on left: 253
        on right: 254
    expr_pipe <pExpression> (280)
        on left: 255 256 257 258 259
        on right: 219 280 281 285 286 550 563 565
    name_in_namespace <s> (281)
        on left: 260 261 262
        on right: 35 101 313 314 315 383 384 387 403 404 405 409 601 655 681 683
    expression_delete <pExpression> (282)
        on left: 263 264
        on right: 223
    new_type_declaration <pTypeDecl> (283)
        on left: 267 268
        on right: 269 270 271 272
    $@7 (284)
        on left: 265
        on right: 267
    $@8 (285)
        on left: 266
        on right: 267
    expr_new <pExpression> (286)
        on left: 269 270 271 272 273
        on right: 482
    expression_break <pExpression> (287)
        on left: 274
        on right: 69 230
    expression_continue <pExpression> (288)
        on left: 275
        on right: 70 231
    expression_return_no_pipe <pExpression> (289)
        on left: 276 277 278
        on right: 67 279
    expression_return <pExpression> (290)
        on left: 279 280 281
        on right: 232
    expression_yield_no_pipe <pExpression> (291)
        on left: 282 283
        on right: 68 284
    expression_yield <pExpression> (292)
        on left: 284 285 286
        on right: 233
    expression_try_catch <pExpression> (293)
        on left: 287
        on right: 235
    kwd_let_var_or_nothing <b> (294)
        on left: 288 289 290
        on right: 526
    kwd_let <b> (295)
        on left: 291 292
        on right: 299 300 574 576
    optional_in_scope <b> (296)
        on left: 293 294
        on right: 299 300
    tuple_expansion <pNameList> (297)
        on left: 295 296
        on right: 296 297 298
    tuple_expansion_variable_declaration <pVarDecl> (298)
        on left: 297 298
        on right: 300
    expression_let <pExpression> (299)
        on left: 299 300
        on right: 224
    expr_cast <pExpression> (300)
        on left: 303 306 309
        on right: 481
    $@9 (301)
        on left: 301
        on right: 303
    $@10 (302)
        on left: 302
        on right: 303
    $@11 (303)
        on left: 304
        on right: 306
    $@12 (304)
        on left: 305
        on right: 306
    $@13 (305)
        on left: 307
        on right: 309
    $@14 (306)
        on left: 308
        on right: 309
    expr_type_decl <pExpression> (307)
        on left: 312
        on right: 480
    $@15 (308)
        on left: 310
        on right: 312
    $@16 (309)
        on left: 311
        on right: 312
    expr_type_info <pExpression> (310)
        on left: 313 314 315
        on right: 479
    expr_list <pExpression> (311)
        on left: 316 317
        on right: 73 244 271 277 278 317 384 386 399 405 407 448 497 779 783 784 787 788 791 802 803
    block_or_simple_block <pExpression> (312)
        on left: 318 319 320
        on right: 333 334
    block_or_lambda <i> (313)
        on left: 321 322 323
        on right: 333 334 335
    capture_entry <pCapt> (314)
        on left: 324 325 326 327
        on right: 328 329
    capture_list <pCaptList> (315)
        on left: 328 329
        on right: 329 331
    optional_capture_list <pCaptList> (316)
        on left: 330 331
        on right: 333 334 335 460 461
    expr_block <pExpression> (317)
        on left: 332 333
        on right: 255 256 257 258 362 363 364
    expr_full_block <pExpression> (318)
        on left: 334
        on right: 485
    expr_full_block_assumed_piped <pExpression> (319)
        on left: 335
        on right: 216 217
    expr_numeric_const <pExpression> (320)
        on left: 336 337 338 339 340 341 342
        on right: 410
    expr_assign <pExpression> (321)
        on left: 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361
        on right: 222 255
    expr_assign_pipe_right <pExpression> (322)
        on left: 362 363 364 365
        on right: 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382
    expr_assign_pipe <pExpression> (323)
        on left: 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382
        on right: 221
    expr_named_call <pExpression> (324)
        on left: 383 384
        on right: 484
    expr_method_call <pExpression> (325)
        on left: 385 386
        on right: 483
    func_addr_name <pExpression> (326)
        on left: 387 388
        on right: 389 392 395
    func_addr_expr <pExpression> (327)
        on left: 389 392 395
        on right: 455
    $@17 (328)
        on left: 390
        on right: 392
    $@18 (329)
        on left: 391
        on right: 392
    $@19 (330)
        on left: 393
        on right: 395
    $@20 (331)
        on left: 394
        on right: 395
    expr_field <pExpression> (332)
        on left: 396 397 398 399 402
        on right: 416
    $@21 (333)
        on left: 400
        on right: 402
    $@22 (334)
        on left: 401
        on right: 402
    expr_call <pExpression> (335)
        on left: 403 404 405 406 407
        on right: 456
    expr <pExpression> (336)
        on left: 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 466 467 468 469 472 473 474 477 478 479 480 481 482 483 484 485 486 487 488 489
        on right
    $@23 (337)
        on left: 464
        on right: 466
    $@24 (338)
        on left: 465
        on right: 466
    $@25 (339)
        on left: 470
        on right: 472
    $@26 (340)
        on left: 471
        on right: 472
    $@27 (341)
        on left: 475
        on right: 477
    $@28 (342)
        on left: 476
        on right: 477
    expr_mtag <pExpression> (343)
        on left: 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505
        on right: 417
    optional_field_annotation <aaList> (344)
        on left: 506 507
        on right: 518 526 568 576
    optional_override <i> (345)
        on left: 508 509 510
        on right: 518 525
    optional_constant <b> (346)
        on left: 511 512
        on right: 523 525
    optional_public_or_private_member_variable <b> (347)
        on left: 513 514 515
        on right: 518 523 525
    optional_static_member_variable <b> (348)
        on left: 516 517
        on right: 518 525
    structure_variable_declaration <pVarDecl> (349)
        on left: 518
        on right: 521
    struct_variable_declaration_list <pVarDeclList> (350)
        on left: 519 521 523 525
        on right: 521 523 525 611
    $@29 (351)
        on left: 520
        on right: 521
    $@30 (352)
        on left: 522
        on right: 523
    $@31 (353)
        on left: 524
        on right: 525
    function_argument_declaration <pVarDecl> (354)
        on left: 526 527
        on right: 528 529
    function_argument_list <pVarDeclList> (355)
        on left: 528 529
        on right: 119 529
    tuple_type <pVarDecl> (356)
        on left: 530 531
        on right: 532 533 536
    tuple_type_list <pVarDeclList> (357)
        on left: 532 533
        on right: 533 732
    tuple_alias_type_list <pVarDeclList> (358)
        on left: 534 535 536
        on right: 535 536 742
    variant_type <pVarDecl> (359)
        on left: 537
        on right: 538 539 542
    variant_type_list <pVarDeclList> (360)
        on left: 538 539
        on right: 539 735
    variant_alias_type_list <pVarDeclList> (361)
        on left: 540 541 542
        on right: 541 542 746
    copy_or_move <b> (362)
        on left: 543 544
        on right: 548 549 550 756 758 760 762
    variable_declaration <pVarDecl> (363)
        on left: 545 546 547 548 549 550
        on right: 518 526
    copy_or_move_or_clone <i> (364)
        on left: 551 552 553
        on right: 297 298 562 563 564 565
    optional_ref <b> (365)
        on left: 554 555
        on right: 298 564 565
    let_variable_name_with_pos_list <pNameWithPosList> (366)
        on left: 556 557 558 559 560
        on right: 559 560 561 562 563 564 565
    let_variable_declaration <pVarDecl> (367)
        on left: 561 562 563 564 565
        on right: 299 568 576
    global_variable_declaration_list <pVarDeclList> (368)
        on left: 566 568
        on right: 568 574
    $@32 (369)
        on left: 567
        on right: 568
    optional_shared <b> (370)
        on left: 569 570
        on right: 22 574 576
    optional_public_or_private_variable <b> (371)
        on left: 571 572 573
        on right: 574 576
    global_let (372)
        on left: 574 576
        on right: 5
    $@33 (373)
        on left: 575
        on right: 576
    enum_expression <pEnumPair> (374)
        on left: 577 578
        on right: 580 581
    enum_list <pEnum> (375)
        on left: 579 580 581
        on right: 581 599
    optional_public_or_private_alias <b> (376)
        on left: 582 583 584
        on right: 586 742 746 750
    single_alias (377)
        on left: 586
        on right: 587 588 590
    $@34 (378)
        on left: 585
        on right: 586
    alias_list (379)
        on left: 587 588
        on right: 588 589
    alias_declaration (380)
        on left: 589 590
        on right: 10
    optional_public_or_private_enum <b> (381)
        on left: 591 592 593
        on right: 599
    enum_name <pEnum> (382)
        on left: 594
        on right: 599
    optional_enum_basic_type_declaration <type> (383)
        on left: 595 596
        on right: 599
    enum_declaration (384)
        on left: 599
        on right: 4
    $@35 (385)
        on left: 597
        on right: 599
    $@36 (386)
        on left: 598
        on right: 599
    optional_structure_parent <s> (387)
        on left: 600 601
        on right: 604
    optional_sealed <b> (388)
        on left: 602 603
        on right: 604
    structure_name <pStructure> (389)
        on left: 604
        on right: 614
    class_or_struct <b> (390)
        on left: 605 606
        on right: 614
    optional_public_or_private_structure <b> (391)
        on left: 607 608 609
        on right: 614
    optional_struct_variable_declaration_list <pVarDeclList> (392)
        on left: 610 611
        on right: 614
    structure_declaration (393)
        on left: 614
        on right: 3
    $@37 (394)
        on left: 612
        on right: 614
    $@38 (395)
        on left: 613
        on right: 614
    variable_name_with_pos_list <pNameWithPosList> (396)
        on left: 615 616 617 618 619
        on right: 73 545 546 547 548 549 550 618 619 802 803
    basic_type_declaration <type> (397)
        on left: 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646
        on right: 406 407 467 473 478 488 671
    enum_basic_type_declaration <type> (398)
        on left: 647 648 649 650 651 652 653 654
        on right: 596
    structure_type_declaration <pTypeDecl> (399)
        on left: 655
        on right: 268 674
    auto_type_declaration <pTypeDecl> (400)
        on left: 656 657 658
        on right: 672
    bitfield_bits <pNameList> (401)
        on left: 659 660
        on right: 660 666
    bitfield_alias_bits <pNameList> (402)
        on left: 661 662 663
        on right: 662 663 750
    bitfield_type_declaration <pTypeDecl> (403)
        on left: 666
        on right: 673
    $@39 (404)
        on left: 664
        on right: 666
    $@40 (405)
        on left: 665
        on right: 666
    table_type_pair <aTypePair> (406)
        on left: 667 668
        on right: 705
    dim_list <pTypeDecl> (407)
        on left: 669 670
        on right: 670 675
    type_declaration_no_options <pTypeDecl> (408)
        on left: 671 672 673 674 675 676 679 680 681 683 684 685 686 687 688 689 690 691 692 693 694 695 698 699 702 705 708 709 712 715 716 719 722 723 726 729 732 735
        on right: 297 303 306 309 392 460 461 466 561 562 563 675 676 684 685 686 687 688 689 690 691 692 693 694 695 699 736 737 767 770 773 776 782 787 791 796 797
    $@41 (409)
        on left: 677
        on right: 679
    $@42 (410)
        on left: 678
        on right: 679
    $@43 (411)
        on left: 682
        on right: 683
    $@44 (412)
        on left: 696
        on right: 698
    $@45 (413)
        on left: 697
        on right: 698
    $@46 (414)
        on left: 700
        on right: 702
    $@47 (415)
        on left: 701
        on right: 702
    $@48 (416)
        on left: 703
        on right: 705
    $@49 (417)
        on left: 704
        on right: 705
    $@50 (418)
        on left: 706
        on right: 708
    $@51 (419)
        on left: 707
        on right: 708
    $@52 (420)
        on left: 710
        on right: 712
    $@53 (421)
        on left: 711
        on right: 712
    $@54 (422)
        on left: 713
        on right: 715
    $@55 (423)
        on left: 714
        on right: 715
    $@56 (424)
        on left: 717
        on right: 719
    $@57 (425)
        on left: 718
        on right: 719
    $@58 (426)
        on left: 720
        on right: 722
    $@59 (427)
        on left: 721
        on right: 722
    $@60 (428)
        on left: 724
        on right: 726
    $@61 (429)
        on left: 725
        on right: 726
    $@62 (430)
        on left: 727
        on right: 729
    $@63 (431)
        on left: 728
        on right: 729
    $@64 (432)
        on left: 730
        on right: 732
    $@65 (433)
        on left: 731
        on right: 732
    $@66 (434)
        on left: 733
        on right: 735
    $@67 (435)
        on left: 734
        on right: 735
    type_declaration <pTypeDecl> (436)
        on left: 736 737 738
        on right: 121 247 248 267 312 472 477 530 531 537 547 548 586 667 668 679 698 702 708 712 719 726 737 738
    tuple_alias_declaration (437)
        on left: 742
        on right: 12
    $@68 (438)
        on left: 739
        on right: 742
    $@69 (439)
        on left: 740
        on right: 742
    $@70 (440)
        on left: 741
        on right: 742
    variant_alias_declaration (441)
        on left: 746
        on right: 11
    $@71 (442)
        on left: 743
        on right: 746
    $@72 (443)
        on left: 744
        on right: 746
    $@73 (444)
        on left: 745
        on right: 746
    bitfield_alias_declaration (445)
        on left: 750
        on right: 13
    $@74 (446)
        on left: 747
        on right: 750
    $@75 (447)
        on left: 748
        on right: 750
    $@76 (448)
        on left: 749
        on right: 750
    make_decl <pExpression> (449)
        on left: 751 752 753 754 755
        on right: 273 413
    make_struct_fields <pMakeStruct> (450)
        on left: 756 757 758 759 760 761 762 763
        on right: 383 384 758 759 762 763 764
    make_struct_single <pExpression> (451)
        on left: 764
        on right: 272 404 767 770 773 782
    make_struct_decl <pExpression> (452)
        on left: 767 770 773 776
        on right: 751
    $@77 (453)
        on left: 765
        on right: 767
    $@78 (454)
        on left: 766
        on right: 767
    $@79 (455)
        on left: 768
        on right: 770
    $@80 (456)
        on left: 769
        on right: 770
    $@81 (457)
        on left: 771
        on right: 773
    $@82 (458)
        on left: 772
        on right: 773
    $@83 (459)
        on left: 774
        on right: 776
    $@84 (460)
        on left: 775
        on right: 776
    make_map_tuple <pExpression> (461)
        on left: 777 778
        on right: 792 793 803
    make_tuple_call <pExpression> (462)
        on left: 779 782
        on right: 755
    $@85 (463)
        on left: 780
        on right: 782
    $@86 (464)
        on left: 781
        on right: 782
    make_dim_decl <pExpression> (465)
        on left: 783 784 787 788 791
        on right: 752
    $@87 (466)
        on left: 785
        on right: 787
    $@88 (467)
        on left: 786
        on right: 787
    $@89 (468)
        on left: 789
        on right: 791
    $@90 (469)
        on left: 790
        on right: 791
    expr_map_tuple_list <pExpression> (470)
        on left: 792 793
        on right: 793 794 795 796 797
    make_table_decl <pExpression> (471)
        on left: 794 795 796 797
        on right: 753
    array_comprehension_where <pExpression> (472)
        on left: 798 799
        on right: 802 803
    optional_comma <b> (473)
        on left: 800 801
        on right: 448 599 779 783 784 787 788 791 794 795 796 797
    array_comprehension <pExpression> (474)
        on left: 802 803
        on right: 754


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 115 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  291 kwd_let: "let" .

    $default  reduce using rule 291 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   49 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 46
    require_module       go to state 47


State 7

  589 alias_declaration: "typedef" . "begin of code block" alias_list "end of code block"
  590                  | "typedef" . single_alias "end of expression"

    "public"               shift, and go to state 48
    "private"              shift, and go to state 49
    "begin of code block"  shift, and go to state 50

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 52


State 8

  292 kwd_let: "var" .

    $default  reduce using rule 292 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 53
    '$'     shift, and go to state 54

    module_name  go to state 55


State 10

  750 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits $@76 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 56


State 11

  742 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 57


State 12

  746 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 58


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 61


State 15

  116 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 69
    annotation_list               go to state 70
    name_in_namespace             go to state 71


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 72


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  207 global_function_declaration: optional_annotation_list . "def" function_declaration
  599 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"
  614 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 73
    "class"   shift, and go to state 74
    "def"     shift, and go to state 75
    "enum"    shift, and go to state 76

    class_or_struct  go to state 77


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  574 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  576           | kwd_let . optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 78

    $default  reduce using rule 569 (optional_shared)

    optional_shared  go to state 79


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   87 annotation_argument_name: "type" .

    $default  reduce using rule 87 (annotation_argument_name)


State 33

   88 annotation_argument_name: "in" .

    $default  reduce using rule 88 (annotation_argument_name)


State 34

   86 annotation_argument_name: "name" .

    $default  reduce using rule 86 (annotation_argument_name)


State 35

   89 annotation_argument: annotation_argument_name . '=' string_constant
   90                    | annotation_argument_name . '=' "name"
   91                    | annotation_argument_name . '=' "integer constant"
   92                    | annotation_argument_name . '=' "floating point constant"
   93                    | annotation_argument_name . '=' "true"
   94                    | annotation_argument_name . '=' "false"
   95                    | annotation_argument_name .
   96                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 80

    $default  reduce using rule 95 (annotation_argument)


State 36

   97 annotation_argument_list: annotation_argument .

    $default  reduce using rule 97 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 81

    $default  reduce using rule 36 (options_declaration)


State 38

   52 expect_error: "integer constant" .
   53             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 82

    $default  reduce using rule 52 (expect_error)


State 39

   49 expect_declaration: "expect" expect_list .
   51 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 83

    $default  reduce using rule 49 (expect_declaration)


State 40

   50 expect_list: expect_error .

    $default  reduce using rule 50 (expect_list)


State 41

   38 keyword_or_name: "name" .

    $default  reduce using rule 38 (keyword_or_name)


State 42

   39 keyword_or_name: "keyword" .

    $default  reduce using rule 39 (keyword_or_name)


State 43

   40 keyword_or_name: "type function" .

    $default  reduce using rule 40 (keyword_or_name)


State 44

   42 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43
    '%'              shift, and go to state 44

    keyword_or_name      go to state 45
    require_module_name  go to state 84


State 45

   41 require_module_name: keyword_or_name .

    $default  reduce using rule 41 (require_module_name)


State 46

   43 require_module_name: require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name
   45 require_module: require_module_name . is_public_module
   46               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 85
    "public"  shift, and go to state 86
    '/'       shift, and go to state 87
    '.'       shift, and go to state 88

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 89


State 47

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 48

  584 optional_public_or_private_alias: "public" .

    $default  reduce using rule 584 (optional_public_or_private_alias)


State 49

  583 optional_public_or_private_alias: "private" .

    $default  reduce using rule 583 (optional_public_or_private_alias)


State 50

  589 alias_declaration: "typedef" "begin of code block" . alias_list "end of code block"

    "public"   shift, and go to state 48
    "private"  shift, and go to state 49

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 90
    alias_list                        go to state 91


State 51

  586 single_alias: optional_public_or_private_alias . "name" $@34 '=' type_declaration

    "name"  shift, and go to state 92


State 52

  590 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 93


State 53

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 54

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 55

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 78

    $default  reduce using rule 569 (optional_shared)

    optional_shared  go to state 94


State 56

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@74 "begin of code block" $@75 bitfield_alias_bits $@76 "end of code block"

    "name"  shift, and go to state 95


State 57

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "name"  shift, and go to state 96


State 58

  746 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "name"  shift, and go to state 97


State 59

  262 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 98


State 60

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"

    "::"  shift, and go to state 99

    "::"      [reduce using rule 260 (name_in_namespace)]
    $default  reduce using rule 260 (name_in_namespace)


State 61

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 100


State 62

  102 annotation_declaration_name: "require" .

    $default  reduce using rule 102 (annotation_declaration_name)


State 63

  103 annotation_declaration_name: "private" .

    $default  reduce using rule 103 (annotation_declaration_name)


State 64

  112 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 101
    name_in_namespace             go to state 71


State 65

  107 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 102
    name_in_namespace             go to state 71


State 66

  111 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 103
    name_in_namespace             go to state 71


State 67

  104 annotation_declaration_basic: annotation_declaration_name .
  105                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 104

    $default  reduce using rule 104 (annotation_declaration_basic)


State 68

  106 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 106 (annotation_declaration)


State 69

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  113 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 113 (annotation_list)


State 70

  114 annotation_list: annotation_list . ',' annotation_declaration
  116 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 108
    ']'  shift, and go to state 109


State 71

  101 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 101 (annotation_declaration_name)


State 72

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 73

  606 class_or_struct: "struct" .

    $default  reduce using rule 606 (class_or_struct)


State 74

  605 class_or_struct: "class" .

    $default  reduce using rule 605 (class_or_struct)


State 75

  207 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 110
    "private"  shift, and go to state 111

    $default  reduce using rule 208 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 112
    function_declaration                 go to state 113


State 76

  599 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 591 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 116


State 77

  614 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list

    "public"   shift, and go to state 117
    "private"  shift, and go to state 118

    $default  reduce using rule 607 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 119


State 78

  570 optional_shared: "shared" .

    $default  reduce using rule 570 (optional_shared)


State 79

  574 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  576           | kwd_let optional_shared . optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 120
    "private"  shift, and go to state 121

    $default  reduce using rule 571 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 122


State 80

   89 annotation_argument: annotation_argument_name '=' . string_constant
   90                    | annotation_argument_name '=' . "name"
   91                    | annotation_argument_name '=' . "integer constant"
   92                    | annotation_argument_name '=' . "floating point constant"
   93                    | annotation_argument_name '=' . "true"
   94                    | annotation_argument_name '=' . "false"
   96                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 123
    "false"                    shift, and go to state 124
    "integer constant"         shift, and go to state 125
    "floating point constant"  shift, and go to state 126
    "name"                     shift, and go to state 127
    "start of the string"      shift, and go to state 128
    '('                        shift, and go to state 129

    string_constant  go to state 130


State 81

   98 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 131


State 82

   53 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 132


State 83

   51 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 133


State 84

   42 require_module_name: '%' require_module_name .
   43                    | require_module_name . '.' keyword_or_name
   44                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 88

    $default  reduce using rule 42 (require_module_name)


State 85

   46 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 134


State 86

   48 is_public_module: "public" .

    $default  reduce using rule 48 (is_public_module)


State 87

   44 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 135


State 88

   43 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 41
    "keyword"        shift, and go to state 42
    "type function"  shift, and go to state 43

    keyword_or_name  go to state 136


State 89

   45 require_module: require_module_name is_public_module .

    $default  reduce using rule 45 (require_module)


State 90

  587 alias_list: single_alias . "end of expression"

    "end of expression"  shift, and go to state 137


State 91

  588 alias_list: alias_list . single_alias "end of expression"
  589 alias_declaration: "typedef" "begin of code block" alias_list . "end of code block"

    "public"             shift, and go to state 48
    "private"            shift, and go to state 49
    "end of code block"  shift, and go to state 138

    $default  reduce using rule 582 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 51
    single_alias                      go to state 139


State 92

  586 single_alias: optional_public_or_private_alias "name" . $@34 '=' type_declaration

    $default  reduce using rule 585 ($@34)

    $@34  go to state 140


State 93

  590 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 590 (alias_declaration)


State 94

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 141
    "private"  shift, and go to state 142

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 143


State 95

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@74 "begin of code block" $@75 bitfield_alias_bits $@76 "end of code block"

    $default  reduce using rule 747 ($@74)

    $@74  go to state 144


State 96

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 739 ($@68)

    $@68  go to state 145


State 97

  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 743 ($@71)

    $@71  go to state 146


State 98

  262 name_in_namespace: "::" "name" .

    $default  reduce using rule 262 (name_in_namespace)


State 99

  261 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 147


State 100

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 148

    reader_character_sequence  go to state 149


State 101

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  112                       | "|>" annotation_declaration .

    $default  reduce using rule 112 (annotation_declaration)


State 102

  107 annotation_declaration: '!' annotation_declaration .
  108                       | annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 107 (annotation_declaration)


State 103

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  111                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107
    ')'   shift, and go to state 150


State 104

  105 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 151


State 105

  108 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 152
    name_in_namespace             go to state 71


State 106

  109 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 153
    name_in_namespace             go to state 71


State 107

  110 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 154
    name_in_namespace             go to state 71


State 108

  114 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 62
    "private"  shift, and go to state 63
    "|>"       shift, and go to state 64
    "::"       shift, and go to state 59
    "name"     shift, and go to state 60
    '!'        shift, and go to state 65
    '('        shift, and go to state 66

    annotation_declaration_name   go to state 67
    annotation_declaration_basic  go to state 68
    annotation_declaration        go to state 155
    name_in_namespace             go to state 71


State 109

  116 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 116 (optional_annotation_list)


State 110

  210 optional_public_or_private_function: "public" .

    $default  reduce using rule 210 (optional_public_or_private_function)


State 111

  209 optional_public_or_private_function: "private" .

    $default  reduce using rule 209 (optional_public_or_private_function)


State 112

  213 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 212 ($@2)

    $@2  go to state 156


State 113

  207 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 207 (global_function_declaration)


State 114

  593 optional_public_or_private_enum: "public" .

    $default  reduce using rule 593 (optional_public_or_private_enum)


State 115

  592 optional_public_or_private_enum: "private" .

    $default  reduce using rule 592 (optional_public_or_private_enum)


State 116

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 157

    enum_name  go to state 158


State 117

  609 optional_public_or_private_structure: "public" .

    $default  reduce using rule 609 (optional_public_or_private_structure)


State 118

  608 optional_public_or_private_structure: "private" .

    $default  reduce using rule 608 (optional_public_or_private_structure)


State 119

  614 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@37 structure_name $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 612 ($@37)

    $@37  go to state 159


State 120

  573 optional_public_or_private_variable: "public" .

    $default  reduce using rule 573 (optional_public_or_private_variable)


State 121

  572 optional_public_or_private_variable: "private" .

    $default  reduce using rule 572 (optional_public_or_private_variable)


State 122

  574 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  576           | kwd_let optional_shared optional_public_or_private_variable . $@33 optional_field_annotation let_variable_declaration

    "begin of code block"  shift, and go to state 160

    $default  reduce using rule 575 ($@33)

    $@33  go to state 161


State 123

   93 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 93 (annotation_argument)


State 124

   94 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 94 (annotation_argument)


State 125

   91 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 91 (annotation_argument)


State 126

   92 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 92 (annotation_argument)


State 127

   90 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 90 (annotation_argument)


State 128

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163

    character_sequence  go to state 164


State 129

   96 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant                 go to state 170
    annotation_argument_value       go to state 171
    annotation_argument_value_list  go to state 172


State 130

   89 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 89 (annotation_argument)


State 131

   98 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 98 (annotation_argument_list)


State 132

   53 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 53 (expect_error)


State 133

   51 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 51 (expect_list)


State 134

   46 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 86

    $default  reduce using rule 47 (is_public_module)

    is_public_module  go to state 173


State 135

   44 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 44 (require_module_name)


State 136

   43 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 43 (require_module_name)


State 137

  587 alias_list: single_alias "end of expression" .

    $default  reduce using rule 587 (alias_list)


State 138

  589 alias_declaration: "typedef" "begin of code block" alias_list "end of code block" .

    $default  reduce using rule 589 (alias_declaration)


State 139

  588 alias_list: alias_list single_alias . "end of expression"

    "end of expression"  shift, and go to state 174


State 140

  586 single_alias: optional_public_or_private_alias "name" $@34 . '=' type_declaration

    '='  shift, and go to state 175


State 141

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 142

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 143

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 144

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 . "begin of code block" $@75 bitfield_alias_bits $@76 "end of code block"

    "begin of code block"  shift, and go to state 176


State 145

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 . "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block"

    "begin of code block"  shift, and go to state 177


State 146

  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 . "begin of code block" $@72 variant_alias_type_list $@73 "end of code block"

    "begin of code block"  shift, and go to state 178


State 147

  261 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 261 (name_in_namespace)


State 148

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 149

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 179

    $default  reduce using rule 35 (expr_reader)


State 150

  111 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 111 (annotation_declaration)


State 151

   98 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 81
    ')'  shift, and go to state 180


State 152

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  108                       | annotation_declaration "&&" annotation_declaration .
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 108 (annotation_declaration)


State 153

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  109                       | annotation_declaration "||" annotation_declaration .
  110                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 105
    "^^"  shift, and go to state 107

    $default  reduce using rule 109 (annotation_declaration)


State 154

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  110                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 105

    $default  reduce using rule 110 (annotation_declaration)


State 155

  108 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  109                       | annotation_declaration . "||" annotation_declaration
  110                       | annotation_declaration . "^^" annotation_declaration
  114 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 105
    "||"  shift, and go to state 106
    "^^"  shift, and go to state 107

    $default  reduce using rule 114 (annotation_list)


State 156

  213 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 211


State 157

  594 enum_name: "name" .

    $default  reduce using rule 594 (enum_name)


State 158

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    ':'  shift, and go to state 212

    $default  reduce using rule 595 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 213


State 159

  614 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 . structure_name $@38 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 214

    $default  reduce using rule 602 (optional_sealed)

    optional_sealed  go to state 215
    structure_name   go to state 216


State 160

  574 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 566 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 217


State 161

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    metadata_argument_list     go to state 219
    optional_field_annotation  go to state 220


State 162

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 163

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 164

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 221
    STRING_CHARACTER_ESC  shift, and go to state 222
    "end of the string"   shift, and go to state 223


State 165

   82 annotation_argument_value: "true" .

    $default  reduce using rule 82 (annotation_argument_value)


State 166

   83 annotation_argument_value: "false" .

    $default  reduce using rule 83 (annotation_argument_value)


State 167

   80 annotation_argument_value: "integer constant" .

    $default  reduce using rule 80 (annotation_argument_value)


State 168

   81 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 81 (annotation_argument_value)


State 169

   79 annotation_argument_value: "name" .

    $default  reduce using rule 79 (annotation_argument_value)


State 170

   78 annotation_argument_value: string_constant .

    $default  reduce using rule 78 (annotation_argument_value)


State 171

   84 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 84 (annotation_argument_value_list)


State 172

   85 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 224
    ')'  shift, and go to state 225


State 173

   46 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 46 (require_module)


State 174

  588 alias_list: alias_list single_alias "end of expression" .

    $default  reduce using rule 588 (alias_list)


State 175

  586 single_alias: optional_public_or_private_alias "name" $@34 '=' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 273


State 176

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" . $@75 bitfield_alias_bits $@76 "end of code block"

    $default  reduce using rule 748 ($@75)

    $@75  go to state 274


State 177

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" . $@69 tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 740 ($@69)

    $@69  go to state 275


State 178

  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" . $@72 variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 744 ($@72)

    $@72  go to state 276


State 179

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 180

  105 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 105 (annotation_declaration_basic)


State 181

  123 function_name: "operator" . '!'
  124              | "operator" . '~'
  125              | "operator" . "+="
  126              | "operator" . "-="
  127              | "operator" . "*="
  128              | "operator" . "/="
  129              | "operator" . "%="
  130              | "operator" . "&="
  131              | "operator" . "|="
  132              | "operator" . "^="
  133              | "operator" . "&&="
  134              | "operator" . "||="
  135              | "operator" . "^^="
  136              | "operator" . "&&"
  137              | "operator" . "||"
  138              | "operator" . "^^"
  139              | "operator" . '+'
  140              | "operator" . '-'
  141              | "operator" . '*'
  142              | "operator" . '/'
  143              | "operator" . '%'
  144              | "operator" . '<'
  145              | "operator" . '>'
  146              | "operator" . ".."
  147              | "operator" . "=="
  148              | "operator" . "!="
  149              | "operator" . "<="
  150              | "operator" . ">="
  151              | "operator" . '&'
  152              | "operator" . '|'
  153              | "operator" . '^'
  156              | "operator" . "++"
  157              | "operator" . "--"
  158              | "operator" . "<<"
  159              | "operator" . ">>"
  160              | "operator" . "<<="
  161              | "operator" . ">>="
  162              | "operator" . "<<<"
  163              | "operator" . ">>>"
  164              | "operator" . "<<<="
  165              | "operator" . ">>>="
  166              | "operator" . '[' ']'
  167              | "operator" . "?[" ']'
  168              | "operator" . '.'
  169              | "operator" . "?."
  170              | "operator" . '.' "name"
  171              | "operator" . '.' "name" ":="
  172              | "operator" . "?." "name"
  173              | "operator" . ":="
  174              | "operator" . "delete"
  175              | "operator" . "??"
  176              | "operator" . "is"
  177              | "operator" . "as"
  178              | "operator" . "is" "name"
  179              | "operator" . "as" "name"
  180              | "operator" . '?' "as"
  181              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 277
    "as"      shift, and go to state 278
    "delete"  shift, and go to state 279
    "+="      shift, and go to state 280
    "-="      shift, and go to state 281
    "/="      shift, and go to state 282
    "*="      shift, and go to state 283
    "%="      shift, and go to state 284
    "&="      shift, and go to state 285
    "|="      shift, and go to state 286
    "^="      shift, and go to state 287
    "<<"      shift, and go to state 288
    ">>"      shift, and go to state 289
    "++"      shift, and go to state 290
    "--"      shift, and go to state 291
    "<="      shift, and go to state 292
    "<<="     shift, and go to state 293
    ">>="     shift, and go to state 294
    ">="      shift, and go to state 295
    "=="      shift, and go to state 296
    "!="      shift, and go to state 297
    "??"      shift, and go to state 298
    "?."      shift, and go to state 299
    "?["      shift, and go to state 300
    ":="      shift, and go to state 301
    "<<<"     shift, and go to state 302
    ">>>"     shift, and go to state 303
    "<<<="    shift, and go to state 304
    ">>>="    shift, and go to state 305
    "&&"      shift, and go to state 306
    "||"      shift, and go to state 307
    "^^"      shift, and go to state 308
    "&&="     shift, and go to state 309
    "||="     shift, and go to state 310
    "^^="     shift, and go to state 311
    ".."      shift, and go to state 312
    '?'       shift, and go to state 313
    '|'       shift, and go to state 314
    '^'       shift, and go to state 315
    '&'       shift, and go to state 316
    '<'       shift, and go to state 317
    '>'       shift, and go to state 318
    '-'       shift, and go to state 319
    '+'       shift, and go to state 320
    '*'       shift, and go to state 321
    '/'       shift, and go to state 322
    '%'       shift, and go to state 323
    '~'       shift, and go to state 324
    '!'       shift, and go to state 325
    '.'       shift, and go to state 326
    '['       shift, and go to state 327


State 182

  182 function_name: "bool" .

    $default  reduce using rule 182 (function_name)


State 183

  183 function_name: "string" .

    $default  reduce using rule 183 (function_name)


State 184

  184 function_name: "int" .

    $default  reduce using rule 184 (function_name)


State 185

  185 function_name: "int2" .

    $default  reduce using rule 185 (function_name)


State 186

  186 function_name: "int3" .

    $default  reduce using rule 186 (function_name)


State 187

  187 function_name: "int4" .

    $default  reduce using rule 187 (function_name)


State 188

  188 function_name: "uint" .

    $default  reduce using rule 188 (function_name)


State 189

  189 function_name: "uint2" .

    $default  reduce using rule 189 (function_name)


State 190

  190 function_name: "uint3" .

    $default  reduce using rule 190 (function_name)


State 191

  191 function_name: "uint4" .

    $default  reduce using rule 191 (function_name)


State 192

  192 function_name: "float" .

    $default  reduce using rule 192 (function_name)


State 193

  193 function_name: "float2" .

    $default  reduce using rule 193 (function_name)


State 194

  194 function_name: "float3" .

    $default  reduce using rule 194 (function_name)


State 195

  195 function_name: "float4" .

    $default  reduce using rule 195 (function_name)


State 196

  196 function_name: "range" .

    $default  reduce using rule 196 (function_name)


State 197

  197 function_name: "urange" .

    $default  reduce using rule 197 (function_name)


State 198

  198 function_name: "range64" .

    $default  reduce using rule 198 (function_name)


State 199

  199 function_name: "urange64" .

    $default  reduce using rule 199 (function_name)


State 200

  200 function_name: "int64" .

    $default  reduce using rule 200 (function_name)


State 201

  201 function_name: "uint64" .

    $default  reduce using rule 201 (function_name)


State 202

  202 function_name: "double" .

    $default  reduce using rule 202 (function_name)


State 203

  203 function_name: "int8" .

    $default  reduce using rule 203 (function_name)


State 204

  204 function_name: "uint8" .

    $default  reduce using rule 204 (function_name)


State 205

  205 function_name: "int16" .

    $default  reduce using rule 205 (function_name)


State 206

  206 function_name: "uint16" .

    $default  reduce using rule 206 (function_name)


State 207

  154 function_name: "++" . "operator"

    "operator"  shift, and go to state 328


State 208

  155 function_name: "--" . "operator"

    "operator"  shift, and go to state 329


State 209

  122 function_name: "name" .

    $default  reduce using rule 122 (function_name)


State 210

  211 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 331


State 211

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 333


State 212

  596 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 334
    "uint"    shift, and go to state 335
    "int64"   shift, and go to state 336
    "uint64"  shift, and go to state 337
    "int8"    shift, and go to state 338
    "uint8"   shift, and go to state 339
    "int16"   shift, and go to state 340
    "uint16"  shift, and go to state 341

    enum_basic_type_declaration  go to state 342


State 213

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@35 enum_list optional_comma $@36 "end of code block"

    "begin of code block"  shift, and go to state 343


State 214

  603 optional_sealed: "sealed" .

    $default  reduce using rule 603 (optional_sealed)


State 215

  604 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 344


State 216

  614 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name . $@38 optional_struct_variable_declaration_list

    $default  reduce using rule 613 ($@38)

    $@38  go to state 345


State 217

  568 global_variable_declaration_list: global_variable_declaration_list . $@32 optional_field_annotation let_variable_declaration
  574 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 346

    $default  reduce using rule 567 ($@32)

    $@32  go to state 347


State 218

   99 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 348


State 219

  100 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  507 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 349

    $default  reduce using rule 507 (optional_field_annotation)


State 220

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 350
    "name"  shift, and go to state 351

    let_variable_name_with_pos_list  go to state 352
    let_variable_declaration         go to state 353


State 221

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 222

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 223

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 224

   85 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 165
    "false"                    shift, and go to state 166
    "integer constant"         shift, and go to state 167
    "floating point constant"  shift, and go to state 168
    "name"                     shift, and go to state 169
    "start of the string"      shift, and go to state 128

    string_constant            go to state 170
    annotation_argument_value  go to state 354


State 225

   96 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 96 (annotation_argument)


State 226

  679 type_declaration_no_options: "type" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 355


State 227

  702 type_declaration_no_options: "array" . '<' $@46 type_declaration '>' $@47

    '<'  shift, and go to state 356


State 228

  705 type_declaration_no_options: "table" . '<' $@48 table_type_pair '>' $@49

    '<'  shift, and go to state 357


State 229

  680 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 358


State 230

  708 type_declaration_no_options: "iterator" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 359


State 231

  698 type_declaration_no_options: "smart_ptr" . '<' $@44 type_declaration '>' $@45

    '<'  shift, and go to state 360


State 232

  620 basic_type_declaration: "bool" .

    $default  reduce using rule 620 (basic_type_declaration)


State 233

  640 basic_type_declaration: "void" .

    $default  reduce using rule 640 (basic_type_declaration)


State 234

  621 basic_type_declaration: "string" .

    $default  reduce using rule 621 (basic_type_declaration)


State 235

  656 auto_type_declaration: "auto" .
  657                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 361

    $default  reduce using rule 656 (auto_type_declaration)


State 236

  622 basic_type_declaration: "int" .

    $default  reduce using rule 622 (basic_type_declaration)


State 237

  626 basic_type_declaration: "int2" .

    $default  reduce using rule 626 (basic_type_declaration)


State 238

  627 basic_type_declaration: "int3" .

    $default  reduce using rule 627 (basic_type_declaration)


State 239

  628 basic_type_declaration: "int4" .

    $default  reduce using rule 628 (basic_type_declaration)


State 240

  629 basic_type_declaration: "uint" .

    $default  reduce using rule 629 (basic_type_declaration)


State 241

  646 basic_type_declaration: "bitfield" .
  666 bitfield_type_declaration: "bitfield" . '<' $@39 bitfield_bits '>' $@40

    '<'  shift, and go to state 362

    $default  reduce using rule 646 (basic_type_declaration)


State 242

  633 basic_type_declaration: "uint2" .

    $default  reduce using rule 633 (basic_type_declaration)


State 243

  634 basic_type_declaration: "uint3" .

    $default  reduce using rule 634 (basic_type_declaration)


State 244

  635 basic_type_declaration: "uint4" .

    $default  reduce using rule 635 (basic_type_declaration)


State 245

  636 basic_type_declaration: "float" .

    $default  reduce using rule 636 (basic_type_declaration)


State 246

  637 basic_type_declaration: "float2" .

    $default  reduce using rule 637 (basic_type_declaration)


State 247

  638 basic_type_declaration: "float3" .

    $default  reduce using rule 638 (basic_type_declaration)


State 248

  639 basic_type_declaration: "float4" .

    $default  reduce using rule 639 (basic_type_declaration)


State 249

  641 basic_type_declaration: "range" .

    $default  reduce using rule 641 (basic_type_declaration)


State 250

  642 basic_type_declaration: "urange" .

    $default  reduce using rule 642 (basic_type_declaration)


State 251

  643 basic_type_declaration: "range64" .

    $default  reduce using rule 643 (basic_type_declaration)


State 252

  644 basic_type_declaration: "urange64" .

    $default  reduce using rule 644 (basic_type_declaration)


State 253

  709 type_declaration_no_options: "block" .
  712                            | "block" . '<' $@52 type_declaration '>' $@53
  715                            | "block" . '<' $@54 optional_function_argument_list optional_function_type '>' $@55

    '<'  shift, and go to state 363

    $default  reduce using rule 709 (type_declaration_no_options)


State 254

  625 basic_type_declaration: "int64" .

    $default  reduce using rule 625 (basic_type_declaration)


State 255

  632 basic_type_declaration: "uint64" .

    $default  reduce using rule 632 (basic_type_declaration)


State 256

  645 basic_type_declaration: "double" .

    $default  reduce using rule 645 (basic_type_declaration)


State 257

  716 type_declaration_no_options: "function" .
  719                            | "function" . '<' $@56 type_declaration '>' $@57
  722                            | "function" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 364

    $default  reduce using rule 716 (type_declaration_no_options)


State 258

  723 type_declaration_no_options: "lambda" .
  726                            | "lambda" . '<' $@60 type_declaration '>' $@61
  729                            | "lambda" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 365

    $default  reduce using rule 723 (type_declaration_no_options)


State 259

  623 basic_type_declaration: "int8" .

    $default  reduce using rule 623 (basic_type_declaration)


State 260

  630 basic_type_declaration: "uint8" .

    $default  reduce using rule 630 (basic_type_declaration)


State 261

  624 basic_type_declaration: "int16" .

    $default  reduce using rule 624 (basic_type_declaration)


State 262

  631 basic_type_declaration: "uint16" .

    $default  reduce using rule 631 (basic_type_declaration)


State 263

  732 type_declaration_no_options: "tuple" . '<' $@64 tuple_type_list '>' $@65

    '<'  shift, and go to state 366


State 264

  735 type_declaration_no_options: "variant" . '<' $@66 variant_type_list '>' $@67

    '<'  shift, and go to state 367


State 265

  658 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 368


State 266

  681 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  683                            | '$' . name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 369


State 267

  655 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 655 (structure_type_declaration)


State 268

  671 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 671 (type_declaration_no_options)


State 269

  674 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 674 (type_declaration_no_options)


State 270

  672 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 672 (type_declaration_no_options)


State 271

  673 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 673 (type_declaration_no_options)


State 272

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  736 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    $default  reduce using rule 736 (type_declaration)

    dim_list  go to state 380


State 273

  586 single_alias: optional_public_or_private_alias "name" $@34 '=' type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 586 (single_alias)


State 274

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 . bitfield_alias_bits $@76 "end of code block"

    $default  reduce using rule 661 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 382


State 275

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 . tuple_alias_type_list $@70 "end of code block"

    $default  reduce using rule 534 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 383


State 276

  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 . variant_alias_type_list $@73 "end of code block"

    $default  reduce using rule 540 (variant_alias_type_list)

    variant_alias_type_list  go to state 384


State 277

  176 function_name: "operator" "is" .
  178              | "operator" "is" . "name"

    "name"  shift, and go to state 385

    $default  reduce using rule 176 (function_name)


State 278

  177 function_name: "operator" "as" .
  179              | "operator" "as" . "name"

    "name"  shift, and go to state 386

    $default  reduce using rule 177 (function_name)


State 279

  174 function_name: "operator" "delete" .

    $default  reduce using rule 174 (function_name)


State 280

  125 function_name: "operator" "+=" .

    $default  reduce using rule 125 (function_name)


State 281

  126 function_name: "operator" "-=" .

    $default  reduce using rule 126 (function_name)


State 282

  128 function_name: "operator" "/=" .

    $default  reduce using rule 128 (function_name)


State 283

  127 function_name: "operator" "*=" .

    $default  reduce using rule 127 (function_name)


State 284

  129 function_name: "operator" "%=" .

    $default  reduce using rule 129 (function_name)


State 285

  130 function_name: "operator" "&=" .

    $default  reduce using rule 130 (function_name)


State 286

  131 function_name: "operator" "|=" .

    $default  reduce using rule 131 (function_name)


State 287

  132 function_name: "operator" "^=" .

    $default  reduce using rule 132 (function_name)


State 288

  158 function_name: "operator" "<<" .

    $default  reduce using rule 158 (function_name)


State 289

  159 function_name: "operator" ">>" .

    $default  reduce using rule 159 (function_name)


State 290

  156 function_name: "operator" "++" .

    $default  reduce using rule 156 (function_name)


State 291

  157 function_name: "operator" "--" .

    $default  reduce using rule 157 (function_name)


State 292

  149 function_name: "operator" "<=" .

    $default  reduce using rule 149 (function_name)


State 293

  160 function_name: "operator" "<<=" .

    $default  reduce using rule 160 (function_name)


State 294

  161 function_name: "operator" ">>=" .

    $default  reduce using rule 161 (function_name)


State 295

  150 function_name: "operator" ">=" .

    $default  reduce using rule 150 (function_name)


State 296

  147 function_name: "operator" "==" .

    $default  reduce using rule 147 (function_name)


State 297

  148 function_name: "operator" "!=" .

    $default  reduce using rule 148 (function_name)


State 298

  175 function_name: "operator" "??" .

    $default  reduce using rule 175 (function_name)


State 299

  169 function_name: "operator" "?." .
  172              | "operator" "?." . "name"

    "name"  shift, and go to state 387

    $default  reduce using rule 169 (function_name)


State 300

  167 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 388


State 301

  173 function_name: "operator" ":=" .

    $default  reduce using rule 173 (function_name)


State 302

  162 function_name: "operator" "<<<" .

    $default  reduce using rule 162 (function_name)


State 303

  163 function_name: "operator" ">>>" .

    $default  reduce using rule 163 (function_name)


State 304

  164 function_name: "operator" "<<<=" .

    $default  reduce using rule 164 (function_name)


State 305

  165 function_name: "operator" ">>>=" .

    $default  reduce using rule 165 (function_name)


State 306

  136 function_name: "operator" "&&" .

    $default  reduce using rule 136 (function_name)


State 307

  137 function_name: "operator" "||" .

    $default  reduce using rule 137 (function_name)


State 308

  138 function_name: "operator" "^^" .

    $default  reduce using rule 138 (function_name)


State 309

  133 function_name: "operator" "&&=" .

    $default  reduce using rule 133 (function_name)


State 310

  134 function_name: "operator" "||=" .

    $default  reduce using rule 134 (function_name)


State 311

  135 function_name: "operator" "^^=" .

    $default  reduce using rule 135 (function_name)


State 312

  146 function_name: "operator" ".." .

    $default  reduce using rule 146 (function_name)


State 313

  180 function_name: "operator" '?' . "as"
  181              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 389


State 314

  152 function_name: "operator" '|' .

    $default  reduce using rule 152 (function_name)


State 315

  153 function_name: "operator" '^' .

    $default  reduce using rule 153 (function_name)


State 316

  151 function_name: "operator" '&' .

    $default  reduce using rule 151 (function_name)


State 317

  144 function_name: "operator" '<' .

    $default  reduce using rule 144 (function_name)


State 318

  145 function_name: "operator" '>' .

    $default  reduce using rule 145 (function_name)


State 319

  140 function_name: "operator" '-' .

    $default  reduce using rule 140 (function_name)


State 320

  139 function_name: "operator" '+' .

    $default  reduce using rule 139 (function_name)


State 321

  141 function_name: "operator" '*' .

    $default  reduce using rule 141 (function_name)


State 322

  142 function_name: "operator" '/' .

    $default  reduce using rule 142 (function_name)


State 323

  143 function_name: "operator" '%' .

    $default  reduce using rule 143 (function_name)


State 324

  124 function_name: "operator" '~' .

    $default  reduce using rule 124 (function_name)


State 325

  123 function_name: "operator" '!' .

    $default  reduce using rule 123 (function_name)


State 326

  168 function_name: "operator" '.' .
  170              | "operator" '.' . "name"
  171              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 390

    $default  reduce using rule 168 (function_name)


State 327

  166 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 391


State 328

  154 function_name: "++" "operator" .

    $default  reduce using rule 154 (function_name)


State 329

  155 function_name: "--" "operator" .

    $default  reduce using rule 155 (function_name)


State 330

  118 optional_function_argument_list: '(' . ')'
  119                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 392
    ')'   shift, and go to state 393
    '@'   shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    metadata_argument_list         go to state 219
    optional_field_annotation      go to state 394
    function_argument_declaration  go to state 395
    function_argument_list         go to state 396


State 331

  211 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 398


State 332

  214 expression_block: "begin of code block" . expressions "end of code block"
  215                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 239 (expressions)

    expressions  go to state 399


State 333

  213 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 213 (function_declaration)


State 334

  647 enum_basic_type_declaration: "int" .

    $default  reduce using rule 647 (enum_basic_type_declaration)


State 335

  650 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 650 (enum_basic_type_declaration)


State 336

  653 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 653 (enum_basic_type_declaration)


State 337

  654 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 654 (enum_basic_type_declaration)


State 338

  648 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 648 (enum_basic_type_declaration)


State 339

  651 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 651 (enum_basic_type_declaration)


State 340

  649 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 649 (enum_basic_type_declaration)


State 341

  652 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 652 (enum_basic_type_declaration)


State 342

  596 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 596 (optional_enum_basic_type_declaration)


State 343

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@35 enum_list optional_comma $@36 "end of code block"

    $default  reduce using rule 597 ($@35)

    $@35  go to state 400


State 344

  604 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 401

    $default  reduce using rule 600 (optional_structure_parent)

    optional_structure_parent  go to state 402


State 345

  614 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 403

    $default  reduce using rule 610 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 404


State 346

  574 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 574 (global_let)


State 347

  568 global_variable_declaration_list: global_variable_declaration_list $@32 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    metadata_argument_list     go to state 219
    optional_field_annotation  go to state 405


State 348

   99 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 99 (metadata_argument_list)


State 349

  100 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 406


State 350

  557 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 407


State 351

  556 let_variable_name_with_pos_list: "name" .
  558                                | "name" . "aka" "name"

    "aka"  shift, and go to state 408

    $default  reduce using rule 556 (let_variable_name_with_pos_list)


State 352

  559 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  560                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  561 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  562                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  563                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  564                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"
  565                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 409
    ':'  shift, and go to state 410
    '&'  shift, and go to state 411

    $default  reduce using rule 554 (optional_ref)

    optional_ref  go to state 412


State 353

  576 global_let: kwd_let optional_shared optional_public_or_private_variable $@33 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 576 (global_let)


State 354

   85 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 85 (annotation_argument_value_list)


State 355

  679 type_declaration_no_options: "type" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 677 ($@41)

    $@41  go to state 413


State 356

  702 type_declaration_no_options: "array" '<' . $@46 type_declaration '>' $@47

    $default  reduce using rule 700 ($@46)

    $@46  go to state 414


State 357

  705 type_declaration_no_options: "table" '<' . $@48 table_type_pair '>' $@49

    $default  reduce using rule 703 ($@48)

    $@48  go to state 415


State 358

  680 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 482
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 359

  708 type_declaration_no_options: "iterator" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 706 ($@50)

    $@50  go to state 491


State 360

  698 type_declaration_no_options: "smart_ptr" '<' . $@44 type_declaration '>' $@45

    $default  reduce using rule 696 ($@44)

    $@44  go to state 492


State 361

  657 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 493


State 362

  666 bitfield_type_declaration: "bitfield" '<' . $@39 bitfield_bits '>' $@40

    $default  reduce using rule 664 ($@39)

    $@39  go to state 494


State 363

  712 type_declaration_no_options: "block" '<' . $@52 type_declaration '>' $@53
  715                            | "block" '<' . $@54 optional_function_argument_list optional_function_type '>' $@55

    ':'       reduce using rule 713 ($@54)
    '>'       reduce using rule 713 ($@54)
    '('       reduce using rule 713 ($@54)
    $default  reduce using rule 710 ($@52)

    $@52  go to state 495
    $@54  go to state 496


State 364

  719 type_declaration_no_options: "function" '<' . $@56 type_declaration '>' $@57
  722                            | "function" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 720 ($@58)
    '>'       reduce using rule 720 ($@58)
    '('       reduce using rule 720 ($@58)
    $default  reduce using rule 717 ($@56)

    $@56  go to state 497
    $@58  go to state 498


State 365

  726 type_declaration_no_options: "lambda" '<' . $@60 type_declaration '>' $@61
  729                            | "lambda" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 727 ($@62)
    '>'       reduce using rule 727 ($@62)
    '('       reduce using rule 727 ($@62)
    $default  reduce using rule 724 ($@60)

    $@60  go to state 499
    $@62  go to state 500


State 366

  732 type_declaration_no_options: "tuple" '<' . $@64 tuple_type_list '>' $@65

    $default  reduce using rule 730 ($@64)

    $@64  go to state 501


State 367

  735 type_declaration_no_options: "variant" '<' . $@66 variant_type_list '>' $@67

    $default  reduce using rule 733 ($@66)

    $@66  go to state 502


State 368

  658 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 503
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 369

  681 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  683                            | '$' name_in_namespace . '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 504
    '('  shift, and go to state 505


State 370

  686 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 686 (type_declaration_no_options)


State 371

  691 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 691 (type_declaration_no_options)


State 372

  685 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 685 (type_declaration_no_options)


State 373

  693 type_declaration_no_options: type_declaration_no_options "==" . "const"
  694                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 506
    '&'      shift, and go to state 507


State 374

  699 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 699 (type_declaration_no_options)


State 375

  695 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 695 (type_declaration_no_options)


State 376

  688 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 688 (type_declaration_no_options)


State 377

  684 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  687                            | type_declaration_no_options '-' . "const"
  689                            | type_declaration_no_options '-' . '&'
  692                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 508
    '&'      shift, and go to state 509
    '['      shift, and go to state 510
    '#'      shift, and go to state 511


State 378

  669 dim_list: '[' . expr ']'
  676 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    ']'                               shift, and go to state 512
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 513
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 379

  690 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 690 (type_declaration_no_options)


State 380

  670 dim_list: dim_list . '[' expr ']'
  675 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 514

    '['       [reduce using rule 675 (type_declaration_no_options)]
    $default  reduce using rule 675 (type_declaration_no_options)


State 381

  737 type_declaration: type_declaration '|' . type_declaration_no_options
  738                 | type_declaration '|' . '#'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266
    '#'          shift, and go to state 515

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 516


State 382

  662 bitfield_alias_bits: bitfield_alias_bits . "end of expression"
  663                    | bitfield_alias_bits . "name" "end of expression"
  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits . $@76 "end of code block"

    "name"               shift, and go to state 517
    "end of expression"  shift, and go to state 518

    $default  reduce using rule 749 ($@76)

    $@76  go to state 519


State 383

  535 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  536                      | tuple_alias_type_list . tuple_type "end of expression"
  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list . $@70 "end of code block"

    "type"               shift, and go to state 226
    "array"              shift, and go to state 227
    "table"              shift, and go to state 228
    "typedecl"           shift, and go to state 229
    "iterator"           shift, and go to state 230
    "smart_ptr"          shift, and go to state 231
    "bool"               shift, and go to state 232
    "void"               shift, and go to state 233
    "string"             shift, and go to state 234
    "auto"               shift, and go to state 235
    "int"                shift, and go to state 236
    "int2"               shift, and go to state 237
    "int3"               shift, and go to state 238
    "int4"               shift, and go to state 239
    "uint"               shift, and go to state 240
    "bitfield"           shift, and go to state 241
    "uint2"              shift, and go to state 242
    "uint3"              shift, and go to state 243
    "uint4"              shift, and go to state 244
    "float"              shift, and go to state 245
    "float2"             shift, and go to state 246
    "float3"             shift, and go to state 247
    "float4"             shift, and go to state 248
    "range"              shift, and go to state 249
    "urange"             shift, and go to state 250
    "range64"            shift, and go to state 251
    "urange64"           shift, and go to state 252
    "block"              shift, and go to state 253
    "int64"              shift, and go to state 254
    "uint64"             shift, and go to state 255
    "double"             shift, and go to state 256
    "function"           shift, and go to state 257
    "lambda"             shift, and go to state 258
    "int8"               shift, and go to state 259
    "uint8"              shift, and go to state 260
    "int16"              shift, and go to state 261
    "uint16"             shift, and go to state 262
    "tuple"              shift, and go to state 263
    "variant"            shift, and go to state 264
    "::"                 shift, and go to state 59
    "$t"                 shift, and go to state 265
    "name"               shift, and go to state 520
    "end of expression"  shift, and go to state 521
    '$'                  shift, and go to state 266

    $default  reduce using rule 741 ($@70)

    name_in_namespace            go to state 267
    tuple_type                   go to state 522
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 523
    $@70                         go to state 524


State 384

  541 variant_alias_type_list: variant_alias_type_list . "end of expression"
  542                        | variant_alias_type_list . variant_type "end of expression"
  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list . $@73 "end of code block"

    "name"               shift, and go to state 525
    "end of expression"  shift, and go to state 526

    $default  reduce using rule 745 ($@73)

    variant_type  go to state 527
    $@73          go to state 528


State 385

  178 function_name: "operator" "is" "name" .

    $default  reduce using rule 178 (function_name)


State 386

  179 function_name: "operator" "as" "name" .

    $default  reduce using rule 179 (function_name)


State 387

  172 function_name: "operator" "?." "name" .

    $default  reduce using rule 172 (function_name)


State 388

  167 function_name: "operator" "?[" ']' .

    $default  reduce using rule 167 (function_name)


State 389

  180 function_name: "operator" '?' "as" .
  181              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 529

    $default  reduce using rule 180 (function_name)


State 390

  170 function_name: "operator" '.' "name" .
  171              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 530

    $default  reduce using rule 170 (function_name)


State 391

  166 function_name: "operator" '[' ']' .

    $default  reduce using rule 166 (function_name)


State 392

  527 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 531


State 393

  118 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 118 (optional_function_argument_list)


State 394

  526 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 532
    "var"  shift, and go to state 533

    $default  reduce using rule 290 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 534


State 395

  528 function_argument_list: function_argument_declaration .

    $default  reduce using rule 528 (function_argument_list)


State 396

  119 optional_function_argument_list: '(' function_argument_list . ')'
  529 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 535
    ')'                  shift, and go to state 536


State 397

  121 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 537


State 398

  211 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 211 (function_declaration_header)


State 399

  214 expression_block: "begin of code block" expressions . "end of code block"
  215                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 538
    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 539
    "if"                              shift, and go to state 540
    "static_if"                       shift, and go to state 541
    "for"                             shift, and go to state 542
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 543
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 544
    "try"                             shift, and go to state 545
    "table"                           shift, and go to state 425
    "delete"                          shift, and go to state 546
    "deref"                           shift, and go to state 426
    "with"                            shift, and go to state 547
    "assume"                          shift, and go to state 548
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 549
    "pass"                            shift, and go to state 550
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 551
    "goto"                            shift, and go to state 552
    "unsafe"                          shift, and go to state 553
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "yield"                           shift, and go to state 554
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    "end of code block"               shift, and go to state 559
    "end of expression"               shift, and go to state 560
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder             go to state 466
    expr_reader                go to state 467
    expression_label           go to state 561
    expression_goto            go to state 562
    if_or_static_if            go to state 563
    expression_if_one_liner    go to state 564
    expression_if_then_else    go to state 565
    expression_for_loop        go to state 566
    expression_unsafe          go to state 567
    expression_while_loop      go to state 568
    expression_with            go to state 569
    expression_with_alias      go to state 570
    expr_call_pipe             go to state 571
    expression_any             go to state 572
    expr_keyword               go to state 573
    expression_keyword         go to state 574
    expr_pipe                  go to state 575
    name_in_namespace          go to state 469
    expression_delete          go to state 576
    expr_new                   go to state 470
    expression_break           go to state 577
    expression_continue        go to state 578
    expression_return_no_pipe  go to state 579
    expression_return          go to state 580
    expression_yield_no_pipe   go to state 581
    expression_yield           go to state 582
    expression_try_catch       go to state 583
    kwd_let                    go to state 584
    expression_let             go to state 585
    expr_cast                  go to state 471
    expr_type_decl             go to state 472
    expr_type_info             go to state 473
    block_or_lambda            go to state 474
    expr_full_block            go to state 475
    expr_numeric_const         go to state 476
    expr_assign                go to state 586
    expr_assign_pipe           go to state 587
    expr_named_call            go to state 477
    expr_method_call           go to state 478
    func_addr_expr             go to state 479
    expr_field                 go to state 480
    expr_call                  go to state 481
    expr                       go to state 588
    expr_mtag                  go to state 483
    basic_type_declaration     go to state 484
    make_decl                  go to state 485
    make_struct_decl           go to state 486
    make_tuple_call            go to state 487
    make_dim_decl              go to state 488
    make_table_decl            go to state 489
    array_comprehension        go to state 490


State 400

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 . enum_list optional_comma $@36 "end of code block"

    "name"  shift, and go to state 589

    $default  reduce using rule 579 (enum_list)

    enum_expression  go to state 590
    enum_list        go to state 591


State 401

  601 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 592


State 402

  604 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 604 (structure_name)


State 403

  611 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 519 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 593


State 404

  614 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@37 structure_name $@38 optional_struct_variable_declaration_list .

    $default  reduce using rule 614 (structure_declaration)


State 405

  568 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 350
    "name"  shift, and go to state 351

    let_variable_name_with_pos_list  go to state 352
    let_variable_declaration         go to state 594


State 406

  100 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 100 (metadata_argument_list)


State 407

  557 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 595
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 408

  558 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 596


State 409

  559 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  560                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 597


State 410

  561 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  562                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  563                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 598


State 411

  555 optional_ref: '&' .

    $default  reduce using rule 555 (optional_ref)


State 412

  564 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"
  565                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 602


State 413

  679 type_declaration_no_options: "type" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 603


State 414

  702 type_declaration_no_options: "array" '<' $@46 . type_declaration '>' $@47

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 604


State 415

  705 type_declaration_no_options: "table" '<' $@48 . table_type_pair '>' $@49

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    table_type_pair              go to state 605
    type_declaration_no_options  go to state 272
    type_declaration             go to state 606


State 416

  767 make_struct_decl: "struct" . '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_single ')'

    '<'  shift, and go to state 607


State 417

  770 make_struct_decl: "class" . '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    '<'  shift, and go to state 608


State 418

  414 expr: "true" .

    $default  reduce using rule 414 (expr)


State 419

  415 expr: "false" .

    $default  reduce using rule 415 (expr)


State 420

  269 expr_new: "new" . new_type_declaration
  270         | "new" . new_type_declaration '(' ')'
  271         | "new" . new_type_declaration '(' expr_list ')'
  272         | "new" . new_type_declaration '(' make_struct_single ')'
  273         | "new" . make_decl

    "struct"               shift, and go to state 416
    "class"                shift, and go to state 417
    "array"                shift, and go to state 423
    "table"                shift, and go to state 425
    "fixed_array"          shift, and go to state 431
    "default"              shift, and go to state 432
    "tuple"                shift, and go to state 434
    "variant"              shift, and go to state 435
    "::"                   shift, and go to state 59
    "name"                 shift, and go to state 60
    "begin of code block"  shift, and go to state 456
    '<'                    shift, and go to state 609
    '['                    shift, and go to state 462

    name_in_namespace           go to state 267
    new_type_declaration        go to state 610
    structure_type_declaration  go to state 611
    make_decl                   go to state 612
    make_struct_decl            go to state 486
    make_tuple_call             go to state 487
    make_dim_decl               go to state 488
    make_table_decl             go to state 489
    array_comprehension         go to state 490


State 421

  313 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  314               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  315               | "typeinfo" . '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    '('  shift, and go to state 613


State 422

  312 expr_type_decl: "type" . '<' $@15 type_declaration '>' $@16

    '<'  shift, and go to state 614


State 423

  784 make_dim_decl: "array" . '(' expr_list optional_comma ')'
  787              | "array" . '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 615
    '('  shift, and go to state 616


State 424

  408 expr: "null" .

    $default  reduce using rule 408 (expr)


State 425

  795 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  796                | "table" . '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  797                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    '<'  shift, and go to state 617
    '('  shift, and go to state 618


State 426

  458 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 619


State 427

  303 expr_cast: "cast" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 620


State 428

  306 expr_cast: "upcast" . '<' $@11 type_declaration_no_options '>' $@12 expr

    '<'  shift, and go to state 621


State 429

  459 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 622


State 430

  309 expr_cast: "reinterpret" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 623


State 431

  788 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  791              | "fixed_array" . '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 624
    '('  shift, and go to state 625


State 432

  776 make_struct_decl: "default" . '<' $@83 type_declaration_no_options '>' $@84

    '<'  shift, and go to state 626


State 433

  646 basic_type_declaration: "bitfield" .

    $default  reduce using rule 646 (basic_type_declaration)


State 434

  779 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  782                | "tuple" . '<' $@85 type_declaration_no_options '>' $@86 '(' make_struct_single ')'

    '<'  shift, and go to state 627
    '('  shift, and go to state 628


State 435

  773 make_struct_decl: "variant" . '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    '<'  shift, and go to state 629


State 436

  460 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  461     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 630


State 437

  444 expr: "++" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 631
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 438

  445 expr: "--" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 632
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 439

  490 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 633


State 440

  491 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 634


State 441

  492 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 635


State 442

  493 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 636


State 443

  494 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 637


State 444

  496 expr_mtag: "$c" . '(' expr ')' '(' ')'
  497          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 638


State 445

  495 expr_mtag: "..." .

    $default  reduce using rule 495 (expr_mtag)


State 446

  336 expr_numeric_const: "integer constant" .

    $default  reduce using rule 336 (expr_numeric_const)


State 447

  338 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 448

  337 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 337 (expr_numeric_const)


State 449

  339 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 450

  340 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 451

  341 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 452

  342 expr_numeric_const: "double constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 453

  251 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    '<'  shift, and go to state 639


State 454

  254 expression_keyword: "type function" . '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    '<'  shift, and go to state 640


State 455

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 641


State 456

  794 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  803 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 642
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 643
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 644
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    expr_map_tuple_list     go to state 645
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 457

  421 expr: '-' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 646
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 458

  420 expr: '+' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 647
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 459

  457 expr: '*' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 648
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 460

  419 expr: '~' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 649
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 461

  418 expr: '!' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 650
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 462

  783 make_dim_decl: '[' . expr_list optional_comma ']'
  802 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 651
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 652
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 463

  448 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 654
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 464

  321 block_or_lambda: '$' .

    $default  reduce using rule 321 (block_or_lambda)


State 465

  322 block_or_lambda: '@' .
  323                | '@' . '@'
  389 func_addr_expr: '@' . '@' func_addr_name
  392               | '@' . '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  395               | '@' . '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  505 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 655

    $default  reduce using rule 322 (block_or_lambda)


State 466

  412 expr: string_builder .

    $default  reduce using rule 412 (expr)


State 467

  411 expr: expr_reader .

    $default  reduce using rule 411 (expr)


State 468

  489 expr: expression_keyword .

    $default  reduce using rule 489 (expr)


State 469

  383 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  384                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  403 expr_call: name_in_namespace . '(' ')'
  404          | name_in_namespace . '(' make_struct_single ')'
  405          | name_in_namespace . '(' expr_list ')'
  409 expr: name_in_namespace .

    '('  shift, and go to state 656

    '('       [reduce using rule 409 (expr)]
    $default  reduce using rule 409 (expr)


State 470

  482 expr: expr_new .

    $default  reduce using rule 482 (expr)


State 471

  481 expr: expr_cast .

    $default  reduce using rule 481 (expr)


State 472

  480 expr: expr_type_decl .

    $default  reduce using rule 480 (expr)


State 473

  479 expr: expr_type_info .

    $default  reduce using rule 479 (expr)


State 474

  334 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 657


State 475

  485 expr: expr_full_block .

    $default  reduce using rule 485 (expr)


State 476

  410 expr: expr_numeric_const .

    $default  reduce using rule 410 (expr)


State 477

  484 expr: expr_named_call .

    $default  reduce using rule 484 (expr)


State 478

  483 expr: expr_method_call .

    $default  reduce using rule 483 (expr)


State 479

  455 expr: func_addr_expr .

    $default  reduce using rule 455 (expr)


State 480

  416 expr: expr_field .

    $default  reduce using rule 416 (expr)


State 481

  456 expr: expr_call .

    $default  reduce using rule 456 (expr)


State 482

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  680 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 693


State 483

  417 expr: expr_mtag .

    $default  reduce using rule 417 (expr)


State 484

  406 expr_call: basic_type_declaration . '(' ')'
  407          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 694


State 485

  413 expr: make_decl .

    $default  reduce using rule 413 (expr)


State 486

  751 make_decl: make_struct_decl .

    $default  reduce using rule 751 (make_decl)


State 487

  755 make_decl: make_tuple_call .

    $default  reduce using rule 755 (make_decl)


State 488

  752 make_decl: make_dim_decl .

    $default  reduce using rule 752 (make_decl)


State 489

  753 make_decl: make_table_decl .

    $default  reduce using rule 753 (make_decl)


State 490

  754 make_decl: array_comprehension .

    $default  reduce using rule 754 (make_decl)


State 491

  708 type_declaration_no_options: "iterator" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 695


State 492

  698 type_declaration_no_options: "smart_ptr" '<' $@44 . type_declaration '>' $@45

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 696


State 493

  657 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 697


State 494

  666 bitfield_type_declaration: "bitfield" '<' $@39 . bitfield_bits '>' $@40

    "name"  shift, and go to state 698

    bitfield_bits  go to state 699


State 495

  712 type_declaration_no_options: "block" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 700


State 496

  715 type_declaration_no_options: "block" '<' $@54 . optional_function_argument_list optional_function_type '>' $@55

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 701


State 497

  719 type_declaration_no_options: "function" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 702


State 498

  722 type_declaration_no_options: "function" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 703


State 499

  726 type_declaration_no_options: "lambda" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 704


State 500

  729 type_declaration_no_options: "lambda" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 705


State 501

  732 type_declaration_no_options: "tuple" '<' $@64 . tuple_type_list '>' $@65

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 520
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    tuple_type                   go to state 706
    tuple_type_list              go to state 707
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 523


State 502

  735 type_declaration_no_options: "variant" '<' $@66 . variant_type_list '>' $@67

    "name"  shift, and go to state 525

    variant_type       go to state 708
    variant_type_list  go to state 709


State 503

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  658 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 710


State 504

  683 type_declaration_no_options: '$' name_in_namespace '<' . $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 682 ($@43)

    $@43  go to state 711


State 505

  681 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 466
    expr_reader             go to state 467
    optional_expr_list      go to state 712
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 713
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 506

  693 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 693 (type_declaration_no_options)


State 507

  694 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 694 (type_declaration_no_options)


State 508

  687 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 687 (type_declaration_no_options)


State 509

  689 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 689 (type_declaration_no_options)


State 510

  684 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 714


State 511

  692 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 692 (type_declaration_no_options)


State 512

  676 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 676 (type_declaration_no_options)


State 513

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  669 dim_list: '[' expr . ']'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ']'    shift, and go to state 715


State 514

  670 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 716
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 515

  738 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 738 (type_declaration)


State 516

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  737 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    $default  reduce using rule 737 (type_declaration)

    dim_list  go to state 380


State 517

  663 bitfield_alias_bits: bitfield_alias_bits "name" . "end of expression"

    "end of expression"  shift, and go to state 717


State 518

  662 bitfield_alias_bits: bitfield_alias_bits "end of expression" .

    $default  reduce using rule 662 (bitfield_alias_bits)


State 519

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits $@76 . "end of code block"

    "end of code block"  shift, and go to state 718


State 520

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"
  531 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 99
    ':'   shift, and go to state 719

    $default  reduce using rule 260 (name_in_namespace)


State 521

  535 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 535 (tuple_alias_type_list)


State 522

  536 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 720


State 523

  530 tuple_type: type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 530 (tuple_type)


State 524

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 . "end of code block"

    "end of code block"  shift, and go to state 721


State 525

  537 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 722


State 526

  541 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 541 (variant_alias_type_list)


State 527

  542 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 723


State 528

  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 . "end of code block"

    "end of code block"  shift, and go to state 724


State 529

  181 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 181 (function_name)


State 530

  171 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 171 (function_name)


State 531

  527 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 725
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 532

  288 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 288 (kwd_let_var_or_nothing)


State 533

  289 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 289 (kwd_let_var_or_nothing)


State 534

  526 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 726
    "name"  shift, and go to state 727

    variable_declaration         go to state 728
    variable_name_with_pos_list  go to state 729


State 535

  529 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 392
    '@'   shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    metadata_argument_list         go to state 219
    optional_field_annotation      go to state 394
    function_argument_declaration  go to state 730


State 536

  119 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 119 (optional_function_argument_list)


State 537

  121 optional_function_type: ':' type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 121 (optional_function_type)


State 538

  241 expressions: expressions error .

    $default  reduce using rule 241 (expressions)


State 539

   75 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 731
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 540

   62 if_or_static_if: "if" .

    $default  reduce using rule 62 (if_or_static_if)


State 541

   63 if_or_static_if: "static_if" .

    $default  reduce using rule 63 (if_or_static_if)


State 542

   73 expression_for_loop: "for" . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 726
    "name"  shift, and go to state 727

    variable_name_with_pos_list  go to state 732


State 543

  276 expression_return_no_pipe: "return" .
  277                          | "return" . expr_list
  278                          | "return" . "<-" expr_list
  280 expression_return: "return" . expr_pipe
  281                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 733
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    $default  reduce using rule 276 (expression_return_no_pipe)

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 734
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 735
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign             go to state 736
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 737
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 544

  274 expression_break: "break" .

    $default  reduce using rule 274 (expression_break)


State 545

  287 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 738


State 546

  263 expression_delete: "delete" . expr
  264                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "explicit"                        shift, and go to state 739
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 740
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 547

   76 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 741
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 548

   77 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 742


State 549

  275 expression_continue: "continue" .

    $default  reduce using rule 275 (expression_continue)


State 550

  238 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 743


State 551

   54 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 744


State 552

   55 expression_goto: "goto" . "label" "integer constant"
   56                | "goto" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 745
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 746
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 553

   74 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 747


State 554

  282 expression_yield_no_pipe: "yield" . expr
  283                         | "yield" . "<-" expr
  285 expression_yield: "yield" . expr_pipe
  286                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 748
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 749
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign             go to state 736
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 750
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 555

  258 expr_pipe: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 464
    '@'                    shift, and go to state 751

    expression_block  go to state 752
    block_or_lambda   go to state 753
    expr_block        go to state 754


State 556

  256 expr_pipe: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 464
    '@'                    shift, and go to state 751

    expression_block  go to state 752
    block_or_lambda   go to state 753
    expr_block        go to state 755


State 557

  257 expr_pipe: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 464
    '@'                    shift, and go to state 751

    expression_block  go to state 752
    block_or_lambda   go to state 753
    expr_block        go to state 756


State 558

  242 expr_keyword: "keyword" . expr expression_block
  251 expression_keyword: "keyword" . '<' $@3 type_declaration_no_options_list '>' $@4 expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '<'                               shift, and go to state 639
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 757
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 559

  214 expression_block: "begin of code block" expressions "end of code block" .
  215                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 758

    $default  reduce using rule 214 (expression_block)


State 560

  218 expression_any: "end of expression" .

    $default  reduce using rule 218 (expression_any)


State 561

  236 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 759


State 562

  237 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 760


State 563

   71 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 761
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 564

   72 expression_if_then_else: expression_if_one_liner . "if" expr expression_else_one_liner "end of expression"

    "if"  shift, and go to state 762


State 565

  234 expression_any: expression_if_then_else .

    $default  reduce using rule 234 (expression_any)


State 566

  229 expression_any: expression_for_loop .

    $default  reduce using rule 229 (expression_any)


State 567

  226 expression_any: expression_unsafe .

    $default  reduce using rule 226 (expression_any)


State 568

  225 expression_any: expression_while_loop .

    $default  reduce using rule 225 (expression_any)


State 569

  227 expression_any: expression_with .

    $default  reduce using rule 227 (expression_any)


State 570

  228 expression_any: expression_with_alias .

    $default  reduce using rule 228 (expression_any)


State 571

  259 expr_pipe: expr_call_pipe .

    $default  reduce using rule 259 (expr_pipe)


State 572

  240 expressions: expressions expression_any .

    $default  reduce using rule 240 (expressions)


State 573

  220 expression_any: expr_keyword .

    $default  reduce using rule 220 (expression_any)


State 574

  217 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  489 expr: expression_keyword .

    '$'  shift, and go to state 464
    '@'  shift, and go to state 751

    '$'       [reduce using rule 489 (expr)]
    '@'       [reduce using rule 489 (expr)]
    $default  reduce using rule 489 (expr)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 764


State 575

  219 expression_any: expr_pipe .

    $default  reduce using rule 219 (expression_any)


State 576

  223 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 765


State 577

   69 expression_if_one_liner: expression_break .
  230 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 766

    $default  reduce using rule 69 (expression_if_one_liner)


State 578

   70 expression_if_one_liner: expression_continue .
  231 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 767

    $default  reduce using rule 70 (expression_if_one_liner)


State 579

   67 expression_if_one_liner: expression_return_no_pipe .
  279 expression_return: expression_return_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 768

    $default  reduce using rule 67 (expression_if_one_liner)


State 580

  232 expression_any: expression_return .

    $default  reduce using rule 232 (expression_any)


State 581

   68 expression_if_one_liner: expression_yield_no_pipe .
  284 expression_yield: expression_yield_no_pipe . "end of expression"

    "end of expression"  shift, and go to state 769

    $default  reduce using rule 68 (expression_if_one_liner)


State 582

  233 expression_any: expression_yield .

    $default  reduce using rule 233 (expression_any)


State 583

  235 expression_any: expression_try_catch .

    $default  reduce using rule 235 (expression_any)


State 584

  299 expression_let: kwd_let . optional_in_scope let_variable_declaration
  300               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 770

    $default  reduce using rule 294 (optional_in_scope)

    optional_in_scope  go to state 771


State 585

  224 expression_any: expression_let .

    $default  reduce using rule 224 (expression_any)


State 586

  222 expression_any: expr_assign . "end of expression"
  255 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 772
    "end of expression"  shift, and go to state 773


State 587

  221 expression_any: expr_assign_pipe .

    $default  reduce using rule 221 (expression_any)


State 588

   66 expression_if_one_liner: expr .
  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  366 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  367                 | expr . "<-" expr_assign_pipe_right
  368                 | expr . "&=" expr_assign_pipe_right
  369                 | expr . "|=" expr_assign_pipe_right
  370                 | expr . "^=" expr_assign_pipe_right
  371                 | expr . "&&=" expr_assign_pipe_right
  372                 | expr . "||=" expr_assign_pipe_right
  373                 | expr . "^^=" expr_assign_pipe_right
  374                 | expr . "+=" expr_assign_pipe_right
  375                 | expr . "-=" expr_assign_pipe_right
  376                 | expr . "*=" expr_assign_pipe_right
  377                 | expr . "/=" expr_assign_pipe_right
  378                 | expr . "%=" expr_assign_pipe_right
  379                 | expr . "<<=" expr_assign_pipe_right
  380                 | expr . ">>=" expr_assign_pipe_right
  381                 | expr . "<<<=" expr_assign_pipe_right
  382                 | expr . ">>>=" expr_assign_pipe_right
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 658
    "as"    shift, and go to state 659
    "+="    shift, and go to state 774
    "-="    shift, and go to state 775
    "/="    shift, and go to state 776
    "*="    shift, and go to state 777
    "%="    shift, and go to state 778
    "&="    shift, and go to state 779
    "|="    shift, and go to state 780
    "^="    shift, and go to state 781
    "<<"    shift, and go to state 660
    ">>"    shift, and go to state 661
    "++"    shift, and go to state 662
    "--"    shift, and go to state 663
    "<="    shift, and go to state 664
    "<<="   shift, and go to state 782
    ">>="   shift, and go to state 783
    ">="    shift, and go to state 665
    "=="    shift, and go to state 666
    "!="    shift, and go to state 667
    "->"    shift, and go to state 668
    "<-"    shift, and go to state 784
    "??"    shift, and go to state 669
    "?."    shift, and go to state 670
    "?["    shift, and go to state 671
    "<|"    shift, and go to state 672
    "|>"    shift, and go to state 673
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 674
    ">>>"   shift, and go to state 675
    "<<<="  shift, and go to state 786
    ">>>="  shift, and go to state 787
    "&&"    shift, and go to state 676
    "||"    shift, and go to state 677
    "^^"    shift, and go to state 678
    "&&="   shift, and go to state 788
    "||="   shift, and go to state 789
    "^^="   shift, and go to state 790
    ".."    shift, and go to state 679
    '='     shift, and go to state 791
    '?'     shift, and go to state 680
    '|'     shift, and go to state 681
    '^'     shift, and go to state 682
    '&'     shift, and go to state 683
    '<'     shift, and go to state 684
    '>'     shift, and go to state 685
    '-'     shift, and go to state 686
    '+'     shift, and go to state 687
    '*'     shift, and go to state 688
    '/'     shift, and go to state 689
    '%'     shift, and go to state 690
    '.'     shift, and go to state 691
    '['     shift, and go to state 692
    '$'     shift, and go to state 464
    '@'     shift, and go to state 751

    "if"      reduce using rule 66 (expression_if_one_liner)
    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 589

  577 enum_expression: "name" .
  578                | "name" . '=' expr

    '='  shift, and go to state 793

    $default  reduce using rule 577 (enum_expression)


State 590

  580 enum_list: enum_expression .

    $default  reduce using rule 580 (enum_list)


State 591

  581 enum_list: enum_list . ',' enum_expression
  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list . optional_comma $@36 "end of code block"

    ','  shift, and go to state 794

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 795


State 592

  601 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 601 (optional_structure_parent)


State 593

  521 struct_variable_declaration_list: struct_variable_declaration_list . $@29 structure_variable_declaration "end of expression"
  523                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block
  611 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 796
    '['                  shift, and go to state 15

    "def"     reduce using rule 115 (optional_annotation_list)
    $default  reduce using rule 520 ($@29)

    optional_annotation_list  go to state 797
    $@29                      go to state 798


State 594

  568 global_variable_declaration_list: global_variable_declaration_list $@32 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 568 (global_variable_declaration_list)


State 595

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  557 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 799


State 596

  558 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 558 (let_variable_name_with_pos_list)


State 597

  559 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  560                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 800

    $default  reduce using rule 559 (let_variable_name_with_pos_list)


State 598

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  562                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  563                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 370
    "implicit"           shift, and go to state 371
    "explicit"           shift, and go to state 372
    "=="                 shift, and go to state 373
    "<-"                 shift, and go to state 599
    "??"                 shift, and go to state 374
    ":="                 shift, and go to state 600
    "end of expression"  shift, and go to state 801
    '='                  shift, and go to state 601
    '?'                  shift, and go to state 375
    '&'                  shift, and go to state 376
    '-'                  shift, and go to state 377
    '['                  shift, and go to state 378
    '#'                  shift, and go to state 379

    copy_or_move_or_clone  go to state 802
    dim_list               go to state 380


State 599

  552 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 552 (copy_or_move_or_clone)


State 600

  553 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 553 (copy_or_move_or_clone)


State 601

  551 copy_or_move_or_clone: '=' .

    $default  reduce using rule 551 (copy_or_move_or_clone)


State 602

  564 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"
  565                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 803
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign             go to state 736
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 804
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 603

  679 type_declaration_no_options: "type" '<' $@41 type_declaration . '>' $@42
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 805


State 604

  702 type_declaration_no_options: "array" '<' $@46 type_declaration . '>' $@47
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 806


State 605

  705 type_declaration_no_options: "table" '<' $@48 table_type_pair . '>' $@49

    '>'  shift, and go to state 807


State 606

  667 table_type_pair: type_declaration .
  668                | type_declaration . "end of expression" type_declaration
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 808
    '|'                  shift, and go to state 381

    $default  reduce using rule 667 (table_type_pair)


State 607

  767 make_struct_decl: "struct" '<' . $@77 type_declaration_no_options '>' $@78 '(' make_struct_single ')'

    $default  reduce using rule 765 ($@77)

    $@77  go to state 809


State 608

  770 make_struct_decl: "class" '<' . $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    $default  reduce using rule 768 ($@79)

    $@79  go to state 810


State 609

  267 new_type_declaration: '<' . $@7 type_declaration '>' $@8

    $default  reduce using rule 265 ($@7)

    $@7  go to state 811


State 610

  269 expr_new: "new" new_type_declaration .
  270         | "new" new_type_declaration . '(' ')'
  271         | "new" new_type_declaration . '(' expr_list ')'
  272         | "new" new_type_declaration . '(' make_struct_single ')'

    '('  shift, and go to state 812

    '('       [reduce using rule 269 (expr_new)]
    $default  reduce using rule 269 (expr_new)


State 611

  268 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 268 (new_type_declaration)


State 612

  273 expr_new: "new" make_decl .

    $default  reduce using rule 273 (expr_new)


State 613

  313 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  314               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  315               | "typeinfo" '(' . name_in_namespace '<' "name" "end of expression" "name" '>' expr ')'

    "::"    shift, and go to state 59
    "name"  shift, and go to state 60

    name_in_namespace  go to state 813


State 614

  312 expr_type_decl: "type" '<' . $@15 type_declaration '>' $@16

    $default  reduce using rule 310 ($@15)

    $@15  go to state 814


State 615

  787 make_dim_decl: "array" '<' . $@87 type_declaration_no_options '>' $@88 '(' expr_list optional_comma ')'

    $default  reduce using rule 785 ($@87)

    $@87  go to state 815


State 616

  784 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 816
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 617

  796 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'
  797                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 817


State 618

  795 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 643
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 644
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    expr_map_tuple_list     go to state 818
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 619

  458 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 819
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 620

  303 expr_cast: "cast" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 301 ($@9)

    $@9  go to state 820


State 621

  306 expr_cast: "upcast" '<' . $@11 type_declaration_no_options '>' $@12 expr

    $default  reduce using rule 304 ($@11)

    $@11  go to state 821


State 622

  459 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 822
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 623

  309 expr_cast: "reinterpret" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 307 ($@13)

    $@13  go to state 823


State 624

  791 make_dim_decl: "fixed_array" '<' . $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 789 ($@89)

    $@89  go to state 824


State 625

  788 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 825
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 626

  776 make_struct_decl: "default" '<' . $@83 type_declaration_no_options '>' $@84

    $default  reduce using rule 774 ($@83)

    $@83  go to state 826


State 627

  782 make_tuple_call: "tuple" '<' . $@85 type_declaration_no_options '>' $@86 '(' make_struct_single ')'

    $default  reduce using rule 780 ($@85)

    $@85  go to state 827


State 628

  779 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 828
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 629

  773 make_struct_decl: "variant" '<' . $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    $default  reduce using rule 771 ($@81)

    $@81  go to state 829


State 630

  460 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  461     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 830


State 631

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  444     | "++" expr .
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 444 (expr)


State 632

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  445     | "--" expr .
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 445 (expr)


State 633

  490 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 831
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 634

  491 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 832
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 635

  492 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 833
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 636

  493 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 834
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 637

  494 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 835
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 638

  496 expr_mtag: "$c" '(' . expr ')' '(' ')'
  497          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 836
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 639

  251 expression_keyword: "keyword" '<' . $@3 type_declaration_no_options_list '>' $@4 expr

    $default  reduce using rule 249 ($@3)

    $@3  go to state 837


State 640

  254 expression_keyword: "type function" '<' . $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    $default  reduce using rule 252 ($@5)

    $@5  go to state 838


State 641

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 162
    STRING_CHARACTER_ESC  shift, and go to state 163
    "end of the string"   shift, and go to state 839
    "{"                   shift, and go to state 840

    character_sequence  go to state 841


State 642

  803 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 726
    "name"  shift, and go to state 727

    variable_name_with_pos_list  go to state 842


State 643

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  777 make_map_tuple: expr . "=>" expr
  778               | expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "=>"   shift, and go to state 843
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 778 (make_map_tuple)


State 644

  792 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 792 (expr_map_tuple_list)


State 645

  793 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  794 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 844

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 845


State 646

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  421 expr: '-' expr .
  422     | expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 421 (expr)


State 647

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  420 expr: '+' expr .
  422     | expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 420 (expr)


State 648

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  457     | '*' expr .
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 457 (expr)


State 649

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  419 expr: '~' expr .
  422     | expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 419 (expr)


State 650

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  418 expr: '!' expr .
  422     | expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 418 (expr)


State 651

  802 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 726
    "name"  shift, and go to state 727

    variable_name_with_pos_list  go to state 846


State 652

  317 expr_list: expr_list . ',' expr
  783 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 847

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 848


State 653

  316 expr_list: expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 316 (expr_list)


State 654

  317 expr_list: expr_list . ',' expr
  448 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 847

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 849


State 655

  323 block_or_lambda: '@' '@' .
  389 func_addr_expr: '@' '@' . func_addr_name
  392               | '@' '@' . '<' $@17 type_declaration_no_options '>' $@18 func_addr_name
  395               | '@' '@' . '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name
  505 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 850
    "$c"    shift, and go to state 851
    "name"  shift, and go to state 60
    '<'     shift, and go to state 852

    $default  reduce using rule 323 (block_or_lambda)

    name_in_namespace  go to state 853
    func_addr_name     go to state 854


State 656

  383 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  384                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  403 expr_call: name_in_namespace '(' . ')'
  404          | name_in_namespace '(' . make_struct_single ')'
  405          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "$f"                              shift, and go to state 855
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 856
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 857
    '('                               shift, and go to state 463
    ')'                               shift, and go to state 858
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 859
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 860
    make_struct_single      go to state 861
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 657

  334 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 862

    $default  reduce using rule 330 (optional_capture_list)

    optional_capture_list  go to state 863


State 658

  466 expr: expr "is" . "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr "is" . basic_type_declaration
  468     | expr "is" . "name"
  504 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 864
    "bool"      shift, and go to state 232
    "void"      shift, and go to state 233
    "string"    shift, and go to state 234
    "int"       shift, and go to state 236
    "int2"      shift, and go to state 237
    "int3"      shift, and go to state 238
    "int4"      shift, and go to state 239
    "uint"      shift, and go to state 240
    "bitfield"  shift, and go to state 433
    "uint2"     shift, and go to state 242
    "uint3"     shift, and go to state 243
    "uint4"     shift, and go to state 244
    "float"     shift, and go to state 245
    "float2"    shift, and go to state 246
    "float3"    shift, and go to state 247
    "float4"    shift, and go to state 248
    "range"     shift, and go to state 249
    "urange"    shift, and go to state 250
    "range64"   shift, and go to state 251
    "urange64"  shift, and go to state 252
    "int64"     shift, and go to state 254
    "uint64"    shift, and go to state 255
    "double"    shift, and go to state 256
    "int8"      shift, and go to state 259
    "uint8"     shift, and go to state 260
    "int16"     shift, and go to state 261
    "uint16"    shift, and go to state 262
    "$f"        shift, and go to state 865
    "name"      shift, and go to state 866

    basic_type_declaration  go to state 867


State 659

  469 expr: expr "as" . "name"
  472     | expr "as" . "type" '<' $@25 type_declaration '>' $@26
  473     | expr "as" . basic_type_declaration
  502 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 868
    "bool"      shift, and go to state 232
    "void"      shift, and go to state 233
    "string"    shift, and go to state 234
    "int"       shift, and go to state 236
    "int2"      shift, and go to state 237
    "int3"      shift, and go to state 238
    "int4"      shift, and go to state 239
    "uint"      shift, and go to state 240
    "bitfield"  shift, and go to state 433
    "uint2"     shift, and go to state 242
    "uint3"     shift, and go to state 243
    "uint4"     shift, and go to state 244
    "float"     shift, and go to state 245
    "float2"    shift, and go to state 246
    "float3"    shift, and go to state 247
    "float4"    shift, and go to state 248
    "range"     shift, and go to state 249
    "urange"    shift, and go to state 250
    "range64"   shift, and go to state 251
    "urange64"  shift, and go to state 252
    "int64"     shift, and go to state 254
    "uint64"    shift, and go to state 255
    "double"    shift, and go to state 256
    "int8"      shift, and go to state 259
    "uint8"     shift, and go to state 260
    "int16"     shift, and go to state 261
    "uint16"    shift, and go to state 262
    "$f"        shift, and go to state 869
    "name"      shift, and go to state 870

    basic_type_declaration  go to state 871


State 660

  422 expr: expr "<<" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 872
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 661

  423 expr: expr ">>" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 873
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 662

  446 expr: expr "++" .

    $default  reduce using rule 446 (expr)


State 663

  447 expr: expr "--" .

    $default  reduce using rule 447 (expr)


State 664

  435 expr: expr "<=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 874
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 665

  436 expr: expr ">=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 875
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 666

  433 expr: expr "==" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 876
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 667

  434 expr: expr "!=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 877
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 668

  385 expr_method_call: expr "->" . "name" '(' ')'
  386                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 878


State 669

  462 expr: expr "??" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 879
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 670

  453 expr: expr "?." . "name"
  499 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 880
    "name"  shift, and go to state 881


State 671

  451 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 882
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 672

  486 expr: expr "<|" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 883
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 673

  487 expr: expr "|>" . expr
  488     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 884
    expr_mtag               go to state 483
    basic_type_declaration  go to state 885
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 674

  424 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 886
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 675

  425 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 887
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 676

  440 expr: expr "&&" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 888
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 677

  441 expr: expr "||" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 889
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 678

  442 expr: expr "^^" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 890
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 679

  443 expr: expr ".." . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 891
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 680

  463 expr: expr '?' . expr ':' expr
  474     | expr '?' . "as" "name"
  477     | expr '?' . "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr '?' . "as" basic_type_declaration
  503 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "as"                              shift, and go to state 892
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 893
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 681

  438 expr: expr '|' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 894
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 682

  439 expr: expr '^' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 895
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 683

  437 expr: expr '&' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 896
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 684

  431 expr: expr '<' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 897
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 685

  432 expr: expr '>' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 898
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 686

  427 expr: expr '-' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 899
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 687

  426 expr: expr '+' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 900
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 688

  428 expr: expr '*' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 901
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 689

  429 expr: expr '/' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 902
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 690

  430 expr: expr '%' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 903
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 691

  396 expr_field: expr '.' . "name"
  397           | expr '.' . '.' "name"
  398           | expr '.' . "name" '(' ')'
  399           | expr '.' . "name" '(' expr_list ')'
  402           | expr '.' . $@21 error $@22
  450 expr: expr '.' . '[' expr ']'
  452     | expr '.' . "?[" expr ']'
  454     | expr '.' . "?." "name"
  498 expr_mtag: expr '.' . "$f" '(' expr ')'
  500          | expr '.' . '.' "$f" '(' expr ')'
  501          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 904
    "?["    shift, and go to state 905
    "$f"    shift, and go to state 906
    "name"  shift, and go to state 907
    '.'     shift, and go to state 908
    '['     shift, and go to state 909

    $default  reduce using rule 400 ($@21)

    $@21  go to state 910


State 692

  449 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 911
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 693

  680 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 680 (type_declaration_no_options)


State 694

  406 expr_call: basic_type_declaration '(' . ')'
  407          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    ')'                               shift, and go to state 912
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 913
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 695

  708 type_declaration_no_options: "iterator" '<' $@50 type_declaration . '>' $@51
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 914


State 696

  698 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration . '>' $@45
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 915


State 697

  657 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 657 (auto_type_declaration)


State 698

  659 bitfield_bits: "name" .

    $default  reduce using rule 659 (bitfield_bits)


State 699

  660 bitfield_bits: bitfield_bits . "end of expression" "name"
  666 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits . '>' $@40

    "end of expression"  shift, and go to state 916
    '>'                  shift, and go to state 917


State 700

  712 type_declaration_no_options: "block" '<' $@52 type_declaration . '>' $@53
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 918


State 701

  715 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list . optional_function_type '>' $@55

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 919


State 702

  719 type_declaration_no_options: "function" '<' $@56 type_declaration . '>' $@57
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 920


State 703

  722 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 921


State 704

  726 type_declaration_no_options: "lambda" '<' $@60 type_declaration . '>' $@61
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 922


State 705

  729 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 923


State 706

  532 tuple_type_list: tuple_type .

    $default  reduce using rule 532 (tuple_type_list)


State 707

  533 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  732 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list . '>' $@65

    "end of expression"  shift, and go to state 924
    '>'                  shift, and go to state 925


State 708

  538 variant_type_list: variant_type .

    $default  reduce using rule 538 (variant_type_list)


State 709

  539 variant_type_list: variant_type_list . "end of expression" variant_type
  735 type_declaration_no_options: "variant" '<' $@66 variant_type_list . '>' $@67

    "end of expression"  shift, and go to state 926
    '>'                  shift, and go to state 927


State 710

  658 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 658 (auto_type_declaration)


State 711

  683 type_declaration_no_options: '$' name_in_namespace '<' $@43 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    type_declaration_no_options_list  go to state 928
    name_in_namespace                 go to state 267
    basic_type_declaration            go to state 268
    structure_type_declaration        go to state 269
    auto_type_declaration             go to state 270
    bitfield_type_declaration         go to state 271
    type_declaration_no_options       go to state 272
    type_declaration                  go to state 929


State 712

  681 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 930


State 713

  244 optional_expr_list: expr_list .
  317 expr_list: expr_list . ',' expr

    ','  shift, and go to state 931

    $default  reduce using rule 244 (optional_expr_list)


State 714

  684 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 684 (type_declaration_no_options)


State 715

  669 dim_list: '[' expr ']' .

    $default  reduce using rule 669 (dim_list)


State 716

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  670 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ']'    shift, and go to state 932


State 717

  663 bitfield_alias_bits: bitfield_alias_bits "name" "end of expression" .

    $default  reduce using rule 663 (bitfield_alias_bits)


State 718

  750 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@74 "begin of code block" $@75 bitfield_alias_bits $@76 "end of code block" .

    $default  reduce using rule 750 (bitfield_alias_declaration)


State 719

  531 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 933


State 720

  536 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 536 (tuple_alias_type_list)


State 721

  742 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@68 "begin of code block" $@69 tuple_alias_type_list $@70 "end of code block" .

    $default  reduce using rule 742 (tuple_alias_declaration)


State 722

  537 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 934


State 723

  542 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 542 (variant_alias_type_list)


State 724

  746 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@71 "begin of code block" $@72 variant_alias_type_list $@73 "end of code block" .

    $default  reduce using rule 746 (variant_alias_declaration)


State 725

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  527 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 935


State 726

  616 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 936


State 727

  615 variable_name_with_pos_list: "name" .
  617                            | "name" . "aka" "name"

    "aka"  shift, and go to state 937

    $default  reduce using rule 615 (variable_name_with_pos_list)


State 728

  526 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 526 (function_argument_declaration)


State 729

  545 variable_declaration: variable_name_with_pos_list .
  546                     | variable_name_with_pos_list . '&'
  547                     | variable_name_with_pos_list . ':' type_declaration
  548                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  549                     | variable_name_with_pos_list . copy_or_move expr
  550                     | variable_name_with_pos_list . copy_or_move expr_pipe
  618 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  619                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 938
    ','   shift, and go to state 939
    '='   shift, and go to state 940
    ':'   shift, and go to state 941
    '&'   shift, and go to state 942

    $default  reduce using rule 545 (variable_declaration)

    copy_or_move  go to state 943


State 730

  529 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 529 (function_argument_list)


State 731

   75 expression_while_loop: "while" expr . expression_block
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 658
    "as"                   shift, and go to state 659
    "<<"                   shift, and go to state 660
    ">>"                   shift, and go to state 661
    "++"                   shift, and go to state 662
    "--"                   shift, and go to state 663
    "<="                   shift, and go to state 664
    ">="                   shift, and go to state 665
    "=="                   shift, and go to state 666
    "!="                   shift, and go to state 667
    "->"                   shift, and go to state 668
    "??"                   shift, and go to state 669
    "?."                   shift, and go to state 670
    "?["                   shift, and go to state 671
    "<|"                   shift, and go to state 672
    "|>"                   shift, and go to state 673
    "<<<"                  shift, and go to state 674
    ">>>"                  shift, and go to state 675
    "&&"                   shift, and go to state 676
    "||"                   shift, and go to state 677
    "^^"                   shift, and go to state 678
    ".."                   shift, and go to state 679
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 680
    '|'                    shift, and go to state 681
    '^'                    shift, and go to state 682
    '&'                    shift, and go to state 683
    '<'                    shift, and go to state 684
    '>'                    shift, and go to state 685
    '-'                    shift, and go to state 686
    '+'                    shift, and go to state 687
    '*'                    shift, and go to state 688
    '/'                    shift, and go to state 689
    '%'                    shift, and go to state 690
    '.'                    shift, and go to state 691
    '['                    shift, and go to state 692

    expression_block  go to state 944


State 732

   73 expression_for_loop: "for" variable_name_with_pos_list . "in" expr_list expression_block
  618 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  619                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 945
    ','   shift, and go to state 939


State 733

  278 expression_return_no_pipe: "return" "<-" . expr_list
  281 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 946
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 947
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign             go to state 736
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 737
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 734

  280 expression_return: "return" expr_pipe .

    $default  reduce using rule 280 (expression_return)


State 735

  277 expression_return_no_pipe: "return" expr_list .
  317 expr_list: expr_list . ',' expr

    ','  shift, and go to state 931

    $default  reduce using rule 277 (expression_return_no_pipe)


State 736

  255 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 772


State 737

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  316 expr_list: expr .
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 658
    "as"    shift, and go to state 659
    "+="    shift, and go to state 948
    "-="    shift, and go to state 949
    "/="    shift, and go to state 950
    "*="    shift, and go to state 951
    "%="    shift, and go to state 952
    "&="    shift, and go to state 953
    "|="    shift, and go to state 954
    "^="    shift, and go to state 955
    "<<"    shift, and go to state 660
    ">>"    shift, and go to state 661
    "++"    shift, and go to state 662
    "--"    shift, and go to state 663
    "<="    shift, and go to state 664
    "<<="   shift, and go to state 956
    ">>="   shift, and go to state 957
    ">="    shift, and go to state 665
    "=="    shift, and go to state 666
    "!="    shift, and go to state 667
    "->"    shift, and go to state 668
    "<-"    shift, and go to state 958
    "??"    shift, and go to state 669
    "?."    shift, and go to state 670
    "?["    shift, and go to state 671
    "<|"    shift, and go to state 672
    "|>"    shift, and go to state 673
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 674
    ">>>"   shift, and go to state 675
    "<<<="  shift, and go to state 959
    ">>>="  shift, and go to state 960
    "&&"    shift, and go to state 676
    "||"    shift, and go to state 677
    "^^"    shift, and go to state 678
    "&&="   shift, and go to state 961
    "||="   shift, and go to state 962
    "^^="   shift, and go to state 963
    ".."    shift, and go to state 679
    '='     shift, and go to state 964
    '?'     shift, and go to state 680
    '|'     shift, and go to state 681
    '^'     shift, and go to state 682
    '&'     shift, and go to state 683
    '<'     shift, and go to state 684
    '>'     shift, and go to state 685
    '-'     shift, and go to state 686
    '+'     shift, and go to state 687
    '*'     shift, and go to state 688
    '/'     shift, and go to state 689
    '%'     shift, and go to state 690
    '.'     shift, and go to state 691
    '['     shift, and go to state 692
    '$'     shift, and go to state 464
    '@'     shift, and go to state 751

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 316 (expr_list)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 738

  287 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 965


State 739

  264 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 966
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 740

  263 expression_delete: "delete" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 263 (expression_delete)


State 741

   76 expression_with: "with" expr . expression_block
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 658
    "as"                   shift, and go to state 659
    "<<"                   shift, and go to state 660
    ">>"                   shift, and go to state 661
    "++"                   shift, and go to state 662
    "--"                   shift, and go to state 663
    "<="                   shift, and go to state 664
    ">="                   shift, and go to state 665
    "=="                   shift, and go to state 666
    "!="                   shift, and go to state 667
    "->"                   shift, and go to state 668
    "??"                   shift, and go to state 669
    "?."                   shift, and go to state 670
    "?["                   shift, and go to state 671
    "<|"                   shift, and go to state 672
    "|>"                   shift, and go to state 673
    "<<<"                  shift, and go to state 674
    ">>>"                  shift, and go to state 675
    "&&"                   shift, and go to state 676
    "||"                   shift, and go to state 677
    "^^"                   shift, and go to state 678
    ".."                   shift, and go to state 679
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 680
    '|'                    shift, and go to state 681
    '^'                    shift, and go to state 682
    '&'                    shift, and go to state 683
    '<'                    shift, and go to state 684
    '>'                    shift, and go to state 685
    '-'                    shift, and go to state 686
    '+'                    shift, and go to state 687
    '*'                    shift, and go to state 688
    '/'                    shift, and go to state 689
    '%'                    shift, and go to state 690
    '.'                    shift, and go to state 691
    '['                    shift, and go to state 692

    expression_block  go to state 967


State 742

   77 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 968


State 743

  238 expression_any: "pass" "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 744

   54 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 969


State 745

   55 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 970


State 746

   56 expression_goto: "goto" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 56 (expression_goto)


State 747

   74 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 74 (expression_unsafe)


State 748

  283 expression_yield_no_pipe: "yield" "<-" . expr
  286 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 971
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign             go to state 736
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 972
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 749

  285 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 285 (expression_yield)


State 750

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  282 expression_yield_no_pipe: "yield" expr .
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 658
    "as"    shift, and go to state 659
    "+="    shift, and go to state 948
    "-="    shift, and go to state 949
    "/="    shift, and go to state 950
    "*="    shift, and go to state 951
    "%="    shift, and go to state 952
    "&="    shift, and go to state 953
    "|="    shift, and go to state 954
    "^="    shift, and go to state 955
    "<<"    shift, and go to state 660
    ">>"    shift, and go to state 661
    "++"    shift, and go to state 662
    "--"    shift, and go to state 663
    "<="    shift, and go to state 664
    "<<="   shift, and go to state 956
    ">>="   shift, and go to state 957
    ">="    shift, and go to state 665
    "=="    shift, and go to state 666
    "!="    shift, and go to state 667
    "->"    shift, and go to state 668
    "<-"    shift, and go to state 958
    "??"    shift, and go to state 669
    "?."    shift, and go to state 670
    "?["    shift, and go to state 671
    "<|"    shift, and go to state 672
    "|>"    shift, and go to state 673
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 674
    ">>>"   shift, and go to state 675
    "<<<="  shift, and go to state 959
    ">>>="  shift, and go to state 960
    "&&"    shift, and go to state 676
    "||"    shift, and go to state 677
    "^^"    shift, and go to state 678
    "&&="   shift, and go to state 961
    "||="   shift, and go to state 962
    "^^="   shift, and go to state 963
    ".."    shift, and go to state 679
    '='     shift, and go to state 964
    '?'     shift, and go to state 680
    '|'     shift, and go to state 681
    '^'     shift, and go to state 682
    '&'     shift, and go to state 683
    '<'     shift, and go to state 684
    '>'     shift, and go to state 685
    '-'     shift, and go to state 686
    '+'     shift, and go to state 687
    '*'     shift, and go to state 688
    '/'     shift, and go to state 689
    '%'     shift, and go to state 690
    '.'     shift, and go to state 691
    '['     shift, and go to state 692
    '$'     shift, and go to state 464
    '@'     shift, and go to state 751

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 282 (expression_yield_no_pipe)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 751

  322 block_or_lambda: '@' .
  323                | '@' . '@'

    '@'  shift, and go to state 973

    $default  reduce using rule 322 (block_or_lambda)


State 752

  332 expr_block: expression_block .

    $default  reduce using rule 332 (expr_block)


State 753

  333 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 974


State 754

  258 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 258 (expr_pipe)


State 755

  256 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 256 (expr_pipe)


State 756

  257 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 257 (expr_pipe)


State 757

  242 expr_keyword: "keyword" expr . expression_block
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 658
    "as"                   shift, and go to state 659
    "<<"                   shift, and go to state 660
    ">>"                   shift, and go to state 661
    "++"                   shift, and go to state 662
    "--"                   shift, and go to state 663
    "<="                   shift, and go to state 664
    ">="                   shift, and go to state 665
    "=="                   shift, and go to state 666
    "!="                   shift, and go to state 667
    "->"                   shift, and go to state 668
    "??"                   shift, and go to state 669
    "?."                   shift, and go to state 670
    "?["                   shift, and go to state 671
    "<|"                   shift, and go to state 672
    "|>"                   shift, and go to state 673
    "<<<"                  shift, and go to state 674
    ">>>"                  shift, and go to state 675
    "&&"                   shift, and go to state 676
    "||"                   shift, and go to state 677
    "^^"                   shift, and go to state 678
    ".."                   shift, and go to state 679
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 680
    '|'                    shift, and go to state 681
    '^'                    shift, and go to state 682
    '&'                    shift, and go to state 683
    '<'                    shift, and go to state 684
    '>'                    shift, and go to state 685
    '-'                    shift, and go to state 686
    '+'                    shift, and go to state 687
    '*'                    shift, and go to state 688
    '/'                    shift, and go to state 689
    '%'                    shift, and go to state 690
    '.'                    shift, and go to state 691
    '['                    shift, and go to state 692

    expression_block  go to state 975


State 758

  215 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 976


State 759

  236 expression_any: expression_label "end of expression" .

    $default  reduce using rule 236 (expression_any)


State 760

  237 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 761

   71 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 658
    "as"                   shift, and go to state 659
    "<<"                   shift, and go to state 660
    ">>"                   shift, and go to state 661
    "++"                   shift, and go to state 662
    "--"                   shift, and go to state 663
    "<="                   shift, and go to state 664
    ">="                   shift, and go to state 665
    "=="                   shift, and go to state 666
    "!="                   shift, and go to state 667
    "->"                   shift, and go to state 668
    "??"                   shift, and go to state 669
    "?."                   shift, and go to state 670
    "?["                   shift, and go to state 671
    "<|"                   shift, and go to state 672
    "|>"                   shift, and go to state 673
    "<<<"                  shift, and go to state 674
    ">>>"                  shift, and go to state 675
    "&&"                   shift, and go to state 676
    "||"                   shift, and go to state 677
    "^^"                   shift, and go to state 678
    ".."                   shift, and go to state 679
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 680
    '|'                    shift, and go to state 681
    '^'                    shift, and go to state 682
    '&'                    shift, and go to state 683
    '<'                    shift, and go to state 684
    '>'                    shift, and go to state 685
    '-'                    shift, and go to state 686
    '+'                    shift, and go to state 687
    '*'                    shift, and go to state 688
    '/'                    shift, and go to state 689
    '%'                    shift, and go to state 690
    '.'                    shift, and go to state 691
    '['                    shift, and go to state 692

    expression_block  go to state 977


State 762

   72 expression_if_then_else: expression_if_one_liner "if" . expr expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 978
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 763

  335 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    '['       [reduce using rule 115 (optional_annotation_list)]
    $default  reduce using rule 115 (optional_annotation_list)

    optional_annotation_list  go to state 979


State 764

  217 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 217 (expr_call_pipe)


State 765

  223 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 766

  230 expression_any: expression_break "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 767

  231 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 768

  279 expression_return: expression_return_no_pipe "end of expression" .

    $default  reduce using rule 279 (expression_return)


State 769

  284 expression_yield: expression_yield_no_pipe "end of expression" .

    $default  reduce using rule 284 (expression_yield)


State 770

  293 optional_in_scope: "inscope" .

    $default  reduce using rule 293 (optional_in_scope)


State 771

  299 expression_let: kwd_let optional_in_scope . let_variable_declaration
  300               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 350
    "name"  shift, and go to state 351
    '('     shift, and go to state 980

    tuple_expansion_variable_declaration  go to state 981
    let_variable_name_with_pos_list       go to state 352
    let_variable_declaration              go to state 982


State 772

  255 expr_pipe: expr_assign " <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 464
    '@'                    shift, and go to state 751

    expression_block  go to state 752
    block_or_lambda   go to state 753
    expr_block        go to state 983


State 773

  222 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 222 (expression_any)


State 774

  353 expr_assign: expr "+=" . expr
  374 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 988
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 989
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 775

  354 expr_assign: expr "-=" . expr
  375 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 990
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 991
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 776

  356 expr_assign: expr "/=" . expr
  377 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 992
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 993
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 777

  355 expr_assign: expr "*=" . expr
  376 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 994
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 995
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 778

  357 expr_assign: expr "%=" . expr
  378 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 996
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 997
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 779

  347 expr_assign: expr "&=" . expr
  368 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 998
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 999
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 780

  348 expr_assign: expr "|=" . expr
  369 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1000
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1001
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 781

  349 expr_assign: expr "^=" . expr
  370 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1002
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1003
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 782

  358 expr_assign: expr "<<=" . expr
  379 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1004
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1005
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 783

  359 expr_assign: expr ">>=" . expr
  380 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1006
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1007
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 784

  345 expr_assign: expr "<-" . expr
  367 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1008
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1009
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 785

  346 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1010
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 786

  360 expr_assign: expr "<<<=" . expr
  381 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1011
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1012
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 787

  361 expr_assign: expr ">>>=" . expr
  382 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1013
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1014
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 788

  350 expr_assign: expr "&&=" . expr
  371 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1015
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1016
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 789

  351 expr_assign: expr "||=" . expr
  372 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1017
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1018
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 790

  352 expr_assign: expr "^^=" . expr
  373 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1019
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1020
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 791

  344 expr_assign: expr '=' . expr
  366 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 984
    "@ <|"                            shift, and go to state 985
    "@@ <|"                           shift, and go to state 986
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 987
    expression_keyword      go to state 574
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign_pipe_right  go to state 1021
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1022
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 792

  216 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 216 (expr_call_pipe)


State 793

  578 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1023
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 794

  581 enum_list: enum_list ',' . enum_expression
  801 optional_comma: ',' .

    "name"  shift, and go to state 589

    $default  reduce using rule 801 (optional_comma)

    enum_expression  go to state 1024


State 795

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma . $@36 "end of code block"

    $default  reduce using rule 598 ($@36)

    $@36  go to state 1025


State 796

  611 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 611 (optional_struct_variable_declaration_list)


State 797

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "def"  shift, and go to state 1026


State 798

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 218

    $default  reduce using rule 506 (optional_field_annotation)

    metadata_argument_list          go to state 219
    optional_field_annotation       go to state 1027
    structure_variable_declaration  go to state 1028


State 799

  557 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 557 (let_variable_name_with_pos_list)


State 800

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1029


State 801

  561 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 561 (let_variable_declaration)


State 802

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"
  563                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 1030
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign             go to state 736
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1031
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 803

  565 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 565 (let_variable_declaration)


State 804

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  564 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 658
    "as"                 shift, and go to state 659
    "+="                 shift, and go to state 948
    "-="                 shift, and go to state 949
    "/="                 shift, and go to state 950
    "*="                 shift, and go to state 951
    "%="                 shift, and go to state 952
    "&="                 shift, and go to state 953
    "|="                 shift, and go to state 954
    "^="                 shift, and go to state 955
    "<<"                 shift, and go to state 660
    ">>"                 shift, and go to state 661
    "++"                 shift, and go to state 662
    "--"                 shift, and go to state 663
    "<="                 shift, and go to state 664
    "<<="                shift, and go to state 956
    ">>="                shift, and go to state 957
    ">="                 shift, and go to state 665
    "=="                 shift, and go to state 666
    "!="                 shift, and go to state 667
    "->"                 shift, and go to state 668
    "<-"                 shift, and go to state 958
    "??"                 shift, and go to state 669
    "?."                 shift, and go to state 670
    "?["                 shift, and go to state 671
    "<|"                 shift, and go to state 672
    "|>"                 shift, and go to state 673
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 674
    ">>>"                shift, and go to state 675
    "<<<="               shift, and go to state 959
    ">>>="               shift, and go to state 960
    "&&"                 shift, and go to state 676
    "||"                 shift, and go to state 677
    "^^"                 shift, and go to state 678
    "&&="                shift, and go to state 961
    "||="                shift, and go to state 962
    "^^="                shift, and go to state 963
    ".."                 shift, and go to state 679
    "end of expression"  shift, and go to state 1032
    '='                  shift, and go to state 964
    '?'                  shift, and go to state 680
    '|'                  shift, and go to state 681
    '^'                  shift, and go to state 682
    '&'                  shift, and go to state 683
    '<'                  shift, and go to state 684
    '>'                  shift, and go to state 685
    '-'                  shift, and go to state 686
    '+'                  shift, and go to state 687
    '*'                  shift, and go to state 688
    '/'                  shift, and go to state 689
    '%'                  shift, and go to state 690
    '.'                  shift, and go to state 691
    '['                  shift, and go to state 692
    '$'                  shift, and go to state 464
    '@'                  shift, and go to state 751

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 805

  679 type_declaration_no_options: "type" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 678 ($@42)

    $@42  go to state 1033


State 806

  702 type_declaration_no_options: "array" '<' $@46 type_declaration '>' . $@47

    $default  reduce using rule 701 ($@47)

    $@47  go to state 1034


State 807

  705 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' . $@49

    $default  reduce using rule 704 ($@49)

    $@49  go to state 1035


State 808

  668 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1036


State 809

  767 make_struct_decl: "struct" '<' $@77 . type_declaration_no_options '>' $@78 '(' make_struct_single ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1037


State 810

  770 make_struct_decl: "class" '<' $@79 . type_declaration_no_options '>' $@80 '(' make_struct_single ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1038


State 811

  267 new_type_declaration: '<' $@7 . type_declaration '>' $@8

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1039


State 812

  270 expr_new: "new" new_type_declaration '(' . ')'
  271         | "new" new_type_declaration '(' . expr_list ')'
  272         | "new" new_type_declaration '(' . make_struct_single ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "$f"                              shift, and go to state 855
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 856
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    ')'                               shift, and go to state 1040
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1041
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 860
    make_struct_single      go to state 1042
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 813

  313 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  314               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  315               | "typeinfo" '(' name_in_namespace . '<' "name" "end of expression" "name" '>' expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '<'                               shift, and go to state 1043
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1044
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 814

  312 expr_type_decl: "type" '<' $@15 . type_declaration '>' $@16

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1045


State 815

  787 make_dim_decl: "array" '<' $@87 . type_declaration_no_options '>' $@88 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1046


State 816

  317 expr_list: expr_list . ',' expr
  784 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 847

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1047


State 817

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  796 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'
  797                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "const"              shift, and go to state 370
    "implicit"           shift, and go to state 371
    "explicit"           shift, and go to state 372
    "=="                 shift, and go to state 373
    "??"                 shift, and go to state 374
    "end of expression"  shift, and go to state 1048
    '?'                  shift, and go to state 375
    '&'                  shift, and go to state 376
    '>'                  shift, and go to state 1049
    '-'                  shift, and go to state 377
    '['                  shift, and go to state 378
    '#'                  shift, and go to state 379

    dim_list  go to state 380


State 818

  793 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  795 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 844

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1050


State 819

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  458     | "deref" '(' expr . ')'
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1051


State 820

  303 expr_cast: "cast" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1052


State 821

  306 expr_cast: "upcast" '<' $@11 . type_declaration_no_options '>' $@12 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1053


State 822

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  459     | "addr" '(' expr . ')'
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1054


State 823

  309 expr_cast: "reinterpret" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1055


State 824

  791 make_dim_decl: "fixed_array" '<' $@89 . type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1056


State 825

  317 expr_list: expr_list . ',' expr
  788 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 847

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1057


State 826

  776 make_struct_decl: "default" '<' $@83 . type_declaration_no_options '>' $@84

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1058


State 827

  782 make_tuple_call: "tuple" '<' $@85 . type_declaration_no_options '>' $@86 '(' make_struct_single ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1059


State 828

  317 expr_list: expr_list . ',' expr
  779 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 847

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1060


State 829

  773 make_struct_decl: "variant" '<' $@81 . type_declaration_no_options '>' $@82 '(' make_struct_single ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1061


State 830

  460 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  461     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1062
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 831

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  490 expr_mtag: "$$" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1063


State 832

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  491 expr_mtag: "$i" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1064


State 833

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  492 expr_mtag: "$v" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1065


State 834

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  493 expr_mtag: "$b" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1066


State 835

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  494 expr_mtag: "$a" '(' expr . ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1067


State 836

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  496 expr_mtag: "$c" '(' expr . ')' '(' ')'
  497          | "$c" '(' expr . ')' '(' expr_list ')'
  498          | expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1068


State 837

  251 expression_keyword: "keyword" '<' $@3 . type_declaration_no_options_list '>' $@4 expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    type_declaration_no_options_list  go to state 1069
    name_in_namespace                 go to state 267
    basic_type_declaration            go to state 268
    structure_type_declaration        go to state 269
    auto_type_declaration             go to state 270
    bitfield_type_declaration         go to state 271
    type_declaration_no_options       go to state 272
    type_declaration                  go to state 929


State 838

  254 expression_keyword: "type function" '<' $@5 . type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    type_declaration_no_options_list  go to state 1070
    name_in_namespace                 go to state 267
    basic_type_declaration            go to state 268
    structure_type_declaration        go to state 269
    auto_type_declaration             go to state 270
    bitfield_type_declaration         go to state 271
    type_declaration_no_options       go to state 272
    type_declaration                  go to state 929


State 839

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 840

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1071
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 841

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 221
    STRING_CHARACTER_ESC  shift, and go to state 222

    STRING_CHARACTER      [reduce using rule 29 (string_builder_body)]
    STRING_CHARACTER_ESC  [reduce using rule 29 (string_builder_body)]
    $default              reduce using rule 29 (string_builder_body)


State 842

  618 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  619                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  803 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1072
    ','   shift, and go to state 939


State 843

  777 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1073
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 844

  793 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  801 optional_comma: ',' .

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    $default  reduce using rule 801 (optional_comma)

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 643
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 1074
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 845

  794 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 1075


State 846

  618 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  619                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  802 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1076
    ','   shift, and go to state 939


State 847

  317 expr_list: expr_list ',' . expr
  801 optional_comma: ',' .

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    $default  reduce using rule 801 (optional_comma)

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1077
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 848

  783 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1078


State 849

  448 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1079


State 850

  388 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1080


State 851

  505 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1081


State 852

  392 func_addr_expr: '@' '@' '<' . $@17 type_declaration_no_options '>' $@18 func_addr_name
  395               | '@' '@' '<' . $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    ':'       reduce using rule 393 ($@19)
    '>'       reduce using rule 393 ($@19)
    '('       reduce using rule 393 ($@19)
    $default  reduce using rule 390 ($@17)

    $@17  go to state 1082
    $@19  go to state 1083


State 853

  387 func_addr_name: name_in_namespace .

    $default  reduce using rule 387 (func_addr_name)


State 854

  389 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 389 (func_addr_expr)


State 855

  760 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  761                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1084


State 856

  260 name_in_namespace: "name" .
  261                  | "name" . "::" "name"
  756 make_struct_fields: "name" . copy_or_move expr
  757                   | "name" . ":=" expr

    "<-"  shift, and go to state 938
    ":="  shift, and go to state 1085
    "::"  shift, and go to state 99
    '='   shift, and go to state 940

    $default  reduce using rule 260 (name_in_namespace)

    copy_or_move  go to state 1086


State 857

  383 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  783 make_dim_decl: '[' . expr_list optional_comma ']'
  802 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 651
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "$f"                              shift, and go to state 855
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 856
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 652
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 1087
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 858

  403 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 403 (expr_call)


State 859

  317 expr_list: expr_list . ',' expr
  384 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  405 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1088
    ')'  shift, and go to state 1089


State 860

  758 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  759                   | make_struct_fields . ',' "name" ":=" expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  763                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  764 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1090

    $default  reduce using rule 764 (make_struct_single)


State 861

  404 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1091


State 862

  331 optional_capture_list: '[' . '[' capture_list ']' ']'

    '['  shift, and go to state 1092


State 863

  334 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1093


State 864

  466 expr: expr "is" "type" . '<' $@23 type_declaration_no_options '>' $@24

    '<'  shift, and go to state 1094


State 865

  504 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1095


State 866

  468 expr: expr "is" "name" .

    $default  reduce using rule 468 (expr)


State 867

  467 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 467 (expr)


State 868

  472 expr: expr "as" "type" . '<' $@25 type_declaration '>' $@26

    '<'  shift, and go to state 1096


State 869

  502 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1097


State 870

  469 expr: expr "as" "name" .

    $default  reduce using rule 469 (expr)


State 871

  473 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 473 (expr)


State 872

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  422     | expr "<<" expr .
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '-'   shift, and go to state 686
    '+'   shift, and go to state 687
    '*'   shift, and go to state 688
    '/'   shift, and go to state 689
    '%'   shift, and go to state 690
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 422 (expr)


State 873

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  423     | expr ">>" expr .
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '-'   shift, and go to state 686
    '+'   shift, and go to state 687
    '*'   shift, and go to state 688
    '/'   shift, and go to state 689
    '%'   shift, and go to state 690
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 423 (expr)


State 874

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  435     | expr "<=" expr .
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 435 (expr)


State 875

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  436     | expr ">=" expr .
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 436 (expr)


State 876

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  433     | expr "==" expr .
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 433 (expr)


State 877

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  434     | expr "!=" expr .
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 434 (expr)


State 878

  385 expr_method_call: expr "->" "name" . '(' ')'
  386                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1098


State 879

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  462     | expr "??" expr .
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 462 (expr)


State 880

  499 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1099


State 881

  453 expr: expr "?." "name" .

    $default  reduce using rule 453 (expr)


State 882

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  451     | expr "?[" expr . ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ']'    shift, and go to state 1100


State 883

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  486     | expr "<|" expr .
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 486 (expr)


State 884

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  487     | expr "|>" expr .
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 668
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 487 (expr)


State 885

  406 expr_call: basic_type_declaration . '(' ')'
  407          | basic_type_declaration . '(' expr_list ')'
  488 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 694

    $default  reduce using rule 488 (expr)


State 886

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  424     | expr "<<<" expr .
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '-'   shift, and go to state 686
    '+'   shift, and go to state 687
    '*'   shift, and go to state 688
    '/'   shift, and go to state 689
    '%'   shift, and go to state 690
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 424 (expr)


State 887

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  425     | expr ">>>" expr .
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '-'   shift, and go to state 686
    '+'   shift, and go to state 687
    '*'   shift, and go to state 688
    '/'   shift, and go to state 689
    '%'   shift, and go to state 690
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 425 (expr)


State 888

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  440     | expr "&&" expr .
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 440 (expr)


State 889

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  441     | expr "||" expr .
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "^^"   shift, and go to state 678
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 441 (expr)


State 890

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  442     | expr "^^" expr .
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 442 (expr)


State 891

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  443     | expr ".." expr .
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    ".."  error (nonassociative)

    $default  reduce using rule 443 (expr)


State 892

  474 expr: expr '?' "as" . "name"
  477     | expr '?' "as" . "type" '<' $@27 type_declaration '>' $@28
  478     | expr '?' "as" . basic_type_declaration
  503 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1101
    "bool"      shift, and go to state 232
    "void"      shift, and go to state 233
    "string"    shift, and go to state 234
    "int"       shift, and go to state 236
    "int2"      shift, and go to state 237
    "int3"      shift, and go to state 238
    "int4"      shift, and go to state 239
    "uint"      shift, and go to state 240
    "bitfield"  shift, and go to state 433
    "uint2"     shift, and go to state 242
    "uint3"     shift, and go to state 243
    "uint4"     shift, and go to state 244
    "float"     shift, and go to state 245
    "float2"    shift, and go to state 246
    "float3"    shift, and go to state 247
    "float4"    shift, and go to state 248
    "range"     shift, and go to state 249
    "urange"    shift, and go to state 250
    "range64"   shift, and go to state 251
    "urange64"  shift, and go to state 252
    "int64"     shift, and go to state 254
    "uint64"    shift, and go to state 255
    "double"    shift, and go to state 256
    "int8"      shift, and go to state 259
    "uint8"     shift, and go to state 260
    "int16"     shift, and go to state 261
    "uint16"    shift, and go to state 262
    "$f"        shift, and go to state 1102
    "name"      shift, and go to state 1103

    basic_type_declaration  go to state 1104


State 893

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  463     | expr '?' expr . ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    ':'    shift, and go to state 1105
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692


State 894

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  438     | expr '|' expr .
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 438 (expr)


State 895

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  439     | expr '^' expr .
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 439 (expr)


State 896

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  437     | expr '&' expr .
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 437 (expr)


State 897

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  431     | expr '<' expr .
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 431 (expr)


State 898

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  432     | expr '>' expr .
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 432 (expr)


State 899

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  427     | expr '-' expr .
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '*'   shift, and go to state 688
    '/'   shift, and go to state 689
    '%'   shift, and go to state 690
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 427 (expr)


State 900

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  426     | expr '+' expr .
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '*'   shift, and go to state 688
    '/'   shift, and go to state 689
    '%'   shift, and go to state 690
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 426 (expr)


State 901

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  428     | expr '*' expr .
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 428 (expr)


State 902

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  429     | expr '/' expr .
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 429 (expr)


State 903

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  430     | expr '%' expr .
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 658
    "as"  shift, and go to state 659
    "++"  shift, and go to state 662
    "--"  shift, and go to state 663
    "->"  shift, and go to state 668
    "??"  shift, and go to state 669
    "?."  shift, and go to state 670
    "?["  shift, and go to state 671
    "<|"  shift, and go to state 672
    "|>"  shift, and go to state 673
    '.'   shift, and go to state 691
    '['   shift, and go to state 692

    $default  reduce using rule 430 (expr)


State 904

  454 expr: expr '.' "?." . "name"
  501 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1106
    "name"  shift, and go to state 1107


State 905

  452 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1108
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 906

  498 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1109


State 907

  396 expr_field: expr '.' "name" .
  398           | expr '.' "name" . '(' ')'
  399           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1110

    '('       [reduce using rule 396 (expr_field)]
    $default  reduce using rule 396 (expr_field)


State 908

  397 expr_field: expr '.' '.' . "name"
  500 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1111
    "name"  shift, and go to state 1112


State 909

  450 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1113
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 910

  402 expr_field: expr '.' $@21 . error $@22

    error  shift, and go to state 1114


State 911

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  449     | expr '[' expr . ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ']'    shift, and go to state 1115


State 912

  406 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 406 (expr_call)


State 913

  317 expr_list: expr_list . ',' expr
  407 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 931
    ')'  shift, and go to state 1116


State 914

  708 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 707 ($@51)

    $@51  go to state 1117


State 915

  698 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' . $@45

    $default  reduce using rule 697 ($@45)

    $@45  go to state 1118


State 916

  660 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1119


State 917

  666 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' . $@40

    $default  reduce using rule 665 ($@40)

    $@40  go to state 1120


State 918

  712 type_declaration_no_options: "block" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 711 ($@53)

    $@53  go to state 1121


State 919

  715 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type . '>' $@55

    '>'  shift, and go to state 1122


State 920

  719 type_declaration_no_options: "function" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 718 ($@57)

    $@57  go to state 1123


State 921

  722 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1124


State 922

  726 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 725 ($@61)

    $@61  go to state 1125


State 923

  729 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1126


State 924

  533 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 520
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    tuple_type                   go to state 1127
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 523


State 925

  732 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' . $@65

    $default  reduce using rule 731 ($@65)

    $@65  go to state 1128


State 926

  539 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 525

    variant_type  go to state 1129


State 927

  735 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' . $@67

    $default  reduce using rule 734 ($@67)

    $@67  go to state 1130


State 928

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  683 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1131
    '>'                  shift, and go to state 1132


State 929

  247 type_declaration_no_options_list: type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 247 (type_declaration_no_options_list)


State 930

  681 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 681 (type_declaration_no_options)


State 931

  317 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1077
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 932

  670 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 670 (dim_list)


State 933

  531 tuple_type: "name" ':' type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 531 (tuple_type)


State 934

  537 variant_type: "name" ':' type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 537 (variant_type)


State 935

  527 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 527 (function_argument_declaration)


State 936

  616 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1133
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 937

  617 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1134


State 938

  544 copy_or_move: "<-" .

    $default  reduce using rule 544 (copy_or_move)


State 939

  618 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  619                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1135


State 940

  543 copy_or_move: '=' .

    $default  reduce using rule 543 (copy_or_move)


State 941

  547 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  548                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1136


State 942

  546 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 546 (variable_declaration)


State 943

  549 variable_declaration: variable_name_with_pos_list copy_or_move . expr
  550                     | variable_name_with_pos_list copy_or_move . expr_pipe

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expr_call_pipe          go to state 571
    expression_keyword      go to state 574
    expr_pipe               go to state 1137
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_assign             go to state 736
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1138
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 944

   75 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 75 (expression_while_loop)


State 945

   73 expression_for_loop: "for" variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1139
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 946

  281 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 281 (expression_return)


State 947

  278 expression_return_no_pipe: "return" "<-" expr_list .
  317 expr_list: expr_list . ',' expr

    ','  shift, and go to state 931

    $default  reduce using rule 278 (expression_return_no_pipe)


State 948

  353 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1140
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 949

  354 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1141
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 950

  356 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1142
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 951

  355 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1143
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 952

  357 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1144
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 953

  347 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1145
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 954

  348 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1146
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 955

  349 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1147
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 956

  358 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1148
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 957

  359 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1149
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 958

  345 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1150
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 959

  360 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1151
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 960

  361 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1152
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 961

  350 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1153
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 962

  351 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1154
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 963

  352 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1155
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 964

  344 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1156
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 965

  287 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1157


State 966

  264 expression_delete: "delete" "explicit" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 264 (expression_delete)


State 967

   76 expression_with: "with" expr expression_block .

    $default  reduce using rule 76 (expression_with)


State 968

   77 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1158
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 969

   54 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 54 (expression_label)


State 970

   55 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 55 (expression_goto)


State 971

  286 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 286 (expression_yield)


State 972

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  283 expression_yield_no_pipe: "yield" "<-" expr .
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 658
    "as"    shift, and go to state 659
    "+="    shift, and go to state 948
    "-="    shift, and go to state 949
    "/="    shift, and go to state 950
    "*="    shift, and go to state 951
    "%="    shift, and go to state 952
    "&="    shift, and go to state 953
    "|="    shift, and go to state 954
    "^="    shift, and go to state 955
    "<<"    shift, and go to state 660
    ">>"    shift, and go to state 661
    "++"    shift, and go to state 662
    "--"    shift, and go to state 663
    "<="    shift, and go to state 664
    "<<="   shift, and go to state 956
    ">>="   shift, and go to state 957
    ">="    shift, and go to state 665
    "=="    shift, and go to state 666
    "!="    shift, and go to state 667
    "->"    shift, and go to state 668
    "<-"    shift, and go to state 958
    "??"    shift, and go to state 669
    "?."    shift, and go to state 670
    "?["    shift, and go to state 671
    "<|"    shift, and go to state 672
    "|>"    shift, and go to state 673
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 674
    ">>>"   shift, and go to state 675
    "<<<="  shift, and go to state 959
    ">>>="  shift, and go to state 960
    "&&"    shift, and go to state 676
    "||"    shift, and go to state 677
    "^^"    shift, and go to state 678
    "&&="   shift, and go to state 961
    "||="   shift, and go to state 962
    "^^="   shift, and go to state 963
    ".."    shift, and go to state 679
    '='     shift, and go to state 964
    '?'     shift, and go to state 680
    '|'     shift, and go to state 681
    '^'     shift, and go to state 682
    '&'     shift, and go to state 683
    '<'     shift, and go to state 684
    '>'     shift, and go to state 685
    '-'     shift, and go to state 686
    '+'     shift, and go to state 687
    '*'     shift, and go to state 688
    '/'     shift, and go to state 689
    '%'     shift, and go to state 690
    '.'     shift, and go to state 691
    '['     shift, and go to state 692
    '$'     shift, and go to state 464
    '@'     shift, and go to state 751

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 283 (expression_yield_no_pipe)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 973

  323 block_or_lambda: '@' '@' .

    $default  reduce using rule 323 (block_or_lambda)


State 974

  333 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 862

    $default  reduce using rule 330 (optional_capture_list)

    optional_capture_list  go to state 1159


State 975

  242 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 242 (expr_keyword)


State 976

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 239 (expressions)

    expressions  go to state 1160


State 977

   71 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1161
    "elif"         shift, and go to state 1162
    "static_elif"  shift, and go to state 1163

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1164
    expression_else      go to state 1165


State 978

   72 expression_if_then_else: expression_if_one_liner "if" expr . expression_else_one_liner "end of expression"
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1166
    "is"    shift, and go to state 658
    "as"    shift, and go to state 659
    "<<"    shift, and go to state 660
    ">>"    shift, and go to state 661
    "++"    shift, and go to state 662
    "--"    shift, and go to state 663
    "<="    shift, and go to state 664
    ">="    shift, and go to state 665
    "=="    shift, and go to state 666
    "!="    shift, and go to state 667
    "->"    shift, and go to state 668
    "??"    shift, and go to state 669
    "?."    shift, and go to state 670
    "?["    shift, and go to state 671
    "<|"    shift, and go to state 672
    "|>"    shift, and go to state 673
    "<<<"   shift, and go to state 674
    ">>>"   shift, and go to state 675
    "&&"    shift, and go to state 676
    "||"    shift, and go to state 677
    "^^"    shift, and go to state 678
    ".."    shift, and go to state 679
    '?'     shift, and go to state 680
    '|'     shift, and go to state 681
    '^'     shift, and go to state 682
    '&'     shift, and go to state 683
    '<'     shift, and go to state 684
    '>'     shift, and go to state 685
    '-'     shift, and go to state 686
    '+'     shift, and go to state 687
    '*'     shift, and go to state 688
    '/'     shift, and go to state 689
    '%'     shift, and go to state 690
    '.'     shift, and go to state 691
    '['     shift, and go to state 692

    $default  reduce using rule 64 (expression_else_one_liner)

    expression_else_one_liner  go to state 1167


State 979

  335 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 862

    $default  reduce using rule 330 (optional_capture_list)

    optional_capture_list  go to state 1168


State 980

  297 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  298                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1169

    tuple_expansion  go to state 1170


State 981

  300 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 300 (expression_let)


State 982

  299 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 299 (expression_let)


State 983

  255 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 255 (expr_pipe)


State 984

  364 expr_assign_pipe_right: "$ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 464
    '@'                    shift, and go to state 751

    expression_block  go to state 752
    block_or_lambda   go to state 753
    expr_block        go to state 1171


State 985

  362 expr_assign_pipe_right: "@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 464
    '@'                    shift, and go to state 751

    expression_block  go to state 752
    block_or_lambda   go to state 753
    expr_block        go to state 1172


State 986

  363 expr_assign_pipe_right: "@@ <|" . expr_block

    "begin of code block"  shift, and go to state 332
    '$'                    shift, and go to state 464
    '@'                    shift, and go to state 751

    expression_block  go to state 752
    block_or_lambda   go to state 753
    expr_block        go to state 1173


State 987

  365 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 365 (expr_assign_pipe_right)


State 988

  374 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 374 (expr_assign_pipe)


State 989

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  353 expr_assign: expr "+=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 353 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 990

  375 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 375 (expr_assign_pipe)


State 991

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  354 expr_assign: expr "-=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 354 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 992

  377 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 377 (expr_assign_pipe)


State 993

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  356 expr_assign: expr "/=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 356 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 994

  376 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 376 (expr_assign_pipe)


State 995

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  355 expr_assign: expr "*=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 355 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 996

  378 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 378 (expr_assign_pipe)


State 997

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  357 expr_assign: expr "%=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 357 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 998

  368 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 368 (expr_assign_pipe)


State 999

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_assign: expr "&=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 347 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1000

  369 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 369 (expr_assign_pipe)


State 1001

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  348 expr_assign: expr "|=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 348 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1002

  370 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 370 (expr_assign_pipe)


State 1003

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  349 expr_assign: expr "^=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 349 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1004

  379 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 379 (expr_assign_pipe)


State 1005

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  358 expr_assign: expr "<<=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 358 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1006

  380 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 380 (expr_assign_pipe)


State 1007

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  359 expr_assign: expr ">>=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 359 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1008

  367 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 367 (expr_assign_pipe)


State 1009

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  345 expr_assign: expr "<-" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 345 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1010

  346 expr_assign: expr ":=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 346 (expr_assign)


State 1011

  381 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 381 (expr_assign_pipe)


State 1012

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  360 expr_assign: expr "<<<=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 360 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1013

  382 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 382 (expr_assign_pipe)


State 1014

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  361 expr_assign: expr ">>>=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 361 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1015

  371 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 371 (expr_assign_pipe)


State 1016

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  350 expr_assign: expr "&&=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 350 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1017

  372 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 372 (expr_assign_pipe)


State 1018

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  351 expr_assign: expr "||=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 351 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1019

  373 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 373 (expr_assign_pipe)


State 1020

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  352 expr_assign: expr "^^=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 352 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1021

  366 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 366 (expr_assign_pipe)


State 1022

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  344 expr_assign: expr '=' expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    '$'    shift, and go to state 464
    '@'    shift, and go to state 751

    $default  reduce using rule 344 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1023

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  578 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 578 (enum_expression)


State 1024

  581 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 581 (enum_list)


State 1025

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 . "end of code block"

    "end of code block"  shift, and go to state 1174


State 1026

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "public"   shift, and go to state 1175
    "private"  shift, and go to state 1176

    $default  reduce using rule 513 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1177


State 1027

  518 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1178

    $default  reduce using rule 516 (optional_static_member_variable)

    optional_static_member_variable  go to state 1179


State 1028

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1180


State 1029

  560 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 560 (let_variable_name_with_pos_list)


State 1030

  563 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 563 (let_variable_declaration)


State 1031

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 658
    "as"                 shift, and go to state 659
    "+="                 shift, and go to state 948
    "-="                 shift, and go to state 949
    "/="                 shift, and go to state 950
    "*="                 shift, and go to state 951
    "%="                 shift, and go to state 952
    "&="                 shift, and go to state 953
    "|="                 shift, and go to state 954
    "^="                 shift, and go to state 955
    "<<"                 shift, and go to state 660
    ">>"                 shift, and go to state 661
    "++"                 shift, and go to state 662
    "--"                 shift, and go to state 663
    "<="                 shift, and go to state 664
    "<<="                shift, and go to state 956
    ">>="                shift, and go to state 957
    ">="                 shift, and go to state 665
    "=="                 shift, and go to state 666
    "!="                 shift, and go to state 667
    "->"                 shift, and go to state 668
    "<-"                 shift, and go to state 958
    "??"                 shift, and go to state 669
    "?."                 shift, and go to state 670
    "?["                 shift, and go to state 671
    "<|"                 shift, and go to state 672
    "|>"                 shift, and go to state 673
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 674
    ">>>"                shift, and go to state 675
    "<<<="               shift, and go to state 959
    ">>>="               shift, and go to state 960
    "&&"                 shift, and go to state 676
    "||"                 shift, and go to state 677
    "^^"                 shift, and go to state 678
    "&&="                shift, and go to state 961
    "||="                shift, and go to state 962
    "^^="                shift, and go to state 963
    ".."                 shift, and go to state 679
    "end of expression"  shift, and go to state 1181
    '='                  shift, and go to state 964
    '?'                  shift, and go to state 680
    '|'                  shift, and go to state 681
    '^'                  shift, and go to state 682
    '&'                  shift, and go to state 683
    '<'                  shift, and go to state 684
    '>'                  shift, and go to state 685
    '-'                  shift, and go to state 686
    '+'                  shift, and go to state 687
    '*'                  shift, and go to state 688
    '/'                  shift, and go to state 689
    '%'                  shift, and go to state 690
    '.'                  shift, and go to state 691
    '['                  shift, and go to state 692
    '$'                  shift, and go to state 464
    '@'                  shift, and go to state 751

    $default  reduce using rule 343 (expr_assign)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1032

  564 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 564 (let_variable_declaration)


State 1033

  679 type_declaration_no_options: "type" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 679 (type_declaration_no_options)


State 1034

  702 type_declaration_no_options: "array" '<' $@46 type_declaration '>' $@47 .

    $default  reduce using rule 702 (type_declaration_no_options)


State 1035

  705 type_declaration_no_options: "table" '<' $@48 table_type_pair '>' $@49 .

    $default  reduce using rule 705 (type_declaration_no_options)


State 1036

  668 table_type_pair: type_declaration "end of expression" type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 668 (table_type_pair)


State 1037

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options . '>' $@78 '(' make_struct_single ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1182
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1038

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options . '>' $@80 '(' make_struct_single ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1183
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1039

  267 new_type_declaration: '<' $@7 type_declaration . '>' $@8
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1184


State 1040

  270 expr_new: "new" new_type_declaration '(' ')' .

    $default  reduce using rule 270 (expr_new)


State 1041

  271 expr_new: "new" new_type_declaration '(' expr_list . ')'
  317 expr_list: expr_list . ',' expr

    ','  shift, and go to state 931
    ')'  shift, and go to state 1185


State 1042

  272 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1186


State 1043

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  315               | "typeinfo" '(' name_in_namespace '<' . "name" "end of expression" "name" '>' expr ')'

    "name"  shift, and go to state 1187


State 1044

  313 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1188


State 1045

  312 expr_type_decl: "type" '<' $@15 type_declaration . '>' $@16
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1189


State 1046

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options . '>' $@88 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1190
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1047

  784 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1191


State 1048

  797 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')'

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1192


State 1049

  796 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1193


State 1050

  795 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1194


State 1051

  458 expr: "deref" '(' expr ')' .

    $default  reduce using rule 458 (expr)


State 1052

  303 expr_cast: "cast" '<' $@9 type_declaration_no_options . '>' $@10 expr
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1195
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1053

  306 expr_cast: "upcast" '<' $@11 type_declaration_no_options . '>' $@12 expr
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1196
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1054

  459 expr: "addr" '(' expr ')' .

    $default  reduce using rule 459 (expr)


State 1055

  309 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options . '>' $@14 expr
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1197
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1056

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options . '>' $@90 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1198
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1057

  788 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1199


State 1058

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options . '>' $@84

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1200
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1059

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options . '>' $@86 '(' make_struct_single ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1201
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1060

  779 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1202


State 1061

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options . '>' $@82 '(' make_struct_single ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1203
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1062

  460 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  461     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    '['  shift, and go to state 862

    $default  reduce using rule 330 (optional_capture_list)

    optional_capture_list  go to state 1204


State 1063

  490 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1064

  491 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1065

  492 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1066

  493 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1067

  494 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 494 (expr_mtag)


State 1068

  496 expr_mtag: "$c" '(' expr ')' . '(' ')'
  497          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1205


State 1069

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list . '>' $@4 expr

    "end of expression"  shift, and go to state 1131
    '>'                  shift, and go to state 1206


State 1070

  248 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list . '>' $@6 optional_expr_list_in_braces

    "end of expression"  shift, and go to state 1131
    '>'                  shift, and go to state 1207


State 1071

   30 string_builder_body: string_builder_body "{" expr . "}"
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    "}"    shift, and go to state 1208
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692


State 1072

  803 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1209
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1073

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  777 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 777 (make_map_tuple)


State 1074

  793 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 793 (expr_map_tuple_list)


State 1075

  794 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 794 (make_table_decl)


State 1076

  802 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1210
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1077

  317 expr_list: expr_list ',' expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 317 (expr_list)


State 1078

  783 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 783 (make_dim_decl)


State 1079

  448 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 448 (expr)


State 1080

  388 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1211
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1081

  505 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1212
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1082

  392 func_addr_expr: '@' '@' '<' $@17 . type_declaration_no_options '>' $@18 func_addr_name

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1213


State 1083

  395 func_addr_expr: '@' '@' '<' $@19 . optional_function_argument_list optional_function_type '>' $@20 func_addr_name

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1214


State 1084

  760 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  761                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1215
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1085

  757 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1216
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1086

  756 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1217
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1087

  383 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  758 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  759                   | make_struct_fields . ',' "name" ":=" expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  763                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1090
    ']'  shift, and go to state 1218


State 1088

  317 expr_list: expr_list ',' . expr
  384 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 1219
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1077
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1089

  405 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 405 (expr_call)


State 1090

  758 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  759                   | make_struct_fields ',' . "name" ":=" expr
  762                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  763                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1220
    "name"  shift, and go to state 1221


State 1091

  404 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 404 (expr_call)


State 1092

  331 optional_capture_list: '[' '[' . capture_list ']' ']'

    "<-"  shift, and go to state 1222
    ":="  shift, and go to state 1223
    '='   shift, and go to state 1224
    '&'   shift, and go to state 1225

    capture_entry  go to state 1226
    capture_list   go to state 1227


State 1093

  334 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1228


State 1094

  466 expr: expr "is" "type" '<' . $@23 type_declaration_no_options '>' $@24

    $default  reduce using rule 464 ($@23)

    $@23  go to state 1229


State 1095

  504 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1230
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1096

  472 expr: expr "as" "type" '<' . $@25 type_declaration '>' $@26

    $default  reduce using rule 470 ($@25)

    $@25  go to state 1231


State 1097

  502 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1232
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1098

  385 expr_method_call: expr "->" "name" '(' . ')'
  386                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    ')'                               shift, and go to state 1233
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1234
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1099

  499 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1235
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1100

  451 expr: expr "?[" expr ']' .

    $default  reduce using rule 451 (expr)


State 1101

  477 expr: expr '?' "as" "type" . '<' $@27 type_declaration '>' $@28

    '<'  shift, and go to state 1236


State 1102

  503 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1237


State 1103

  474 expr: expr '?' "as" "name" .

    $default  reduce using rule 474 (expr)


State 1104

  478 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 478 (expr)


State 1105

  463 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1238
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1106

  501 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1239


State 1107

  454 expr: expr '.' "?." "name" .

    $default  reduce using rule 454 (expr)


State 1108

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  452     | expr '.' "?[" expr . ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ']'    shift, and go to state 1240


State 1109

  498 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1241
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1110

  398 expr_field: expr '.' "name" '(' . ')'
  399           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    ')'                               shift, and go to state 1242
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1243
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1111

  500 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1244


State 1112

  397 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 397 (expr_field)


State 1113

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  450     | expr '.' '[' expr . ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ']'    shift, and go to state 1245


State 1114

  402 expr_field: expr '.' $@21 error . $@22

    $default  reduce using rule 401 ($@22)

    $@22  go to state 1246


State 1115

  449 expr: expr '[' expr ']' .

    $default  reduce using rule 449 (expr)


State 1116

  407 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 407 (expr_call)


State 1117

  708 type_declaration_no_options: "iterator" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 708 (type_declaration_no_options)


State 1118

  698 type_declaration_no_options: "smart_ptr" '<' $@44 type_declaration '>' $@45 .

    $default  reduce using rule 698 (type_declaration_no_options)


State 1119

  660 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 660 (bitfield_bits)


State 1120

  666 bitfield_type_declaration: "bitfield" '<' $@39 bitfield_bits '>' $@40 .

    $default  reduce using rule 666 (bitfield_type_declaration)


State 1121

  712 type_declaration_no_options: "block" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 712 (type_declaration_no_options)


State 1122

  715 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' . $@55

    $default  reduce using rule 714 ($@55)

    $@55  go to state 1247


State 1123

  719 type_declaration_no_options: "function" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 719 (type_declaration_no_options)


State 1124

  722 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 721 ($@59)

    $@59  go to state 1248


State 1125

  726 type_declaration_no_options: "lambda" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 726 (type_declaration_no_options)


State 1126

  729 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 728 ($@63)

    $@63  go to state 1249


State 1127

  533 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 533 (tuple_type_list)


State 1128

  732 type_declaration_no_options: "tuple" '<' $@64 tuple_type_list '>' $@65 .

    $default  reduce using rule 732 (type_declaration_no_options)


State 1129

  539 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 539 (variant_type_list)


State 1130

  735 type_declaration_no_options: "variant" '<' $@66 variant_type_list '>' $@67 .

    $default  reduce using rule 735 (type_declaration_no_options)


State 1131

  248 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1250


State 1132

  683 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1251


State 1133

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  616 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1252


State 1134

  617 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 617 (variable_name_with_pos_list)


State 1135

  618 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  619                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1253

    $default  reduce using rule 618 (variable_name_with_pos_list)


State 1136

  547 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  548                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 938
    '='   shift, and go to state 940
    '|'   shift, and go to state 381

    $default  reduce using rule 547 (variable_declaration)

    copy_or_move  go to state 1254


State 1137

  550 variable_declaration: variable_name_with_pos_list copy_or_move expr_pipe .

    $default  reduce using rule 550 (variable_declaration)


State 1138

  216 expr_call_pipe: expr . expr_full_block_assumed_piped
  343 expr_assign: expr .
  344            | expr . '=' expr
  345            | expr . "<-" expr
  346            | expr . ":=" expr
  347            | expr . "&=" expr
  348            | expr . "|=" expr
  349            | expr . "^=" expr
  350            | expr . "&&=" expr
  351            | expr . "||=" expr
  352            | expr . "^^=" expr
  353            | expr . "+=" expr
  354            | expr . "-=" expr
  355            | expr . "*=" expr
  356            | expr . "/=" expr
  357            | expr . "%=" expr
  358            | expr . "<<=" expr
  359            | expr . ">>=" expr
  360            | expr . "<<<=" expr
  361            | expr . ">>>=" expr
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  549 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"    shift, and go to state 658
    "as"    shift, and go to state 659
    "+="    shift, and go to state 948
    "-="    shift, and go to state 949
    "/="    shift, and go to state 950
    "*="    shift, and go to state 951
    "%="    shift, and go to state 952
    "&="    shift, and go to state 953
    "|="    shift, and go to state 954
    "^="    shift, and go to state 955
    "<<"    shift, and go to state 660
    ">>"    shift, and go to state 661
    "++"    shift, and go to state 662
    "--"    shift, and go to state 663
    "<="    shift, and go to state 664
    "<<="   shift, and go to state 956
    ">>="   shift, and go to state 957
    ">="    shift, and go to state 665
    "=="    shift, and go to state 666
    "!="    shift, and go to state 667
    "->"    shift, and go to state 668
    "<-"    shift, and go to state 958
    "??"    shift, and go to state 669
    "?."    shift, and go to state 670
    "?["    shift, and go to state 671
    "<|"    shift, and go to state 672
    "|>"    shift, and go to state 673
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 674
    ">>>"   shift, and go to state 675
    "<<<="  shift, and go to state 959
    ">>>="  shift, and go to state 960
    "&&"    shift, and go to state 676
    "||"    shift, and go to state 677
    "^^"    shift, and go to state 678
    "&&="   shift, and go to state 961
    "||="   shift, and go to state 962
    "^^="   shift, and go to state 963
    ".."    shift, and go to state 679
    '='     shift, and go to state 964
    '?'     shift, and go to state 680
    '|'     shift, and go to state 681
    '^'     shift, and go to state 682
    '&'     shift, and go to state 683
    '<'     shift, and go to state 684
    '>'     shift, and go to state 685
    '-'     shift, and go to state 686
    '+'     shift, and go to state 687
    '*'     shift, and go to state 688
    '/'     shift, and go to state 689
    '%'     shift, and go to state 690
    '.'     shift, and go to state 691
    '['     shift, and go to state 692
    '$'     shift, and go to state 464
    '@'     shift, and go to state 751

    " <|"     reduce using rule 343 (expr_assign)
    $default  reduce using rule 549 (variable_declaration)

    block_or_lambda                go to state 763
    expr_full_block_assumed_piped  go to state 792


State 1139

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list . expression_block
  317 expr_list: expr_list . ',' expr

    "begin of code block"  shift, and go to state 332
    ','                    shift, and go to state 931

    expression_block  go to state 1255


State 1140

  353 expr_assign: expr "+=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 353 (expr_assign)


State 1141

  354 expr_assign: expr "-=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 354 (expr_assign)


State 1142

  356 expr_assign: expr "/=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 356 (expr_assign)


State 1143

  355 expr_assign: expr "*=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 355 (expr_assign)


State 1144

  357 expr_assign: expr "%=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 357 (expr_assign)


State 1145

  347 expr_assign: expr "&=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 347 (expr_assign)


State 1146

  348 expr_assign: expr "|=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 348 (expr_assign)


State 1147

  349 expr_assign: expr "^=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 349 (expr_assign)


State 1148

  358 expr_assign: expr "<<=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 358 (expr_assign)


State 1149

  359 expr_assign: expr ">>=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 359 (expr_assign)


State 1150

  345 expr_assign: expr "<-" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 345 (expr_assign)


State 1151

  360 expr_assign: expr "<<<=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 360 (expr_assign)


State 1152

  361 expr_assign: expr ">>>=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 361 (expr_assign)


State 1153

  350 expr_assign: expr "&&=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 350 (expr_assign)


State 1154

  351 expr_assign: expr "||=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 351 (expr_assign)


State 1155

  352 expr_assign: expr "^^=" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 352 (expr_assign)


State 1156

  344 expr_assign: expr '=' expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 344 (expr_assign)


State 1157

  287 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 287 (expression_try_catch)


State 1158

   77 expression_with_alias: "assume" "name" '=' expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 77 (expression_with_alias)


State 1159

  333 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1256


State 1160

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  240 expressions: expressions . expression_any
  241            | expressions . error

    error                             shift, and go to state 538
    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 539
    "if"                              shift, and go to state 540
    "static_if"                       shift, and go to state 541
    "for"                             shift, and go to state 542
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 543
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 544
    "try"                             shift, and go to state 545
    "table"                           shift, and go to state 425
    "delete"                          shift, and go to state 546
    "deref"                           shift, and go to state 426
    "with"                            shift, and go to state 547
    "assume"                          shift, and go to state 548
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 549
    "pass"                            shift, and go to state 550
    "reinterpret"                     shift, and go to state 430
    "label"                           shift, and go to state 551
    "goto"                            shift, and go to state 552
    "unsafe"                          shift, and go to state 553
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "yield"                           shift, and go to state 554
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "$ <|"                            shift, and go to state 555
    "@ <|"                            shift, and go to state 556
    "@@ <|"                           shift, and go to state 557
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 558
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    "end of code block"               shift, and go to state 1257
    "end of expression"               shift, and go to state 560
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder             go to state 466
    expr_reader                go to state 467
    expression_label           go to state 561
    expression_goto            go to state 562
    if_or_static_if            go to state 563
    expression_if_one_liner    go to state 564
    expression_if_then_else    go to state 565
    expression_for_loop        go to state 566
    expression_unsafe          go to state 567
    expression_while_loop      go to state 568
    expression_with            go to state 569
    expression_with_alias      go to state 570
    expr_call_pipe             go to state 571
    expression_any             go to state 572
    expr_keyword               go to state 573
    expression_keyword         go to state 574
    expr_pipe                  go to state 575
    name_in_namespace          go to state 469
    expression_delete          go to state 576
    expr_new                   go to state 470
    expression_break           go to state 577
    expression_continue        go to state 578
    expression_return_no_pipe  go to state 579
    expression_return          go to state 580
    expression_yield_no_pipe   go to state 581
    expression_yield           go to state 582
    expression_try_catch       go to state 583
    kwd_let                    go to state 584
    expression_let             go to state 585
    expr_cast                  go to state 471
    expr_type_decl             go to state 472
    expr_type_info             go to state 473
    block_or_lambda            go to state 474
    expr_full_block            go to state 475
    expr_numeric_const         go to state 476
    expr_assign                go to state 586
    expr_assign_pipe           go to state 587
    expr_named_call            go to state 477
    expr_method_call           go to state 478
    func_addr_expr             go to state 479
    expr_field                 go to state 480
    expr_call                  go to state 481
    expr                       go to state 588
    expr_mtag                  go to state 483
    basic_type_declaration     go to state 484
    make_decl                  go to state 485
    make_struct_decl           go to state 486
    make_tuple_call            go to state 487
    make_dim_decl              go to state 488
    make_table_decl            go to state 489
    array_comprehension        go to state 490


State 1161

   60 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1258


State 1162

   57 elif_or_static_elif: "elif" .

    $default  reduce using rule 57 (elif_or_static_elif)


State 1163

   58 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 58 (elif_or_static_elif)


State 1164

   61 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1259
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1165

   71 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 71 (expression_if_then_else)


State 1166

   65 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "return"                          shift, and go to state 1260
    "null"                            shift, and go to state 424
    "break"                           shift, and go to state 544
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "continue"                        shift, and go to state 549
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "yield"                           shift, and go to state 1261
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder             go to state 466
    expr_reader                go to state 467
    expression_if_one_liner    go to state 1262
    expression_keyword         go to state 468
    name_in_namespace          go to state 469
    expr_new                   go to state 470
    expression_break           go to state 1263
    expression_continue        go to state 1264
    expression_return_no_pipe  go to state 1265
    expression_yield_no_pipe   go to state 1266
    expr_cast                  go to state 471
    expr_type_decl             go to state 472
    expr_type_info             go to state 473
    block_or_lambda            go to state 474
    expr_full_block            go to state 475
    expr_numeric_const         go to state 476
    expr_named_call            go to state 477
    expr_method_call           go to state 478
    func_addr_expr             go to state 479
    expr_field                 go to state 480
    expr_call                  go to state 481
    expr                       go to state 1267
    expr_mtag                  go to state 483
    basic_type_declaration     go to state 484
    make_decl                  go to state 485
    make_struct_decl           go to state 486
    make_tuple_call            go to state 487
    make_dim_decl              go to state 488
    make_table_decl            go to state 489
    array_comprehension        go to state 490


State 1167

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1268


State 1168

  335 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 330

    $default  reduce using rule 117 (optional_function_argument_list)

    optional_function_argument_list  go to state 1269


State 1169

  295 tuple_expansion: "name" .

    $default  reduce using rule 295 (tuple_expansion)


State 1170

  296 tuple_expansion: tuple_expansion . ',' "name"
  297 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  298                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1270
    ')'  shift, and go to state 1271


State 1171

  364 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 364 (expr_assign_pipe_right)


State 1172

  362 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 362 (expr_assign_pipe_right)


State 1173

  363 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 363 (expr_assign_pipe_right)


State 1174

  599 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@35 enum_list optional_comma $@36 "end of code block" .

    $default  reduce using rule 599 (enum_declaration)


State 1175

  514 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 514 (optional_public_or_private_member_variable)


State 1176

  515 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 515 (optional_public_or_private_member_variable)


State 1177

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@30 function_declaration_header "end of expression"
  525                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block

    "abstract"  shift, and go to state 1272
    "static"    shift, and go to state 1178

    $default  reduce using rule 516 (optional_static_member_variable)

    optional_static_member_variable  go to state 1273


State 1178

  517 optional_static_member_variable: "static" .

    $default  reduce using rule 517 (optional_static_member_variable)


State 1179

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1274
    "sealed"    shift, and go to state 1275

    $default  reduce using rule 508 (optional_override)

    optional_override  go to state 1276


State 1180

  521 struct_variable_declaration_list: struct_variable_declaration_list $@29 structure_variable_declaration "end of expression" .

    $default  reduce using rule 521 (struct_variable_declaration_list)


State 1181

  562 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 562 (let_variable_declaration)


State 1182

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' . $@78 '(' make_struct_single ')'

    $default  reduce using rule 766 ($@78)

    $@78  go to state 1277


State 1183

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' . $@80 '(' make_struct_single ')'

    $default  reduce using rule 769 ($@80)

    $@80  go to state 1278


State 1184

  267 new_type_declaration: '<' $@7 type_declaration '>' . $@8

    $default  reduce using rule 266 ($@8)

    $@8  go to state 1279


State 1185

  271 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 271 (expr_new)


State 1186

  272 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 272 (expr_new)


State 1187

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  315               | "typeinfo" '(' name_in_namespace '<' "name" . "end of expression" "name" '>' expr ')'

    "end of expression"  shift, and go to state 1280
    '>'                  shift, and go to state 1281


State 1188

  313 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 313 (expr_type_info)


State 1189

  312 expr_type_decl: "type" '<' $@15 type_declaration '>' . $@16

    $default  reduce using rule 311 ($@16)

    $@16  go to state 1282


State 1190

  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options '>' . $@88 '(' expr_list optional_comma ')'

    $default  reduce using rule 786 ($@88)

    $@88  go to state 1283


State 1191

  784 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 784 (make_dim_decl)


State 1192

  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"
  797 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' expr_map_tuple_list optional_comma ')'

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1284
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1193

  796 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 643
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 644
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    expr_map_tuple_list     go to state 1285
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1194

  795 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 795 (make_table_decl)


State 1195

  303 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 302 ($@10)

    $@10  go to state 1286


State 1196

  306 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' . $@12 expr

    $default  reduce using rule 305 ($@12)

    $@12  go to state 1287


State 1197

  309 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 308 ($@14)

    $@14  go to state 1288


State 1198

  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options '>' . $@90 '(' expr_list optional_comma ')'

    $default  reduce using rule 790 ($@90)

    $@90  go to state 1289


State 1199

  788 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 788 (make_dim_decl)


State 1200

  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' . $@84

    $default  reduce using rule 775 ($@84)

    $@84  go to state 1290


State 1201

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' . $@86 '(' make_struct_single ')'

    $default  reduce using rule 781 ($@86)

    $@86  go to state 1291


State 1202

  779 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 779 (make_tuple_call)


State 1203

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' . $@82 '(' make_struct_single ')'

    $default  reduce using rule 772 ($@82)

    $@82  go to state 1292


State 1204

  460 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  461     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1293


State 1205

  496 expr_mtag: "$c" '(' expr ')' '(' . ')'
  497          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    ')'                               shift, and go to state 1294
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1295
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1206

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' . $@4 expr

    $default  reduce using rule 250 ($@4)

    $@4  go to state 1296


State 1207

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' . $@6 optional_expr_list_in_braces

    $default  reduce using rule 253 ($@6)

    $@6  go to state 1297


State 1208

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1209

  317 expr_list: expr_list . ',' expr
  803 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1298
    ','                  shift, and go to state 931


State 1210

  317 expr_list: expr_list . ',' expr
  802 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1299
    ','                  shift, and go to state 931


State 1211

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  388 func_addr_name: "$i" '(' expr . ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1300


State 1212

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  505          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1301


State 1213

  392 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options . '>' $@18 func_addr_name
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1302
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1214

  395 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list . optional_function_type '>' $@20 func_addr_name

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1303


State 1215

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  760 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  761                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1304


State 1216

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  757 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 757 (make_struct_fields)


State 1217

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  756 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 756 (make_struct_fields)


State 1218

  383 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1305


State 1219

  384 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  783 make_dim_decl: '[' . expr_list optional_comma ']'
  802 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "for"                             shift, and go to state 651
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "$f"                              shift, and go to state 855
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 856
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 652
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_fields      go to state 1306
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1220

  762 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  763                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1307


State 1221

  758 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  759                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 938
    ":="  shift, and go to state 1308
    '='   shift, and go to state 940

    copy_or_move  go to state 1309


State 1222

  326 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1310


State 1223

  327 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1311


State 1224

  325 capture_entry: '=' . "name"

    "name"  shift, and go to state 1312


State 1225

  324 capture_entry: '&' . "name"

    "name"  shift, and go to state 1313


State 1226

  328 capture_list: capture_entry .

    $default  reduce using rule 328 (capture_list)


State 1227

  329 capture_list: capture_list . ',' capture_entry
  331 optional_capture_list: '[' '[' capture_list . ']' ']'

    ','  shift, and go to state 1314
    ']'  shift, and go to state 1315


State 1228

  334 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1316
    "begin of code block"  shift, and go to state 332

    expression_block       go to state 1317
    block_or_simple_block  go to state 1318


State 1229

  466 expr: expr "is" "type" '<' $@23 . type_declaration_no_options '>' $@24

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1319


State 1230

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  504          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1320


State 1231

  472 expr: expr "as" "type" '<' $@25 . type_declaration '>' $@26

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1321


State 1232

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  502          | expr "as" "$f" '(' expr . ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1322


State 1233

  385 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 385 (expr_method_call)


State 1234

  317 expr_list: expr_list . ',' expr
  386 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 931
    ')'  shift, and go to state 1323


State 1235

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  499          | expr "?." "$f" '(' expr . ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1324


State 1236

  477 expr: expr '?' "as" "type" '<' . $@27 type_declaration '>' $@28

    $default  reduce using rule 475 ($@27)

    $@27  go to state 1325


State 1237

  503 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1326
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1238

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  463     | expr '?' expr ':' expr .
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 463 (expr)


State 1239

  501 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1327
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1240

  452 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 452 (expr)


State 1241

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  498          | expr '.' "$f" '(' expr . ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1328


State 1242

  398 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 398 (expr_field)


State 1243

  317 expr_list: expr_list . ',' expr
  399 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 931
    ')'  shift, and go to state 1329


State 1244

  500 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1330
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1245

  450 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 450 (expr)


State 1246

  402 expr_field: expr '.' $@21 error $@22 .

    $default  reduce using rule 402 (expr_field)


State 1247

  715 type_declaration_no_options: "block" '<' $@54 optional_function_argument_list optional_function_type '>' $@55 .

    $default  reduce using rule 715 (type_declaration_no_options)


State 1248

  722 type_declaration_no_options: "function" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 722 (type_declaration_no_options)


State 1249

  729 type_declaration_no_options: "lambda" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 729 (type_declaration_no_options)


State 1250

  248 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381

    $default  reduce using rule 248 (type_declaration_no_options_list)


State 1251

  683 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 466
    expr_reader             go to state 467
    optional_expr_list      go to state 1331
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 713
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1252

  616 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 616 (variable_name_with_pos_list)


State 1253

  619 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1332


State 1254

  548 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1333
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1255

   73 expression_for_loop: "for" variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 73 (expression_for_loop)


State 1256

  333 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1334


State 1257

  215 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 215 (expression_block)


State 1258

   60 expression_else: "else" expression_block .

    $default  reduce using rule 60 (expression_else)


State 1259

   61 expression_else: elif_or_static_elif expr . expression_block expression_else
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 658
    "as"                   shift, and go to state 659
    "<<"                   shift, and go to state 660
    ">>"                   shift, and go to state 661
    "++"                   shift, and go to state 662
    "--"                   shift, and go to state 663
    "<="                   shift, and go to state 664
    ">="                   shift, and go to state 665
    "=="                   shift, and go to state 666
    "!="                   shift, and go to state 667
    "->"                   shift, and go to state 668
    "??"                   shift, and go to state 669
    "?."                   shift, and go to state 670
    "?["                   shift, and go to state 671
    "<|"                   shift, and go to state 672
    "|>"                   shift, and go to state 673
    "<<<"                  shift, and go to state 674
    ">>>"                  shift, and go to state 675
    "&&"                   shift, and go to state 676
    "||"                   shift, and go to state 677
    "^^"                   shift, and go to state 678
    ".."                   shift, and go to state 679
    "begin of code block"  shift, and go to state 332
    '?'                    shift, and go to state 680
    '|'                    shift, and go to state 681
    '^'                    shift, and go to state 682
    '&'                    shift, and go to state 683
    '<'                    shift, and go to state 684
    '>'                    shift, and go to state 685
    '-'                    shift, and go to state 686
    '+'                    shift, and go to state 687
    '*'                    shift, and go to state 688
    '/'                    shift, and go to state 689
    '%'                    shift, and go to state 690
    '.'                    shift, and go to state 691
    '['                    shift, and go to state 692

    expression_block  go to state 1335


State 1260

  276 expression_return_no_pipe: "return" .
  277                          | "return" . expr_list
  278                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 1336
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    $default  reduce using rule 276 (expression_return_no_pipe)

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 735
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1261

  282 expression_yield_no_pipe: "yield" . expr
  283                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 1337
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1338
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1262

   65 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 65 (expression_else_one_liner)


State 1263

   69 expression_if_one_liner: expression_break .

    $default  reduce using rule 69 (expression_if_one_liner)


State 1264

   70 expression_if_one_liner: expression_continue .

    $default  reduce using rule 70 (expression_if_one_liner)


State 1265

   67 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1266

   68 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1267

   66 expression_if_one_liner: expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 66 (expression_if_one_liner)


State 1268

   72 expression_if_then_else: expression_if_one_liner "if" expr expression_else_one_liner "end of expression" .

    $default  reduce using rule 72 (expression_if_then_else)


State 1269

  335 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 397

    $default  reduce using rule 120 (optional_function_type)

    optional_function_type  go to state 1339


State 1270

  296 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1340


State 1271

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  298                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1341
    '&'  shift, and go to state 411

    $default  reduce using rule 554 (optional_ref)

    optional_ref  go to state 1342


State 1272

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@30 function_declaration_header "end of expression"

    "const"  shift, and go to state 1343

    $default  reduce using rule 511 (optional_constant)

    optional_constant  go to state 1344


State 1273

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@31 function_declaration_header expression_block

    "override"  shift, and go to state 1274
    "sealed"    shift, and go to state 1275

    $default  reduce using rule 508 (optional_override)

    optional_override  go to state 1345


State 1274

  509 optional_override: "override" .

    $default  reduce using rule 509 (optional_override)


State 1275

  510 optional_override: "sealed" .

    $default  reduce using rule 510 (optional_override)


State 1276

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1175
    "private"  shift, and go to state 1176

    $default  reduce using rule 513 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1346


State 1277

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 . '(' make_struct_single ')'

    '('  shift, and go to state 1347


State 1278

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 . '(' make_struct_single ')'

    '('  shift, and go to state 1348


State 1279

  267 new_type_declaration: '<' $@7 type_declaration '>' $@8 .

    $default  reduce using rule 267 (new_type_declaration)


State 1280

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" . "name" '>' expr ')'

    "name"  shift, and go to state 1349


State 1281

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1350
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1282

  312 expr_type_decl: "type" '<' $@15 type_declaration '>' $@16 .

    $default  reduce using rule 312 (expr_type_decl)


State 1283

  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options '>' $@88 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1351


State 1284

  797 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' expr_map_tuple_list optional_comma ')'

    '('  shift, and go to state 1352


State 1285

  793 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  796 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 844

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1353


State 1286

  303 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1354
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1287

  306 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1355
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1288

  309 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1356
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1289

  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options '>' $@90 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1357


State 1290

  776 make_struct_decl: "default" '<' $@83 type_declaration_no_options '>' $@84 .

    $default  reduce using rule 776 (make_struct_decl)


State 1291

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 . '(' make_struct_single ')'

    '('  shift, and go to state 1358


State 1292

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 . '(' make_struct_single ')'

    '('  shift, and go to state 1359


State 1293

  460 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  461     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    ')'                               shift, and go to state 1360
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1361
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1294

  496 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 496 (expr_mtag)


State 1295

  317 expr_list: expr_list . ',' expr
  497 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 931
    ')'  shift, and go to state 1362


State 1296

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1363
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1297

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 . optional_expr_list_in_braces

    '('  shift, and go to state 1364

    '('       [reduce using rule 245 (optional_expr_list_in_braces)]
    $default  reduce using rule 245 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1365


State 1298

  803 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 643
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 1366
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1299

  802 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1367
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1300

  388 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 388 (func_addr_name)


State 1301

  505 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 505 (expr_mtag)


State 1302

  392 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' . $@18 func_addr_name

    $default  reduce using rule 391 ($@18)

    $@18  go to state 1368


State 1303

  395 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type . '>' $@20 func_addr_name

    '>'  shift, and go to state 1369


State 1304

  760 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  761                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 938
    ":="  shift, and go to state 1370
    '='   shift, and go to state 940

    copy_or_move  go to state 1371


State 1305

  383 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 383 (expr_named_call)


State 1306

  384 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  758 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  759                   | make_struct_fields . ',' "name" ":=" expr
  762                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  763                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1090
    ']'  shift, and go to state 1372


State 1307

  762 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  763                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1373
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1308

  759 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1374
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1309

  758 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1375
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1310

  326 capture_entry: "<-" "name" .

    $default  reduce using rule 326 (capture_entry)


State 1311

  327 capture_entry: ":=" "name" .

    $default  reduce using rule 327 (capture_entry)


State 1312

  325 capture_entry: '=' "name" .

    $default  reduce using rule 325 (capture_entry)


State 1313

  324 capture_entry: '&' "name" .

    $default  reduce using rule 324 (capture_entry)


State 1314

  329 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1222
    ":="  shift, and go to state 1223
    '='   shift, and go to state 1224
    '&'   shift, and go to state 1225

    capture_entry  go to state 1376


State 1315

  331 optional_capture_list: '[' '[' capture_list ']' . ']'

    ']'  shift, and go to state 1377


State 1316

  319 block_or_simple_block: "=>" . expr
  320                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "<-"                              shift, and go to state 1378
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1379
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1317

  318 block_or_simple_block: expression_block .

    $default  reduce using rule 318 (block_or_simple_block)


State 1318

  334 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 334 (expr_full_block)


State 1319

  466 expr: expr "is" "type" '<' $@23 type_declaration_no_options . '>' $@24
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "??"        shift, and go to state 374
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '>'         shift, and go to state 1380
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    dim_list  go to state 380


State 1320

  504 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 504 (expr_mtag)


State 1321

  472 expr: expr "as" "type" '<' $@25 type_declaration . '>' $@26
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1381


State 1322

  502 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 502 (expr_mtag)


State 1323

  386 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 386 (expr_method_call)


State 1324

  499 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 499 (expr_mtag)


State 1325

  477 expr: expr '?' "as" "type" '<' $@27 . type_declaration '>' $@28

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 272
    type_declaration             go to state 1382


State 1326

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  503          | expr '?' "as" "$f" '(' expr . ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1383


State 1327

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  501          | expr '.' "?." "$f" '(' expr . ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1384


State 1328

  498 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 498 (expr_mtag)


State 1329

  399 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 399 (expr_field)


State 1330

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  500          | expr '.' '.' "$f" '(' expr . ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1385


State 1331

  683 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1386


State 1332

  619 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 619 (variable_name_with_pos_list)


State 1333

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  548 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 548 (variable_declaration)


State 1334

  333 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1316
    "begin of code block"  shift, and go to state 332

    expression_block       go to state 1317
    block_or_simple_block  go to state 1387


State 1335

   61 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1161
    "elif"         shift, and go to state 1162
    "static_elif"  shift, and go to state 1163

    $default  reduce using rule 59 (expression_else)

    elif_or_static_elif  go to state 1164
    expression_else      go to state 1388


State 1336

  278 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 947
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1337

  283 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1389
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1338

  282 expression_yield_no_pipe: "yield" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 282 (expression_yield_no_pipe)


State 1339

  335 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1390


State 1340

  296 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 296 (tuple_expansion)


State 1341

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 226
    "array"      shift, and go to state 227
    "table"      shift, and go to state 228
    "typedecl"   shift, and go to state 229
    "iterator"   shift, and go to state 230
    "smart_ptr"  shift, and go to state 231
    "bool"       shift, and go to state 232
    "void"       shift, and go to state 233
    "string"     shift, and go to state 234
    "auto"       shift, and go to state 235
    "int"        shift, and go to state 236
    "int2"       shift, and go to state 237
    "int3"       shift, and go to state 238
    "int4"       shift, and go to state 239
    "uint"       shift, and go to state 240
    "bitfield"   shift, and go to state 241
    "uint2"      shift, and go to state 242
    "uint3"      shift, and go to state 243
    "uint4"      shift, and go to state 244
    "float"      shift, and go to state 245
    "float2"     shift, and go to state 246
    "float3"     shift, and go to state 247
    "float4"     shift, and go to state 248
    "range"      shift, and go to state 249
    "urange"     shift, and go to state 250
    "range64"    shift, and go to state 251
    "urange64"   shift, and go to state 252
    "block"      shift, and go to state 253
    "int64"      shift, and go to state 254
    "uint64"     shift, and go to state 255
    "double"     shift, and go to state 256
    "function"   shift, and go to state 257
    "lambda"     shift, and go to state 258
    "int8"       shift, and go to state 259
    "uint8"      shift, and go to state 260
    "int16"      shift, and go to state 261
    "uint16"     shift, and go to state 262
    "tuple"      shift, and go to state 263
    "variant"    shift, and go to state 264
    "::"         shift, and go to state 59
    "$t"         shift, and go to state 265
    "name"       shift, and go to state 60
    '$'          shift, and go to state 266

    name_in_namespace            go to state 267
    basic_type_declaration       go to state 268
    structure_type_declaration   go to state 269
    auto_type_declaration        go to state 270
    bitfield_type_declaration    go to state 271
    type_declaration_no_options  go to state 1391


State 1342

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 599
    ":="  shift, and go to state 600
    '='   shift, and go to state 601

    copy_or_move_or_clone  go to state 1392


State 1343

  512 optional_constant: "const" .

    $default  reduce using rule 512 (optional_constant)


State 1344

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@30 function_declaration_header "end of expression"

    $default  reduce using rule 522 ($@30)

    $@30  go to state 1393


State 1345

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@31 function_declaration_header expression_block

    "const"  shift, and go to state 1343

    $default  reduce using rule 511 (optional_constant)

    optional_constant  go to state 1394


State 1346

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 726
    "name"  shift, and go to state 727

    variable_declaration         go to state 1395
    variable_name_with_pos_list  go to state 729


State 1347

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' . make_struct_single ')'

    "$f"    shift, and go to state 855
    "name"  shift, and go to state 1396

    make_struct_fields  go to state 860
    make_struct_single  go to state 1397


State 1348

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' . make_struct_single ')'

    "$f"    shift, and go to state 855
    "name"  shift, and go to state 1396

    make_struct_fields  go to state 860
    make_struct_single  go to state 1398


State 1349

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" . '>' expr ')'

    '>'  shift, and go to state 1399


State 1350

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1400


State 1351

  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options '>' $@88 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1401
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1352

  797 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 643
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_map_tuple          go to state 644
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    expr_map_tuple_list     go to state 1402
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1353

  796 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1403


State 1354

  303 expr_cast: "cast" '<' $@9 type_declaration_no_options '>' $@10 expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 303 (expr_cast)


State 1355

  306 expr_cast: "upcast" '<' $@11 type_declaration_no_options '>' $@12 expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 306 (expr_cast)


State 1356

  309 expr_cast: "reinterpret" '<' $@13 type_declaration_no_options '>' $@14 expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 309 (expr_cast)


State 1357

  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options '>' $@90 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 1404
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1358

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' . make_struct_single ')'

    "$f"    shift, and go to state 855
    "name"  shift, and go to state 1396

    make_struct_fields  go to state 860
    make_struct_single  go to state 1405


State 1359

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' . make_struct_single ')'

    "$f"    shift, and go to state 855
    "name"  shift, and go to state 1396

    make_struct_fields  go to state 860
    make_struct_single  go to state 1406


State 1360

  460 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 460 (expr)


State 1361

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  461     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1407


State 1362

  497 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 497 (expr_mtag)


State 1363

  251 expression_keyword: "keyword" '<' $@3 type_declaration_no_options_list '>' $@4 expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 251 (expression_keyword)


State 1364

  246 optional_expr_list_in_braces: '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    $default  reduce using rule 243 (optional_expr_list)

    string_builder          go to state 466
    expr_reader             go to state 467
    optional_expr_list      go to state 1408
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    expr_list               go to state 713
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 653
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1365

  254 expression_keyword: "type function" '<' $@5 type_declaration_no_options_list '>' $@6 optional_expr_list_in_braces .

    $default  reduce using rule 254 (expression_keyword)


State 1366

  803 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1409

    $default  reduce using rule 798 (array_comprehension_where)

    array_comprehension_where  go to state 1410


State 1367

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  802 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 658
    "as"                 shift, and go to state 659
    "<<"                 shift, and go to state 660
    ">>"                 shift, and go to state 661
    "++"                 shift, and go to state 662
    "--"                 shift, and go to state 663
    "<="                 shift, and go to state 664
    ">="                 shift, and go to state 665
    "=="                 shift, and go to state 666
    "!="                 shift, and go to state 667
    "->"                 shift, and go to state 668
    "??"                 shift, and go to state 669
    "?."                 shift, and go to state 670
    "?["                 shift, and go to state 671
    "<|"                 shift, and go to state 672
    "|>"                 shift, and go to state 673
    "<<<"                shift, and go to state 674
    ">>>"                shift, and go to state 675
    "&&"                 shift, and go to state 676
    "||"                 shift, and go to state 677
    "^^"                 shift, and go to state 678
    ".."                 shift, and go to state 679
    "end of expression"  shift, and go to state 1409
    '?'                  shift, and go to state 680
    '|'                  shift, and go to state 681
    '^'                  shift, and go to state 682
    '&'                  shift, and go to state 683
    '<'                  shift, and go to state 684
    '>'                  shift, and go to state 685
    '-'                  shift, and go to state 686
    '+'                  shift, and go to state 687
    '*'                  shift, and go to state 688
    '/'                  shift, and go to state 689
    '%'                  shift, and go to state 690
    '.'                  shift, and go to state 691
    '['                  shift, and go to state 692

    $default  reduce using rule 798 (array_comprehension_where)

    array_comprehension_where  go to state 1411


State 1368

  392 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 850
    "name"  shift, and go to state 60

    name_in_namespace  go to state 853
    func_addr_name     go to state 1412


State 1369

  395 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' . $@20 func_addr_name

    $default  reduce using rule 394 ($@20)

    $@20  go to state 1413


State 1370

  761 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1414
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1371

  760 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1415
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1372

  384 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1416


State 1373

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  763                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1417


State 1374

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  759 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 759 (make_struct_fields)


State 1375

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  758 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 758 (make_struct_fields)


State 1376

  329 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 329 (capture_list)


State 1377

  331 optional_capture_list: '[' '[' capture_list ']' ']' .

    $default  reduce using rule 331 (optional_capture_list)


State 1378

  320 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1418
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1379

  319 block_or_simple_block: "=>" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    ".."  error (nonassociative)

    $default  reduce using rule 319 (block_or_simple_block)


State 1380

  466 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' . $@24

    $default  reduce using rule 465 ($@24)

    $@24  go to state 1419


State 1381

  472 expr: expr "as" "type" '<' $@25 type_declaration '>' . $@26

    $default  reduce using rule 471 ($@26)

    $@26  go to state 1420


State 1382

  477 expr: expr '?' "as" "type" '<' $@27 type_declaration . '>' $@28
  737 type_declaration: type_declaration . '|' type_declaration_no_options
  738                 | type_declaration . '|' '#'

    '|'  shift, and go to state 381
    '>'  shift, and go to state 1421


State 1383

  503 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 503 (expr_mtag)


State 1384

  501 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 501 (expr_mtag)


State 1385

  500 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 500 (expr_mtag)


State 1386

  683 type_declaration_no_options: '$' name_in_namespace '<' $@43 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 683 (type_declaration_no_options)


State 1387

  333 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 333 (expr_block)


State 1388

   61 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 61 (expression_else)


State 1389

  283 expression_yield_no_pipe: "yield" "<-" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 283 (expression_yield_no_pipe)


State 1390

  335 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 335 (expr_full_block_assumed_piped)


State 1391

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"
  675 type_declaration_no_options: type_declaration_no_options . dim_list
  676                            | type_declaration_no_options . '[' ']'
  684                            | type_declaration_no_options . '-' '[' ']'
  685                            | type_declaration_no_options . "explicit"
  686                            | type_declaration_no_options . "const"
  687                            | type_declaration_no_options . '-' "const"
  688                            | type_declaration_no_options . '&'
  689                            | type_declaration_no_options . '-' '&'
  690                            | type_declaration_no_options . '#'
  691                            | type_declaration_no_options . "implicit"
  692                            | type_declaration_no_options . '-' '#'
  693                            | type_declaration_no_options . "==" "const"
  694                            | type_declaration_no_options . "==" '&'
  695                            | type_declaration_no_options . '?'
  699                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 370
    "implicit"  shift, and go to state 371
    "explicit"  shift, and go to state 372
    "=="        shift, and go to state 373
    "<-"        shift, and go to state 599
    "??"        shift, and go to state 374
    ":="        shift, and go to state 600
    '='         shift, and go to state 601
    '?'         shift, and go to state 375
    '&'         shift, and go to state 376
    '-'         shift, and go to state 377
    '['         shift, and go to state 378
    '#'         shift, and go to state 379

    copy_or_move_or_clone  go to state 1422
    dim_list               go to state 380


State 1392

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1423
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1393

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1424


State 1394

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@31 function_declaration_header expression_block

    $default  reduce using rule 524 ($@31)

    $@31  go to state 1425


State 1395

  518 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 518 (structure_variable_declaration)


State 1396

  756 make_struct_fields: "name" . copy_or_move expr
  757                   | "name" . ":=" expr

    "<-"  shift, and go to state 938
    ":="  shift, and go to state 1085
    '='   shift, and go to state 940

    copy_or_move  go to state 1086


State 1397

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_single . ')'

    ')'  shift, and go to state 1426


State 1398

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single . ')'

    ')'  shift, and go to state 1427


State 1399

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' . expr ')'

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1428
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1400

  314 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 314 (expr_type_info)


State 1401

  317 expr_list: expr_list . ',' expr
  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 847

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1429


State 1402

  793 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  797 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 844

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1430


State 1403

  796 make_table_decl: "table" '<' type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 796 (make_table_decl)


State 1404

  317 expr_list: expr_list . ',' expr
  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 847

    $default  reduce using rule 800 (optional_comma)

    optional_comma  go to state 1431


State 1405

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' make_struct_single . ')'

    ')'  shift, and go to state 1432


State 1406

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single . ')'

    ')'  shift, and go to state 1433


State 1407

  461 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 461 (expr)


State 1408

  246 optional_expr_list_in_braces: '(' optional_expr_list . ')'

    ')'  shift, and go to state 1434


State 1409

  799 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1435


State 1410

  803 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1436


State 1411

  802 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1437


State 1412

  392 func_addr_expr: '@' '@' '<' $@17 type_declaration_no_options '>' $@18 func_addr_name .

    $default  reduce using rule 392 (func_addr_expr)


State 1413

  395 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 . func_addr_name

    "::"    shift, and go to state 59
    "$i"    shift, and go to state 850
    "name"  shift, and go to state 60

    name_in_namespace  go to state 853
    func_addr_name     go to state 1438


State 1414

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  761 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 761 (make_struct_fields)


State 1415

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  760 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 760 (make_struct_fields)


State 1416

  384 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 384 (expr_named_call)


State 1417

  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  763                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 938
    ":="  shift, and go to state 1439
    '='   shift, and go to state 940

    copy_or_move  go to state 1440


State 1418

  320 block_or_simple_block: "=>" "<-" expr .
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 320 (block_or_simple_block)


State 1419

  466 expr: expr "is" "type" '<' $@23 type_declaration_no_options '>' $@24 .

    $default  reduce using rule 466 (expr)


State 1420

  472 expr: expr "as" "type" '<' $@25 type_declaration '>' $@26 .

    $default  reduce using rule 472 (expr)


State 1421

  477 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' . $@28

    $default  reduce using rule 476 ($@28)

    $@28  go to state 1441


State 1422

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1442
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1423

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 658
    "as"                 shift, and go to state 659
    "<<"                 shift, and go to state 660
    ">>"                 shift, and go to state 661
    "++"                 shift, and go to state 662
    "--"                 shift, and go to state 663
    "<="                 shift, and go to state 664
    ">="                 shift, and go to state 665
    "=="                 shift, and go to state 666
    "!="                 shift, and go to state 667
    "->"                 shift, and go to state 668
    "??"                 shift, and go to state 669
    "?."                 shift, and go to state 670
    "?["                 shift, and go to state 671
    "<|"                 shift, and go to state 672
    "|>"                 shift, and go to state 673
    "<<<"                shift, and go to state 674
    ">>>"                shift, and go to state 675
    "&&"                 shift, and go to state 676
    "||"                 shift, and go to state 677
    "^^"                 shift, and go to state 678
    ".."                 shift, and go to state 679
    "end of expression"  shift, and go to state 1443
    '?'                  shift, and go to state 680
    '|'                  shift, and go to state 681
    '^'                  shift, and go to state 682
    '&'                  shift, and go to state 683
    '<'                  shift, and go to state 684
    '>'                  shift, and go to state 685
    '-'                  shift, and go to state 686
    '+'                  shift, and go to state 687
    '*'                  shift, and go to state 688
    '/'                  shift, and go to state 689
    '%'                  shift, and go to state 690
    '.'                  shift, and go to state 691
    '['                  shift, and go to state 692


State 1424

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1444


State 1425

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 . function_declaration_header expression_block

    "operator"  shift, and go to state 181
    "bool"      shift, and go to state 182
    "string"    shift, and go to state 183
    "int"       shift, and go to state 184
    "int2"      shift, and go to state 185
    "int3"      shift, and go to state 186
    "int4"      shift, and go to state 187
    "uint"      shift, and go to state 188
    "uint2"     shift, and go to state 189
    "uint3"     shift, and go to state 190
    "uint4"     shift, and go to state 191
    "float"     shift, and go to state 192
    "float2"    shift, and go to state 193
    "float3"    shift, and go to state 194
    "float4"    shift, and go to state 195
    "range"     shift, and go to state 196
    "urange"    shift, and go to state 197
    "range64"   shift, and go to state 198
    "urange64"  shift, and go to state 199
    "int64"     shift, and go to state 200
    "uint64"    shift, and go to state 201
    "double"    shift, and go to state 202
    "int8"      shift, and go to state 203
    "uint8"     shift, and go to state 204
    "int16"     shift, and go to state 205
    "uint16"    shift, and go to state 206
    "++"        shift, and go to state 207
    "--"        shift, and go to state 208
    "name"      shift, and go to state 209

    function_name                go to state 210
    function_declaration_header  go to state 1445


State 1426

  767 make_struct_decl: "struct" '<' $@77 type_declaration_no_options '>' $@78 '(' make_struct_single ')' .

    $default  reduce using rule 767 (make_struct_decl)


State 1427

  770 make_struct_decl: "class" '<' $@79 type_declaration_no_options '>' $@80 '(' make_struct_single ')' .

    $default  reduce using rule 770 (make_struct_decl)


State 1428

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr . ')'
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692
    ')'    shift, and go to state 1446


State 1429

  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1447


State 1430

  797 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1448


State 1431

  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1449


State 1432

  782 make_tuple_call: "tuple" '<' $@85 type_declaration_no_options '>' $@86 '(' make_struct_single ')' .

    $default  reduce using rule 782 (make_tuple_call)


State 1433

  773 make_struct_decl: "variant" '<' $@81 type_declaration_no_options '>' $@82 '(' make_struct_single ')' .

    $default  reduce using rule 773 (make_struct_decl)


State 1434

  246 optional_expr_list_in_braces: '(' optional_expr_list ')' .

    $default  reduce using rule 246 (optional_expr_list_in_braces)


State 1435

  799 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1450
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1436

  803 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 803 (array_comprehension)


State 1437

  802 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 802 (array_comprehension)


State 1438

  395 func_addr_expr: '@' '@' '<' $@19 optional_function_argument_list optional_function_type '>' $@20 func_addr_name .

    $default  reduce using rule 395 (func_addr_expr)


State 1439

  763 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1451
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1440

  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 416
    "class"                           shift, and go to state 417
    "true"                            shift, and go to state 418
    "false"                           shift, and go to state 419
    "new"                             shift, and go to state 420
    "typeinfo"                        shift, and go to state 421
    "type"                            shift, and go to state 422
    "array"                           shift, and go to state 423
    "null"                            shift, and go to state 424
    "table"                           shift, and go to state 425
    "deref"                           shift, and go to state 426
    "cast"                            shift, and go to state 427
    "upcast"                          shift, and go to state 428
    "addr"                            shift, and go to state 429
    "reinterpret"                     shift, and go to state 430
    "fixed_array"                     shift, and go to state 431
    "default"                         shift, and go to state 432
    "bool"                            shift, and go to state 232
    "void"                            shift, and go to state 233
    "string"                          shift, and go to state 234
    "int"                             shift, and go to state 236
    "int2"                            shift, and go to state 237
    "int3"                            shift, and go to state 238
    "int4"                            shift, and go to state 239
    "uint"                            shift, and go to state 240
    "bitfield"                        shift, and go to state 433
    "uint2"                           shift, and go to state 242
    "uint3"                           shift, and go to state 243
    "uint4"                           shift, and go to state 244
    "float"                           shift, and go to state 245
    "float2"                          shift, and go to state 246
    "float3"                          shift, and go to state 247
    "float4"                          shift, and go to state 248
    "range"                           shift, and go to state 249
    "urange"                          shift, and go to state 250
    "range64"                         shift, and go to state 251
    "urange64"                        shift, and go to state 252
    "int64"                           shift, and go to state 254
    "uint64"                          shift, and go to state 255
    "double"                          shift, and go to state 256
    "int8"                            shift, and go to state 259
    "uint8"                           shift, and go to state 260
    "int16"                           shift, and go to state 261
    "uint16"                          shift, and go to state 262
    "tuple"                           shift, and go to state 434
    "variant"                         shift, and go to state 435
    "generator"                       shift, and go to state 436
    "++"                              shift, and go to state 437
    "--"                              shift, and go to state 438
    "::"                              shift, and go to state 59
    "$$"                              shift, and go to state 439
    "$i"                              shift, and go to state 440
    "$v"                              shift, and go to state 441
    "$b"                              shift, and go to state 442
    "$a"                              shift, and go to state 443
    "$c"                              shift, and go to state 444
    "..."                             shift, and go to state 445
    "integer constant"                shift, and go to state 446
    "long integer constant"           shift, and go to state 447
    "unsigned integer constant"       shift, and go to state 448
    "unsigned long integer constant"  shift, and go to state 449
    "unsigned int8 constant"          shift, and go to state 450
    "floating point constant"         shift, and go to state 451
    "double constant"                 shift, and go to state 452
    "name"                            shift, and go to state 60
    "keyword"                         shift, and go to state 453
    "type function"                   shift, and go to state 454
    "start of the string"             shift, and go to state 455
    "begin of code block"             shift, and go to state 456
    '-'                               shift, and go to state 457
    '+'                               shift, and go to state 458
    '*'                               shift, and go to state 459
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 460
    '!'                               shift, and go to state 461
    '['                               shift, and go to state 462
    '('                               shift, and go to state 463
    '$'                               shift, and go to state 464
    '@'                               shift, and go to state 465

    string_builder          go to state 466
    expr_reader             go to state 467
    expression_keyword      go to state 468
    name_in_namespace       go to state 469
    expr_new                go to state 470
    expr_cast               go to state 471
    expr_type_decl          go to state 472
    expr_type_info          go to state 473
    block_or_lambda         go to state 474
    expr_full_block         go to state 475
    expr_numeric_const      go to state 476
    expr_named_call         go to state 477
    expr_method_call        go to state 478
    func_addr_expr          go to state 479
    expr_field              go to state 480
    expr_call               go to state 481
    expr                    go to state 1452
    expr_mtag               go to state 483
    basic_type_declaration  go to state 484
    make_decl               go to state 485
    make_struct_decl        go to state 486
    make_tuple_call         go to state 487
    make_dim_decl           go to state 488
    make_table_decl         go to state 489
    array_comprehension     go to state 490


State 1441

  477 expr: expr '?' "as" "type" '<' $@27 type_declaration '>' $@28 .

    $default  reduce using rule 477 (expr)


State 1442

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 658
    "as"                 shift, and go to state 659
    "<<"                 shift, and go to state 660
    ">>"                 shift, and go to state 661
    "++"                 shift, and go to state 662
    "--"                 shift, and go to state 663
    "<="                 shift, and go to state 664
    ">="                 shift, and go to state 665
    "=="                 shift, and go to state 666
    "!="                 shift, and go to state 667
    "->"                 shift, and go to state 668
    "??"                 shift, and go to state 669
    "?."                 shift, and go to state 670
    "?["                 shift, and go to state 671
    "<|"                 shift, and go to state 672
    "|>"                 shift, and go to state 673
    "<<<"                shift, and go to state 674
    ">>>"                shift, and go to state 675
    "&&"                 shift, and go to state 676
    "||"                 shift, and go to state 677
    "^^"                 shift, and go to state 678
    ".."                 shift, and go to state 679
    "end of expression"  shift, and go to state 1453
    '?'                  shift, and go to state 680
    '|'                  shift, and go to state 681
    '^'                  shift, and go to state 682
    '&'                  shift, and go to state 683
    '<'                  shift, and go to state 684
    '>'                  shift, and go to state 685
    '-'                  shift, and go to state 686
    '+'                  shift, and go to state 687
    '*'                  shift, and go to state 688
    '/'                  shift, and go to state 689
    '%'                  shift, and go to state 690
    '.'                  shift, and go to state 691
    '['                  shift, and go to state 692


State 1443

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 298 (tuple_expansion_variable_declaration)


State 1444

  523 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@30 function_declaration_header "end of expression" .

    $default  reduce using rule 523 (struct_variable_declaration_list)


State 1445

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 332

    expression_block  go to state 1454


State 1446

  315 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" "end of expression" "name" '>' expr ')' .

    $default  reduce using rule 315 (expr_type_info)


State 1447

  787 make_dim_decl: "array" '<' $@87 type_declaration_no_options '>' $@88 '(' expr_list optional_comma ')' .

    $default  reduce using rule 787 (make_dim_decl)


State 1448

  797 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 797 (make_table_decl)


State 1449

  791 make_dim_decl: "fixed_array" '<' $@89 type_declaration_no_options '>' $@90 '(' expr_list optional_comma ')' .

    $default  reduce using rule 791 (make_dim_decl)


State 1450

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  799 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 799 (array_comprehension_where)


State 1451

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  763 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 763 (make_struct_fields)


State 1452

  385 expr_method_call: expr . "->" "name" '(' ')'
  386                 | expr . "->" "name" '(' expr_list ')'
  396 expr_field: expr . '.' "name"
  397           | expr . '.' '.' "name"
  398           | expr . '.' "name" '(' ')'
  399           | expr . '.' "name" '(' expr_list ')'
  402           | expr . '.' $@21 error $@22
  422 expr: expr . "<<" expr
  423     | expr . ">>" expr
  424     | expr . "<<<" expr
  425     | expr . ">>>" expr
  426     | expr . '+' expr
  427     | expr . '-' expr
  428     | expr . '*' expr
  429     | expr . '/' expr
  430     | expr . '%' expr
  431     | expr . '<' expr
  432     | expr . '>' expr
  433     | expr . "==" expr
  434     | expr . "!=" expr
  435     | expr . "<=" expr
  436     | expr . ">=" expr
  437     | expr . '&' expr
  438     | expr . '|' expr
  439     | expr . '^' expr
  440     | expr . "&&" expr
  441     | expr . "||" expr
  442     | expr . "^^" expr
  443     | expr . ".." expr
  446     | expr . "++"
  447     | expr . "--"
  449     | expr . '[' expr ']'
  450     | expr . '.' '[' expr ']'
  451     | expr . "?[" expr ']'
  452     | expr . '.' "?[" expr ']'
  453     | expr . "?." "name"
  454     | expr . '.' "?." "name"
  462     | expr . "??" expr
  463     | expr . '?' expr ':' expr
  466     | expr . "is" "type" '<' $@23 type_declaration_no_options '>' $@24
  467     | expr . "is" basic_type_declaration
  468     | expr . "is" "name"
  469     | expr . "as" "name"
  472     | expr . "as" "type" '<' $@25 type_declaration '>' $@26
  473     | expr . "as" basic_type_declaration
  474     | expr . '?' "as" "name"
  477     | expr . '?' "as" "type" '<' $@27 type_declaration '>' $@28
  478     | expr . '?' "as" basic_type_declaration
  486     | expr . "<|" expr
  487     | expr . "|>" expr
  488     | expr . "|>" basic_type_declaration
  498 expr_mtag: expr . '.' "$f" '(' expr ')'
  499          | expr . "?." "$f" '(' expr ')'
  500          | expr . '.' '.' "$f" '(' expr ')'
  501          | expr . '.' "?." "$f" '(' expr ')'
  502          | expr . "as" "$f" '(' expr ')'
  503          | expr . '?' "as" "$f" '(' expr ')'
  504          | expr . "is" "$f" '(' expr ')'
  762 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 658
    "as"   shift, and go to state 659
    "<<"   shift, and go to state 660
    ">>"   shift, and go to state 661
    "++"   shift, and go to state 662
    "--"   shift, and go to state 663
    "<="   shift, and go to state 664
    ">="   shift, and go to state 665
    "=="   shift, and go to state 666
    "!="   shift, and go to state 667
    "->"   shift, and go to state 668
    "??"   shift, and go to state 669
    "?."   shift, and go to state 670
    "?["   shift, and go to state 671
    "<|"   shift, and go to state 672
    "|>"   shift, and go to state 673
    "<<<"  shift, and go to state 674
    ">>>"  shift, and go to state 675
    "&&"   shift, and go to state 676
    "||"   shift, and go to state 677
    "^^"   shift, and go to state 678
    ".."   shift, and go to state 679
    '?'    shift, and go to state 680
    '|'    shift, and go to state 681
    '^'    shift, and go to state 682
    '&'    shift, and go to state 683
    '<'    shift, and go to state 684
    '>'    shift, and go to state 685
    '-'    shift, and go to state 686
    '+'    shift, and go to state 687
    '*'    shift, and go to state 688
    '/'    shift, and go to state 689
    '%'    shift, and go to state 690
    '.'    shift, and go to state 691
    '['    shift, and go to state 692

    $default  reduce using rule 762 (make_struct_fields)


State 1453

  297 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 297 (tuple_expansion_variable_declaration)


State 1454

  525 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@31 function_declaration_header expression_block .

    $default  reduce using rule 525 (struct_variable_declaration_list)
