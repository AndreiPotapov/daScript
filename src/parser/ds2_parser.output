Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    ";}}"
    ";}]"
    ";]]"
    ",]]"
    ",}]"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"

   28 string_builder_body: %empty
   29                    | string_builder_body character_sequence
   30                    | string_builder_body "{" expr "}"

   31 string_builder: "start of the string" string_builder_body "end of the string"

   32 reader_character_sequence: STRING_CHARACTER
   33                          | reader_character_sequence STRING_CHARACTER

   34 $@1: %empty

   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   36 options_declaration: "options" annotation_argument_list

   37 require_declaration: "require" require_module

   38 require_module_name: "name"
   39                    | '%' require_module_name
   40                    | require_module_name '.' "name"
   41                    | require_module_name '/' "name"

   42 require_module: require_module_name is_public_module
   43               | require_module_name "as" "name" is_public_module

   44 is_public_module: %empty
   45                 | "public"

   46 expect_declaration: "expect" expect_list

   47 expect_list: expect_error
   48            | expect_list ',' expect_error

   49 expect_error: "integer constant"
   50             | "integer constant" ':' "integer constant"

   51 expression_label: "label" "integer constant" ':'

   52 expression_goto: "goto" "label" "integer constant"
   53                | "goto" expr

   54 elif_or_static_elif: "elif"
   55                    | "static_elif"

   56 expression_else: %empty
   57                | "else" expression_block
   58                | elif_or_static_elif '(' expr ')' expression_block expression_else

   59 if_or_static_if: "if"
   60                | "static_if"

   61 expression_else_one_liner: %empty
   62                          | "else" expression_if_one_liner

   63 expression_if_one_liner: expr
   64                        | expression_return
   65                        | expression_yield
   66                        | expression_break
   67                        | expression_continue

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else
   69                        | expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block

   71 expression_unsafe: "unsafe" expression_block

   72 expression_while_loop: "while" '(' expr ')' expression_block

   73 expression_with: "with" '(' expr ')' expression_block

   74 expression_with_alias: "assume" "name" '=' expr

   75 annotation_argument_value: string_constant
   76                          | "name"
   77                          | "integer constant"
   78                          | "floating point constant"
   79                          | "true"
   80                          | "false"

   81 annotation_argument_value_list: annotation_argument_value
   82                               | annotation_argument_value_list ',' annotation_argument_value

   83 annotation_argument_name: "name"
   84                         | "type"
   85                         | "in"

   86 annotation_argument: annotation_argument_name '=' string_constant
   87                    | annotation_argument_name '=' "name"
   88                    | annotation_argument_name '=' "integer constant"
   89                    | annotation_argument_name '=' "floating point constant"
   90                    | annotation_argument_name '=' "true"
   91                    | annotation_argument_name '=' "false"
   92                    | annotation_argument_name
   93                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

   94 annotation_argument_list: annotation_argument
   95                         | annotation_argument_list ',' annotation_argument

   96 metadata_argument_list: '@' annotation_argument
   97                       | metadata_argument_list '@' annotation_argument

   98 annotation_declaration_name: name_in_namespace
   99                            | "require"
  100                            | "private"

  101 annotation_declaration_basic: annotation_declaration_name
  102                             | annotation_declaration_name '(' annotation_argument_list ')'

  103 annotation_declaration: annotation_declaration_basic
  104                       | '!' annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration
  108                       | '(' annotation_declaration ')'
  109                       | "|>" annotation_declaration

  110 annotation_list: annotation_declaration
  111                | annotation_list ',' annotation_declaration

  112 optional_annotation_list: %empty
  113                         | '[' annotation_list ']'

  114 optional_function_argument_list: %empty
  115                                | '(' ')'
  116                                | '(' function_argument_list ')'

  117 optional_function_type: %empty
  118                       | ':' type_declaration

  119 function_name: "name"
  120              | "operator" '!'
  121              | "operator" '~'
  122              | "operator" "+="
  123              | "operator" "-="
  124              | "operator" "*="
  125              | "operator" "/="
  126              | "operator" "%="
  127              | "operator" "&="
  128              | "operator" "|="
  129              | "operator" "^="
  130              | "operator" "&&="
  131              | "operator" "||="
  132              | "operator" "^^="
  133              | "operator" "&&"
  134              | "operator" "||"
  135              | "operator" "^^"
  136              | "operator" '+'
  137              | "operator" '-'
  138              | "operator" '*'
  139              | "operator" '/'
  140              | "operator" '%'
  141              | "operator" '<'
  142              | "operator" '>'
  143              | "operator" ".."
  144              | "operator" "=="
  145              | "operator" "!="
  146              | "operator" "<="
  147              | "operator" ">="
  148              | "operator" '&'
  149              | "operator" '|'
  150              | "operator" '^'
  151              | "++" "operator"
  152              | "--" "operator"
  153              | "operator" "++"
  154              | "operator" "--"
  155              | "operator" "<<"
  156              | "operator" ">>"
  157              | "operator" "<<="
  158              | "operator" ">>="
  159              | "operator" "<<<"
  160              | "operator" ">>>"
  161              | "operator" "<<<="
  162              | "operator" ">>>="
  163              | "operator" '[' ']'
  164              | "operator" "?[" ']'
  165              | "operator" '.'
  166              | "operator" "?."
  167              | "operator" '.' "name"
  168              | "operator" '.' "name" ":="
  169              | "operator" "?." "name"
  170              | "operator" ":="
  171              | "operator" "delete"
  172              | "operator" "??"
  173              | "operator" "is"
  174              | "operator" "as"
  175              | "operator" "is" "name"
  176              | "operator" "as" "name"
  177              | "operator" '?' "as"
  178              | "operator" '?' "as" "name"
  179              | "bool"
  180              | "string"
  181              | "int"
  182              | "int2"
  183              | "int3"
  184              | "int4"
  185              | "uint"
  186              | "uint2"
  187              | "uint3"
  188              | "uint4"
  189              | "float"
  190              | "float2"
  191              | "float3"
  192              | "float4"
  193              | "range"
  194              | "urange"
  195              | "range64"
  196              | "urange64"
  197              | "int64"
  198              | "uint64"
  199              | "double"
  200              | "int8"
  201              | "uint8"
  202              | "int16"
  203              | "uint16"

  204 global_function_declaration: optional_annotation_list "def" function_declaration

  205 optional_public_or_private_function: %empty
  206                                    | "private"
  207                                    | "public"

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type

  209 $@2: %empty

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block

  211 expression_block: "begin of code block" expressions "end of code block"
  212                 | "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped

  214 expression_any: "end of expression"
  215               | expr_assign "end of expression"
  216               | expression_delete "end of expression"
  217               | expression_let
  218               | expression_while_loop
  219               | expression_unsafe
  220               | expression_with
  221               | expression_with_alias "end of expression"
  222               | expression_for_loop
  223               | expression_break "end of expression"
  224               | expression_continue "end of expression"
  225               | expression_return "end of expression"
  226               | expression_yield "end of expression"
  227               | expression_if_then_else
  228               | expression_try_catch
  229               | expression_label "end of expression"
  230               | expression_goto "end of expression"
  231               | "pass" "end of expression"

  232 expressions: %empty
  233            | expressions expression_any
  234            | expressions error

  235 optional_expr_list: %empty
  236                   | expr_list optional_comma

  237 optional_expr_map_tuple_list: %empty
  238                             | expr_map_tuple_list optional_comma

  239 type_declaration_no_options_list: type_declaration
  240                                 | type_declaration_no_options_list "end of expression" type_declaration

  241 name_in_namespace: "name"
  242                  | "name" "::" "name"
  243                  | "::" "name"

  244 expression_delete: "delete" expr
  245                  | "delete" "explicit" expr

  246 $@3: %empty

  247 $@4: %empty

  248 new_type_declaration: '<' $@3 type_declaration '>' $@4

  249 expr_new: "new" structure_type_declaration
  250         | "new" structure_type_declaration '(' optional_expr_list ')'
  251         | "new" new_type_declaration '(' use_initializer ')'
  252         | "new" new_type_declaration '(' use_initializer make_struct_single ')'
  253         | "new" make_decl

  254 expression_break: "break"

  255 expression_continue: "continue"

  256 expression_return: "return"
  257                  | "return" expr
  258                  | "return" "<-" expr

  259 expression_yield: "yield" expr
  260                 | "yield" "<-" expr

  261 expression_try_catch: "try" expression_block "recover" expression_block

  262 kwd_let_var_or_nothing: "let"
  263                       | "var"
  264                       | %empty

  265 kwd_let: "let"
  266        | "var"

  267 optional_in_scope: "inscope"
  268                  | %empty

  269 tuple_expansion: "name"
  270                | tuple_expansion ',' "name"

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  273 expression_let: kwd_let optional_in_scope let_variable_declaration
  274               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  275 $@5: %empty

  276 $@6: %empty

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr

  278 $@7: %empty

  279 $@8: %empty

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr

  281 $@9: %empty

  282 $@10: %empty

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr

  284 $@11: %empty

  285 $@12: %empty

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  288               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  290 expr_list: expr
  291          | expr_list ',' expr

  292 block_or_simple_block: expression_block
  293                      | "=>" expr
  294                      | "=>" "<-" expr

  295 block_or_lambda: '$'
  296                | '@'
  297                | '@' '@'

  298 capture_entry: '&' "name"
  299              | '=' "name"
  300              | "<-" "name"
  301              | ":=" "name"

  302 capture_list: capture_entry
  303             | capture_list ',' capture_entry

  304 optional_capture_list: %empty
  305                      | "capture" '(' capture_list ')'

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block
  308                              | "begin of code block" expressions "end of code block"

  309 expr_numeric_const: "integer constant"
  310                   | "unsigned integer constant"
  311                   | "long integer constant"
  312                   | "unsigned long integer constant"
  313                   | "unsigned int8 constant"
  314                   | "floating point constant"
  315                   | "double constant"

  316 expr_assign: expr
  317            | expr '=' expr
  318            | expr "<-" expr
  319            | expr ":=" expr
  320            | expr "&=" expr
  321            | expr "|=" expr
  322            | expr "^=" expr
  323            | expr "&&=" expr
  324            | expr "||=" expr
  325            | expr "^^=" expr
  326            | expr "+=" expr
  327            | expr "-=" expr
  328            | expr "*=" expr
  329            | expr "/=" expr
  330            | expr "%=" expr
  331            | expr "<<=" expr
  332            | expr ">>=" expr
  333            | expr "<<<=" expr
  334            | expr ">>>=" expr

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  336                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  337 expr_method_call: expr "->" "name" '(' ')'
  338                 | expr "->" "name" '(' expr_list ')'

  339 func_addr_name: name_in_namespace
  340               | "$i" '(' expr ')'

  341 func_addr_expr: '@' '@' func_addr_name

  342 $@13: %empty

  343 $@14: %empty

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name

  345 $@15: %empty

  346 $@16: %empty

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

  348 expr_field: expr '.' "name"
  349           | expr '.' '.' "name"
  350           | expr '.' "name" '(' ')'
  351           | expr '.' "name" '(' expr_list ')'

  352 $@17: %empty

  353 $@18: %empty

  354 expr_field: expr '.' $@17 error $@18

  355 expr_call: name_in_namespace '(' ')'
  356          | name_in_namespace '(' make_struct_single ')'
  357          | name_in_namespace '(' expr_list ')'
  358          | basic_type_declaration '(' ')'
  359          | basic_type_declaration '(' expr_list ')'

  360 expr: "null"
  361     | name_in_namespace
  362     | expr_numeric_const
  363     | expr_reader
  364     | string_builder
  365     | make_decl
  366     | "true"
  367     | "false"
  368     | expr_field
  369     | expr_mtag
  370     | '!' expr
  371     | '~' expr
  372     | '+' expr
  373     | '-' expr
  374     | expr "<<" expr
  375     | expr ">>" expr
  376     | expr "<<<" expr
  377     | expr ">>>" expr
  378     | expr '+' expr
  379     | expr '-' expr
  380     | expr '*' expr
  381     | expr '/' expr
  382     | expr '%' expr
  383     | expr '<' expr
  384     | expr '>' expr
  385     | expr "==" expr
  386     | expr "!=" expr
  387     | expr "<=" expr
  388     | expr ">=" expr
  389     | expr '&' expr
  390     | expr '|' expr
  391     | expr '^' expr
  392     | expr "&&" expr
  393     | expr "||" expr
  394     | expr "^^" expr
  395     | expr ".." expr
  396     | "++" expr
  397     | "--" expr
  398     | expr "++"
  399     | expr "--"
  400     | '(' expr_list optional_comma ')'
  401     | expr '[' expr ']'
  402     | expr '.' '[' expr ']'
  403     | expr "?[" expr ']'
  404     | expr '.' "?[" expr ']'
  405     | expr "?." "name"
  406     | expr '.' "?." "name"
  407     | func_addr_expr
  408     | expr_call
  409     | '*' expr
  410     | "deref" '(' expr ')'
  411     | "addr" '(' expr ')'
  412     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block
  415     | expr "??" expr
  416     | expr '?' expr ':' expr

  417 $@19: %empty

  418 $@20: %empty

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr "is" basic_type_declaration
  421     | expr "is" "name"
  422     | expr "as" "name"

  423 $@21: %empty

  424 $@22: %empty

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr "as" basic_type_declaration
  427     | expr '?' "as" "name"

  428 $@23: %empty

  429 $@24: %empty

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' "as" basic_type_declaration
  432     | expr_type_info
  433     | expr_type_decl
  434     | expr_cast
  435     | expr_new
  436     | expr_method_call
  437     | expr_named_call
  438     | expr_full_block
  439     | expr "<|" expr
  440     | expr "|>" expr
  441     | expr "|>" basic_type_declaration
  442     | expr_call_pipe

  443 expr_mtag: "$$" '(' expr ')'
  444          | "$i" '(' expr ')'
  445          | "$v" '(' expr ')'
  446          | "$b" '(' expr ')'
  447          | "$a" '(' expr ')'
  448          | "..."
  449          | "$c" '(' expr ')' '(' ')'
  450          | "$c" '(' expr ')' '(' expr_list ')'
  451          | expr '.' "$f" '(' expr ')'
  452          | expr "?." "$f" '(' expr ')'
  453          | expr '.' '.' "$f" '(' expr ')'
  454          | expr '.' "?." "$f" '(' expr ')'
  455          | expr "as" "$f" '(' expr ')'
  456          | expr '?' "as" "$f" '(' expr ')'
  457          | expr "is" "$f" '(' expr ')'
  458          | '@' '@' "$c" '(' expr ')'

  459 optional_field_annotation: %empty
  460                          | metadata_argument_list

  461 optional_override: %empty
  462                  | "override"
  463                  | "sealed"

  464 optional_constant: %empty
  465                  | "const"

  466 optional_public_or_private_member_variable: %empty
  467                                           | "public"
  468                                           | "private"

  469 optional_static_member_variable: %empty
  470                                | "static"

  471 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  472 struct_variable_declaration_list: %empty

  473 $@25: %empty

  474 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression"

  475 $@26: %empty

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"

  477 $@27: %empty

  478 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

  479 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  480                              | "$a" '(' expr ')'

  481 function_argument_list: function_argument_declaration
  482                       | function_argument_list "end of expression" function_argument_declaration

  483 tuple_type: type_declaration
  484           | "name" ':' type_declaration

  485 tuple_type_list: tuple_type
  486                | tuple_type_list "end of expression" tuple_type

  487 tuple_alias_type_list: %empty
  488                      | tuple_alias_type_list "end of expression"
  489                      | tuple_alias_type_list tuple_type "end of expression"

  490 variant_type: "name" ':' type_declaration

  491 variant_type_list: variant_type
  492                  | variant_type_list "end of expression" variant_type

  493 variant_alias_type_list: %empty
  494                        | variant_alias_type_list "end of expression"
  495                        | variant_alias_type_list variant_type "end of expression"

  496 copy_or_move: '='
  497             | "<-"

  498 variable_declaration: variable_name_with_pos_list
  499                     | variable_name_with_pos_list '&'
  500                     | variable_name_with_pos_list ':' type_declaration
  501                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  502                     | variable_name_with_pos_list copy_or_move expr

  503 copy_or_move_or_clone: '='
  504                      | "<-"
  505                      | ":="

  506 optional_ref: %empty
  507             | '&'

  508 let_variable_name_with_pos_list: "name"
  509                                | "$i" '(' expr ')'
  510                                | "name" "aka" "name"
  511                                | let_variable_name_with_pos_list ',' "name"
  512                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  513 global_let_variable_name_with_pos_list: "name"
  514                                       | global_let_variable_name_with_pos_list ',' "name"

  515 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  516                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  517                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  518 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  519                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  520                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  521 optional_shared: %empty
  522                | "shared"

  523 optional_public_or_private_variable: %empty
  524                                    | "private"
  525                                    | "public"

  526 $@28: %empty

  527 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

  528 enum_expression: "name"
  529                | "name" '=' expr

  530 enum_list: %empty
  531          | enum_expression
  532          | enum_list ',' enum_expression

  533 optional_public_or_private_alias: %empty
  534                                 | "private"
  535                                 | "public"

  536 $@29: %empty

  537 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration

  538 alias_declaration: "typedef" single_alias "end of expression"

  539 optional_public_or_private_enum: %empty
  540                                | "private"
  541                                | "public"

  542 enum_name: "name"

  543 optional_enum_basic_type_declaration: %empty
  544                                     | ':' enum_basic_type_declaration

  545 $@30: %empty

  546 $@31: %empty

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

  548 optional_structure_parent: %empty
  549                          | ':' name_in_namespace

  550 optional_sealed: %empty
  551                | "sealed"

  552 structure_name: optional_sealed "name" optional_structure_parent

  553 class_or_struct: "class"
  554                | "struct"

  555 optional_public_or_private_structure: %empty
  556                                     | "private"
  557                                     | "public"

  558 optional_struct_variable_declaration_list: %empty
  559                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  560 $@32: %empty

  561 $@33: %empty

  562 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

  563 variable_name_with_pos_list: "name"
  564                            | "$i" '(' expr ')'
  565                            | "name" "aka" "name"
  566                            | variable_name_with_pos_list ',' "name"
  567                            | variable_name_with_pos_list ',' "name" "aka" "name"

  568 basic_type_declaration: "bool"
  569                       | "string"
  570                       | "int"
  571                       | "int8"
  572                       | "int16"
  573                       | "int64"
  574                       | "int2"
  575                       | "int3"
  576                       | "int4"
  577                       | "uint"
  578                       | "uint8"
  579                       | "uint16"
  580                       | "uint64"
  581                       | "uint2"
  582                       | "uint3"
  583                       | "uint4"
  584                       | "float"
  585                       | "float2"
  586                       | "float3"
  587                       | "float4"
  588                       | "void"
  589                       | "range"
  590                       | "urange"
  591                       | "range64"
  592                       | "urange64"
  593                       | "double"
  594                       | "bitfield"

  595 enum_basic_type_declaration: "int"
  596                            | "int8"
  597                            | "int16"
  598                            | "uint"
  599                            | "uint8"
  600                            | "uint16"
  601                            | "int64"
  602                            | "uint64"

  603 structure_type_declaration: name_in_namespace

  604 auto_type_declaration: "auto"
  605                      | "auto" '(' "name" ')'
  606                      | "$t" '(' expr ')'

  607 bitfield_bits: "name"
  608              | bitfield_bits "end of expression" "name"

  609 bitfield_alias_bits: %empty
  610                    | "name"
  611                    | bitfield_alias_bits ',' "name"

  612 $@34: %empty

  613 $@35: %empty

  614 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35

  615 table_type_pair: type_declaration
  616                | type_declaration "end of expression" type_declaration

  617 dim_list: '[' expr ']'
  618         | '[' ']'
  619         | dim_list '[' expr ']'
  620         | dim_list '[' ']'

  621 type_declaration_no_options: type_declaration_no_options_no_dim
  622                            | type_declaration_no_options_no_dim dim_list

  623 type_declaration_no_options_no_dim: basic_type_declaration
  624                                   | auto_type_declaration
  625                                   | bitfield_type_declaration
  626                                   | structure_type_declaration

  627 $@36: %empty

  628 $@37: %empty

  629 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37
  630                                   | "typedecl" '(' expr ')'
  631                                   | '$' name_in_namespace '(' optional_expr_list ')'

  632 $@38: %empty

  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  634                                   | type_declaration_no_options_no_dim '-' '[' ']'
  635                                   | type_declaration_no_options_no_dim "explicit"
  636                                   | type_declaration_no_options_no_dim "const"
  637                                   | type_declaration_no_options_no_dim '-' "const"
  638                                   | type_declaration_no_options_no_dim '&'
  639                                   | type_declaration_no_options_no_dim '-' '&'
  640                                   | type_declaration_no_options_no_dim '#'
  641                                   | type_declaration_no_options_no_dim "implicit"
  642                                   | type_declaration_no_options_no_dim '-' '#'
  643                                   | type_declaration_no_options_no_dim "==" "const"
  644                                   | type_declaration_no_options_no_dim "==" '&'
  645                                   | type_declaration_no_options_no_dim '*'

  646 $@39: %empty

  647 $@40: %empty

  648 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40
  649                                   | type_declaration_no_options_no_dim "??"

  650 $@41: %empty

  651 $@42: %empty

  652 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42

  653 $@43: %empty

  654 $@44: %empty

  655 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44

  656 $@45: %empty

  657 $@46: %empty

  658 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46
  659                                   | "block"

  660 $@47: %empty

  661 $@48: %empty

  662 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48

  663 $@49: %empty

  664 $@50: %empty

  665 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50
  666                                   | "function"

  667 $@51: %empty

  668 $@52: %empty

  669 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52

  670 $@53: %empty

  671 $@54: %empty

  672 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54
  673                                   | "lambda"

  674 $@55: %empty

  675 $@56: %empty

  676 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56

  677 $@57: %empty

  678 $@58: %empty

  679 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58

  680 $@59: %empty

  681 $@60: %empty

  682 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60

  683 $@61: %empty

  684 $@62: %empty

  685 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62

  686 type_declaration: type_declaration_no_options
  687                 | type_declaration '|' type_declaration_no_options
  688                 | type_declaration '|' '#'

  689 $@63: %empty

  690 $@64: %empty

  691 $@65: %empty

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

  693 $@66: %empty

  694 $@67: %empty

  695 $@68: %empty

  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

  697 $@69: %empty

  698 $@70: %empty

  699 $@71: %empty

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

  701 make_decl: make_struct_decl
  702          | make_dim_decl
  703          | make_table_decl
  704          | array_comprehension
  705          | make_tuple_call

  706 make_struct_fields: "name" copy_or_move expr
  707                   | "name" ":=" expr
  708                   | make_struct_fields ',' "name" copy_or_move expr
  709                   | make_struct_fields ',' "name" ":=" expr
  710                   | "$f" '(' expr ')' copy_or_move expr
  711                   | "$f" '(' expr ')' ":=" expr
  712                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  714 make_variant_dim: make_struct_fields

  715 make_struct_single: make_struct_fields

  716 make_struct_dim_list: '(' make_struct_fields ')'
  717                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  718 make_struct_dim_decl: make_struct_fields
  719                     | make_struct_dim_list optional_comma

  720 use_initializer: %empty
  721                | "uninitialized"

  722 $@72: %empty

  723 $@73: %empty

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

  725 $@74: %empty

  726 $@75: %empty

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

  728 $@76: %empty

  729 $@77: %empty

  730 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

  731 $@78: %empty

  732 $@79: %empty

  733 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer

  734 make_map_tuple: expr "=>" expr
  735               | expr

  736 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  737 $@80: %empty

  738 $@81: %empty

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

  740 make_dim_decl: '[' expr_list optional_comma ']'

  741 $@82: %empty

  742 $@83: %empty

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

  744 $@84: %empty

  745 $@85: %empty

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

  747 $@86: %empty

  748 $@87: %empty

  749 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  750              | "array" '(' expr_list optional_comma ')'

  751 $@88: %empty

  752 $@89: %empty

  753 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'
  754              | "fixed_array" '(' expr_list optional_comma ')'

  755 $@90: %empty

  756 $@91: %empty

  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

  758 expr_map_tuple_list: make_map_tuple
  759                    | expr_map_tuple_list ',' make_map_tuple

  760 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  761                | "table" '(' expr_map_tuple_list optional_comma ')'
  762                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  763                | "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  764 array_comprehension_where: %empty
  765                          | "end of expression" "where" expr

  766 optional_comma: %empty
  767               | ','

  768 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  769                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  770                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 104 120 370
    '#' (35) 640 642 688
    '$' (36) 20 295 631 633
    '%' (37) 35 39 140 382
    '&' (38) 148 298 389 499 507 638 639 644
    '(' (40) 58 68 69 70 72 73 93 102 108 115 116 250 251 252 271 272 287 288 289 305 335 336 337 338 340 350 351 355 356 357 358 359 400 410 411 412 413 443 444 445 446 447 449 450 451 452 453 454 455 456 457 458 480 509 564 605 606 630 631 633 710 711 712 713 716 717 724 727 730 736 739 743 746 749 750 753 754 757 761 762 763
    ')' (41) 58 68 69 70 72 73 93 102 108 115 116 250 251 252 271 272 287 288 289 305 335 336 337 338 340 350 351 355 356 357 358 359 400 410 411 412 413 443 444 445 446 447 449 450 451 452 453 454 455 456 457 458 480 509 564 605 606 630 631 633 710 711 712 713 716 717 724 727 730 736 739 743 746 749 750 753 754 757 761 762 763
    '*' (42) 138 380 409 645
    '+' (43) 136 372 378
    ',' (44) 48 82 95 111 270 291 303 336 511 512 514 532 566 567 611 708 709 712 713 717 759 767
    '-' (45) 137 373 379 634 637 639 642
    '.' (46) 40 165 167 168 348 349 350 351 354 402 404 406 451 453 454
    '/' (47) 41 139 381
    ':' (58) 50 51 118 271 416 484 490 500 501 515 516 518 519 544 549
    "end of expression" (59) 15 16 69 214 215 216 221 223 224 225 226 229 230 231 240 271 272 289 474 476 482 486 488 489 492 494 495 515 516 517 518 519 520 538 608 616 763 765 768 769 770
    '<' (60) 141 248 277 280 283 286 288 289 344 347 383 412 413 414 419 425 430 614 629 633 648 652 655 658 662 665 669 672 676 679 682 685 724 727 730 733 739 743 746 749 753 757 762 763
    '=' (61) 74 86 87 88 89 90 91 93 299 317 496 503 529 537
    '>' (62) 142 248 277 280 283 286 288 289 344 347 384 412 413 414 419 425 430 614 629 633 648 652 655 658 662 665 669 672 676 679 682 685 724 727 730 733 739 743 746 749 753 757 762 763
    '?' (63) 177 178 416 427 430 431 456
    '@' (64) 96 97 296 297 341 344 347 458
    '[' (91) 113 163 335 336 401 402 617 618 619 620 634 740 768 769
    ']' (93) 113 163 164 335 336 401 402 403 404 617 618 619 620 634 740 768 769
    '^' (94) 150 391
    "begin of code block" (123) 211 212 308 547 559 692 696 700 760 770
    '|' (124) 149 390 687 688
    "end of code block" (125) 211 212 308 547 559 692 696 700 760 770
    '~' (126) 121 371
    error (256) 234 354
    "lexer error" (258)
    "capture" (259) 305
    "struct" (260) 554 724 743
    "class" (261) 553 727
    "let" (262) 262 265
    "def" (263) 204 476 478
    "while" (264) 72
    "if" (265) 59 69
    "static_if" (266) 60
    "else" (267) 57 62
    "for" (268) 70 768 769 770
    "recover" (269) 261
    "true" (270) 79 90 366
    "false" (271) 80 91 367
    "new" (272) 249 250 251 252 253
    "typeinfo" (273) 287 288 289
    "type" (274) 84 286 419 425 430 629
    "in" (275) 70 85 768 769 770
    "is" (276) 173 175 419 420 421 457
    "as" (277) 43 174 176 177 178 422 425 426 427 430 431 455 456
    "elif" (278) 54
    "static_elif" (279) 55
    "array" (280) 652 743 746 749 750 753
    "return" (281) 256 257 258
    "null" (282) 360
    "break" (283) 254
    "try" (284) 261
    "options" (285) 36
    "table" (286) 655 761 762 763
    "expect" (287) 46
    "const" (288) 465 636 637 643
    "require" (289) 37 99
    "operator" (290) 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178
    "enum" (291) 547
    "finally" (292) 212
    "delete" (293) 171 244 245
    "deref" (294) 410
    "typedef" (295) 538
    "typedecl" (296) 630
    "with" (297) 73
    "aka" (298) 510 512 565 567
    "assume" (299) 74
    "cast" (300) 277
    "override" (301) 462
    "abstract" (302) 476
    "upcast" (303) 280
    "iterator" (304) 658 769
    "var" (305) 263 266
    "addr" (306) 411
    "continue" (307) 255
    "where" (308) 765
    "pass" (309) 231
    "reinterpret" (310) 283
    "module" (311) 22
    "public" (312) 18 45 207 467 525 535 541 557
    "label" (313) 51 52
    "goto" (314) 52 53
    "implicit" (315) 641
    "explicit" (316) 245 635
    "shared" (317) 522
    "private" (318) 19 100 206 468 524 534 540 556
    "smart_ptr" (319) 648
    "unsafe" (320) 71
    "inscope" (321) 267
    "static" (322) 470
    "fixed_array" (323) 754 757
    "default" (324) 733
    "uninitialized" (325) 721
    "bool" (326) 179 568
    "void" (327) 588
    "string" (328) 180 569
    "auto" (329) 604 605
    "int" (330) 181 570 595
    "int2" (331) 182 574
    "int3" (332) 183 575
    "int4" (333) 184 576
    "uint" (334) 185 577 598
    "bitfield" (335) 594 614 700
    "uint2" (336) 186 581
    "uint3" (337) 187 582
    "uint4" (338) 188 583
    "float" (339) 189 584
    "float2" (340) 190 585
    "float3" (341) 191 586
    "float4" (342) 192 587
    "range" (343) 193 589
    "urange" (344) 194 590
    "range64" (345) 195 591
    "urange64" (346) 196 592
    "block" (347) 659 662 665
    "int64" (348) 197 573 601
    "uint64" (349) 198 580 602
    "double" (350) 199 593
    "function" (351) 666 669 672
    "lambda" (352) 673 676 679
    "int8" (353) 200 571 596
    "uint8" (354) 201 578 599
    "int16" (355) 202 572 597
    "uint16" (356) 203 579 600
    "tuple" (357) 682 692 736 739 746
    "variant" (358) 685 696 730 749
    "generator" (359) 412 413 414
    "yield" (360) 259 260
    "sealed" (361) 463 551
    "+=" (362) 122 326
    "-=" (363) 123 327
    "/=" (364) 125 329
    "*=" (365) 124 328
    "%=" (366) 126 330
    "&=" (367) 127 320
    "|=" (368) 128 321
    "^=" (369) 129 322
    "<<" (370) 155 374
    ">>" (371) 156 375
    "++" (372) 151 153 396 398
    "--" (373) 152 154 397 399
    "<=" (374) 146 387
    "<<=" (375) 157 331
    ">>=" (376) 158 332
    ">=" (377) 147 388
    "==" (378) 144 385 643 644
    "!=" (379) 145 386
    "->" (380) 337 338
    "<-" (381) 258 260 294 300 318 497 504
    "??" (382) 172 415 649
    "?." (383) 166 169 405 406 452 454
    "?[" (384) 164 403 404
    "<|" (385) 439
    "|>" (386) 109 440 441
    ":=" (387) 168 170 301 319 505 707 709 711 713
    "<<<" (388) 159 376
    ">>>" (389) 160 377
    "<<<=" (390) 161 333
    ">>>=" (391) 162 334
    "=>" (392) 293 294 734
    "::" (393) 242 243
    "&&" (394) 105 133 392
    "||" (395) 106 134 393
    "^^" (396) 107 135 394
    "&&=" (397) 130 323
    "||=" (398) 131 324
    "^^=" (399) 132 325
    ".." (400) 143 395
    "$$" (401) 443
    "$i" (402) 340 444 509 564
    "$v" (403) 445
    "$b" (404) 446
    "$a" (405) 447 480
    "$t" (406) 606
    "$c" (407) 449 450 458
    "$f" (408) 451 452 453 454 455 456 457 710 711 712 713
    "..." (409) 448
    "integer constant" <i> (410) 49 50 51 52 77 88 309
    "long integer constant" <i64> (411) 311
    "unsigned integer constant" <ui> (412) 310
    "unsigned long integer constant" <ui64> (413) 312
    "unsigned int8 constant" <ui> (414) 313
    "floating point constant" <fd> (415) 78 89 314
    "double constant" <d> (416) 315
    "name" <s> (417) 21 38 40 41 43 74 76 83 87 119 167 168 169 175 176 178 241 242 243 269 270 288 289 298 299 300 301 337 338 348 349 350 351 405 406 421 422 427 484 490 508 510 511 512 513 514 528 529 537 542 552 563 565 566 567 605 607 608 610 611 692 696 700 706 707 708 709
    "start of the string" (418) 27 31
    STRING_CHARACTER <ch> (419) 23 25 32 33
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 31
    "{" (422) 30
    "}" (423) 30
    "end of failed eader macro" (424)
    ";}}" (425)
    ";}]" (426)
    ";]]" (427)
    ",]]" (428)
    ",}]" (429)
    UNARY_MINUS (430)
    UNARY_PLUS (431)
    PRE_INC (432)
    PRE_DEC (433)
    LLPIPE (434)
    POST_INC (435)
    POST_DEC (436)
    DEREF (437)


Nonterminals, with rules where they appear

    $accept (210)
        on left: 0
    program (211)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (212)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (213)
        on left: 17 18 19
        on right: 22
    module_name <s> (214)
        on left: 20 21
        on right: 22
    module_declaration (215)
        on left: 22
        on right: 2
    character_sequence <s> (216)
        on left: 23 24 25 26
        on right: 25 26 27 29
    string_constant <s> (217)
        on left: 27
        on right: 75 86
    string_builder_body <pExpression> (218)
        on left: 28 29 30
        on right: 29 30 31
    string_builder <pExpression> (219)
        on left: 31
        on right: 364
    reader_character_sequence (220)
        on left: 32 33
        on right: 33 35
    expr_reader <pExpression> (221)
        on left: 35
        on right: 16 363
    $@1 (222)
        on left: 34
        on right: 35
    options_declaration (223)
        on left: 36
        on right: 9
    require_declaration (224)
        on left: 37
        on right: 8
    require_module_name <s> (225)
        on left: 38 39 40 41
        on right: 39 40 41 42 43
    require_module (226)
        on left: 42 43
        on right: 37
    is_public_module <b> (227)
        on left: 44 45
        on right: 42 43
    expect_declaration (228)
        on left: 46
        on right: 7
    expect_list (229)
        on left: 47 48
        on right: 46 48
    expect_error (230)
        on left: 49 50
        on right: 47 48
    expression_label <pExpression> (231)
        on left: 51
        on right: 229
    expression_goto <pExpression> (232)
        on left: 52 53
        on right: 230
    elif_or_static_elif <b> (233)
        on left: 54 55
        on right: 58
    expression_else <pExpression> (234)
        on left: 56 57 58
        on right: 58 68
    if_or_static_if <b> (235)
        on left: 59 60
        on right: 68
    expression_else_one_liner <pExpression> (236)
        on left: 61 62
        on right: 69
    expression_if_one_liner <pExpression> (237)
        on left: 63 64 65 66 67
        on right: 62 69
    expression_if_then_else <pExpression> (238)
        on left: 68 69
        on right: 227
    expression_for_loop <pExpression> (239)
        on left: 70
        on right: 222
    expression_unsafe <pExpression> (240)
        on left: 71
        on right: 219
    expression_while_loop <pExpression> (241)
        on left: 72
        on right: 218
    expression_with <pExpression> (242)
        on left: 73
        on right: 220
    expression_with_alias <pExpression> (243)
        on left: 74
        on right: 221
    annotation_argument_value <aa> (244)
        on left: 75 76 77 78 79 80
        on right: 81 82
    annotation_argument_value_list <aaList> (245)
        on left: 81 82
        on right: 82 93
    annotation_argument_name <s> (246)
        on left: 83 84 85
        on right: 86 87 88 89 90 91 92 93
    annotation_argument <aa> (247)
        on left: 86 87 88 89 90 91 92 93
        on right: 94 95 96 97
    annotation_argument_list <aaList> (248)
        on left: 94 95
        on right: 36 95 102
    metadata_argument_list <aaList> (249)
        on left: 96 97
        on right: 97 460
    annotation_declaration_name <s> (250)
        on left: 98 99 100
        on right: 101 102
    annotation_declaration_basic <fa> (251)
        on left: 101 102
        on right: 103
    annotation_declaration <fa> (252)
        on left: 103 104 105 106 107 108 109
        on right: 104 105 106 107 108 109 110 111
    annotation_list <faList> (253)
        on left: 110 111
        on right: 111 113
    optional_annotation_list <faList> (254)
        on left: 112 113
        on right: 204 306 307 476 478 547 562
    optional_function_argument_list <pVarDeclList> (255)
        on left: 114 115 116
        on right: 208 306 307 347 665 672 679
    optional_function_type <pTypeDecl> (256)
        on left: 117 118
        on right: 208 306 307 347 665 672 679
    function_name <s> (257)
        on left: 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 208
    global_function_declaration (258)
        on left: 204
        on right: 6
    optional_public_or_private_function <b> (259)
        on left: 205 206 207
        on right: 210
    function_declaration_header <pFuncDecl> (260)
        on left: 208
        on right: 210 476 478
    function_declaration <pFuncDecl> (261)
        on left: 210
        on right: 204
    $@2 (262)
        on left: 209
        on right: 210
    expression_block <pExpression> (263)
        on left: 211 212
        on right: 57 58 68 70 71 72 73 210 261 292 307 414 478
    expr_call_pipe <pExpression> (264)
        on left: 213
        on right: 442
    expression_any <pExpression> (265)
        on left: 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
        on right: 233
    expressions <pExpression> (266)
        on left: 232 233 234
        on right: 211 212 233 234 308
    optional_expr_list <pExpression> (267)
        on left: 235 236
        on right: 250 631 633 753
    optional_expr_map_tuple_list <pExpression> (268)
        on left: 237 238
        on right: 762 763
    type_declaration_no_options_list <pTypeDeclList> (269)
        on left: 239 240
        on right: 240 633
    name_in_namespace <s> (270)
        on left: 241 242 243
        on right: 35 98 287 288 289 335 336 339 355 356 357 361 549 603 631 633
    expression_delete <pExpression> (271)
        on left: 244 245
        on right: 216
    new_type_declaration <pTypeDecl> (272)
        on left: 248
        on right: 251 252
    $@3 (273)
        on left: 246
        on right: 248
    $@4 (274)
        on left: 247
        on right: 248
    expr_new <pExpression> (275)
        on left: 249 250 251 252 253
        on right: 435
    expression_break <pExpression> (276)
        on left: 254
        on right: 66 223
    expression_continue <pExpression> (277)
        on left: 255
        on right: 67 224
    expression_return <pExpression> (278)
        on left: 256 257 258
        on right: 64 225
    expression_yield <pExpression> (279)
        on left: 259 260
        on right: 65 226
    expression_try_catch <pExpression> (280)
        on left: 261
        on right: 228
    kwd_let_var_or_nothing <b> (281)
        on left: 262 263 264
        on right: 479
    kwd_let <b> (282)
        on left: 265 266
        on right: 273 274 527
    optional_in_scope <b> (283)
        on left: 267 268
        on right: 273 274
    tuple_expansion <pNameList> (284)
        on left: 269 270
        on right: 270 271 272
    tuple_expansion_variable_declaration <pVarDecl> (285)
        on left: 271 272
        on right: 274
    expression_let <pExpression> (286)
        on left: 273 274
        on right: 217
    expr_cast <pExpression> (287)
        on left: 277 280 283
        on right: 434
    $@5 (288)
        on left: 275
        on right: 277
    $@6 (289)
        on left: 276
        on right: 277
    $@7 (290)
        on left: 278
        on right: 280
    $@8 (291)
        on left: 279
        on right: 280
    $@9 (292)
        on left: 281
        on right: 283
    $@10 (293)
        on left: 282
        on right: 283
    expr_type_decl <pExpression> (294)
        on left: 286
        on right: 433
    $@11 (295)
        on left: 284
        on right: 286
    $@12 (296)
        on left: 285
        on right: 286
    expr_type_info <pExpression> (297)
        on left: 287 288 289
        on right: 432
    expr_list <pExpression> (298)
        on left: 290 291
        on right: 70 236 291 336 338 351 357 359 400 450 736 740 750 754 757 768 769 770
    block_or_simple_block <pExpression> (299)
        on left: 292 293 294
        on right: 306
    block_or_lambda <i> (300)
        on left: 295 296 297
        on right: 306 307
    capture_entry <pCapt> (301)
        on left: 298 299 300 301
        on right: 302 303
    capture_list <pCaptList> (302)
        on left: 302 303
        on right: 303 305
    optional_capture_list <pCaptList> (303)
        on left: 304 305
        on right: 306 307 412 413 414
    expr_full_block <pExpression> (304)
        on left: 306
        on right: 438
    expr_full_block_assumed_piped <pExpression> (305)
        on left: 307 308
        on right: 213
    expr_numeric_const <pExpression> (306)
        on left: 309 310 311 312 313 314 315
        on right: 362
    expr_assign <pExpression> (307)
        on left: 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334
        on right: 215
    expr_named_call <pExpression> (308)
        on left: 335 336
        on right: 437
    expr_method_call <pExpression> (309)
        on left: 337 338
        on right: 436
    func_addr_name <pExpression> (310)
        on left: 339 340
        on right: 341 344 347
    func_addr_expr <pExpression> (311)
        on left: 341 344 347
        on right: 407
    $@13 (312)
        on left: 342
        on right: 344
    $@14 (313)
        on left: 343
        on right: 344
    $@15 (314)
        on left: 345
        on right: 347
    $@16 (315)
        on left: 346
        on right: 347
    expr_field <pExpression> (316)
        on left: 348 349 350 351 354
        on right: 368
    $@17 (317)
        on left: 352
        on right: 354
    $@18 (318)
        on left: 353
        on right: 354
    expr_call <pExpression> (319)
        on left: 355 356 357 358 359
        on right: 213 408
    expr <pExpression> (320)
        on left: 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 419 420 421 422 425 426 427 430 431 432 433 434 435 436 437 438 439 440 441 442
        on right
    $@19 (321)
        on left: 417
        on right: 419
    $@20 (322)
        on left: 418
        on right: 419
    $@21 (323)
        on left: 423
        on right: 425
    $@22 (324)
        on left: 424
        on right: 425
    $@23 (325)
        on left: 428
        on right: 430
    $@24 (326)
        on left: 429
        on right: 430
    expr_mtag <pExpression> (327)
        on left: 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458
        on right: 369
    optional_field_annotation <aaList> (328)
        on left: 459 460
        on right: 471 479 527
    optional_override <i> (329)
        on left: 461 462 463
        on right: 471 478
    optional_constant <b> (330)
        on left: 464 465
        on right: 476 478
    optional_public_or_private_member_variable <b> (331)
        on left: 466 467 468
        on right: 471 476 478
    optional_static_member_variable <b> (332)
        on left: 469 470
        on right: 471 478
    structure_variable_declaration <pVarDecl> (333)
        on left: 471
        on right: 474
    struct_variable_declaration_list <pVarDeclList> (334)
        on left: 472 474 476 478
        on right: 474 476 478 559
    $@25 (335)
        on left: 473
        on right: 474
    $@26 (336)
        on left: 475
        on right: 476
    $@27 (337)
        on left: 477
        on right: 478
    function_argument_declaration <pVarDecl> (338)
        on left: 479 480
        on right: 481 482
    function_argument_list <pVarDeclList> (339)
        on left: 481 482
        on right: 116 482
    tuple_type <pVarDecl> (340)
        on left: 483 484
        on right: 485 486 489
    tuple_type_list <pVarDeclList> (341)
        on left: 485 486
        on right: 486 682
    tuple_alias_type_list <pVarDeclList> (342)
        on left: 487 488 489
        on right: 488 489 692
    variant_type <pVarDecl> (343)
        on left: 490
        on right: 491 492 495
    variant_type_list <pVarDeclList> (344)
        on left: 491 492
        on right: 492 685
    variant_alias_type_list <pVarDeclList> (345)
        on left: 493 494 495
        on right: 494 495 696
    copy_or_move <b> (346)
        on left: 496 497
        on right: 501 502 706 708 710 712
    variable_declaration <pVarDecl> (347)
        on left: 498 499 500 501 502
        on right: 471 479
    copy_or_move_or_clone <i> (348)
        on left: 503 504 505
        on right: 271 272 516 517 519 520
    optional_ref <b> (349)
        on left: 506 507
        on right: 272 517 520
    let_variable_name_with_pos_list <pNameWithPosList> (350)
        on left: 508 509 510 511 512
        on right: 511 512 515 516 517
    global_let_variable_name_with_pos_list <pNameWithPosList> (351)
        on left: 513 514
        on right: 514 518 519 520
    let_variable_declaration <pVarDecl> (352)
        on left: 515 516 517
        on right: 273
    global_let_variable_declaration <pVarDecl> (353)
        on left: 518 519 520
        on right: 527
    optional_shared <b> (354)
        on left: 521 522
        on right: 22 527
    optional_public_or_private_variable <b> (355)
        on left: 523 524 525
        on right: 527
    global_let (356)
        on left: 527
        on right: 5
    $@28 (357)
        on left: 526
        on right: 527
    enum_expression <pEnumPair> (358)
        on left: 528 529
        on right: 531 532
    enum_list <pEnum> (359)
        on left: 530 531 532
        on right: 532 547
    optional_public_or_private_alias <b> (360)
        on left: 533 534 535
        on right: 537 692 696 700
    single_alias (361)
        on left: 537
        on right: 538
    $@29 (362)
        on left: 536
        on right: 537
    alias_declaration (363)
        on left: 538
        on right: 10
    optional_public_or_private_enum <b> (364)
        on left: 539 540 541
        on right: 547
    enum_name <pEnum> (365)
        on left: 542
        on right: 547
    optional_enum_basic_type_declaration <type> (366)
        on left: 543 544
        on right: 547
    enum_declaration (367)
        on left: 547
        on right: 4
    $@30 (368)
        on left: 545
        on right: 547
    $@31 (369)
        on left: 546
        on right: 547
    optional_structure_parent <s> (370)
        on left: 548 549
        on right: 552
    optional_sealed <b> (371)
        on left: 550 551
        on right: 552
    structure_name <pStructure> (372)
        on left: 552
        on right: 562
    class_or_struct <b> (373)
        on left: 553 554
        on right: 562
    optional_public_or_private_structure <b> (374)
        on left: 555 556 557
        on right: 562
    optional_struct_variable_declaration_list <pVarDeclList> (375)
        on left: 558 559
        on right: 562
    structure_declaration (376)
        on left: 562
        on right: 3
    $@32 (377)
        on left: 560
        on right: 562
    $@33 (378)
        on left: 561
        on right: 562
    variable_name_with_pos_list <pNameWithPosList> (379)
        on left: 563 564 565 566 567
        on right: 70 498 499 500 501 502 566 567 768 769 770
    basic_type_declaration <type> (380)
        on left: 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594
        on right: 358 359 420 426 431 441 623
    enum_basic_type_declaration <type> (381)
        on left: 595 596 597 598 599 600 601 602
        on right: 544
    structure_type_declaration <pTypeDecl> (382)
        on left: 603
        on right: 249 250 626
    auto_type_declaration <pTypeDecl> (383)
        on left: 604 605 606
        on right: 624
    bitfield_bits <pNameList> (384)
        on left: 607 608
        on right: 608 614
    bitfield_alias_bits <pNameList> (385)
        on left: 609 610 611
        on right: 611 700
    bitfield_type_declaration <pTypeDecl> (386)
        on left: 614
        on right: 625
    $@34 (387)
        on left: 612
        on right: 614
    $@35 (388)
        on left: 613
        on right: 614
    table_type_pair <aTypePair> (389)
        on left: 615 616
        on right: 655
    dim_list <pTypeDecl> (390)
        on left: 617 618 619 620
        on right: 619 620 622
    type_declaration_no_options <pTypeDecl> (391)
        on left: 621 622
        on right: 271 277 280 283 344 412 413 414 419 515 516 518 519 686 687 724 727 730 733 739 743 746 749 753 757 762 763
    type_declaration_no_options_no_dim <pTypeDecl> (392)
        on left: 623 624 625 626 629 630 631 633 634 635 636 637 638 639 640 641 642 643 644 645 648 649 652 655 658 659 662 665 666 669 672 673 676 679 682 685
        on right: 621 622 634 635 636 637 638 639 640 641 642 643 644 645 649
    $@36 (393)
        on left: 627
        on right: 629
    $@37 (394)
        on left: 628
        on right: 629
    $@38 (395)
        on left: 632
        on right: 633
    $@39 (396)
        on left: 646
        on right: 648
    $@40 (397)
        on left: 647
        on right: 648
    $@41 (398)
        on left: 650
        on right: 652
    $@42 (399)
        on left: 651
        on right: 652
    $@43 (400)
        on left: 653
        on right: 655
    $@44 (401)
        on left: 654
        on right: 655
    $@45 (402)
        on left: 656
        on right: 658
    $@46 (403)
        on left: 657
        on right: 658
    $@47 (404)
        on left: 660
        on right: 662
    $@48 (405)
        on left: 661
        on right: 662
    $@49 (406)
        on left: 663
        on right: 665
    $@50 (407)
        on left: 664
        on right: 665
    $@51 (408)
        on left: 667
        on right: 669
    $@52 (409)
        on left: 668
        on right: 669
    $@53 (410)
        on left: 670
        on right: 672
    $@54 (411)
        on left: 671
        on right: 672
    $@55 (412)
        on left: 674
        on right: 676
    $@56 (413)
        on left: 675
        on right: 676
    $@57 (414)
        on left: 677
        on right: 679
    $@58 (415)
        on left: 678
        on right: 679
    $@59 (416)
        on left: 680
        on right: 682
    $@60 (417)
        on left: 681
        on right: 682
    $@61 (418)
        on left: 683
        on right: 685
    $@62 (419)
        on left: 684
        on right: 685
    type_declaration <pTypeDecl> (420)
        on left: 686 687 688
        on right: 118 239 240 248 286 425 430 483 484 490 500 501 537 615 616 629 648 652 658 662 669 676 687 688
    tuple_alias_declaration (421)
        on left: 692
        on right: 12
    $@63 (422)
        on left: 689
        on right: 692
    $@64 (423)
        on left: 690
        on right: 692
    $@65 (424)
        on left: 691
        on right: 692
    variant_alias_declaration (425)
        on left: 696
        on right: 11
    $@66 (426)
        on left: 693
        on right: 696
    $@67 (427)
        on left: 694
        on right: 696
    $@68 (428)
        on left: 695
        on right: 696
    bitfield_alias_declaration (429)
        on left: 700
        on right: 13
    $@69 (430)
        on left: 697
        on right: 700
    $@70 (431)
        on left: 698
        on right: 700
    $@71 (432)
        on left: 699
        on right: 700
    make_decl <pExpression> (433)
        on left: 701 702 703 704 705
        on right: 253 365
    make_struct_fields <pMakeStruct> (434)
        on left: 706 707 708 709 710 711 712 713
        on right: 335 336 708 709 712 713 714 715 716 717 718
    make_variant_dim <pExpression> (435)
        on left: 714
        on right: 730 749
    make_struct_single <pExpression> (436)
        on left: 715
        on right: 252 356
    make_struct_dim_list <pExpression> (437)
        on left: 716 717
        on right: 717 719
    make_struct_dim_decl <pExpression> (438)
        on left: 718 719
        on right: 724 727 739 743 746
    use_initializer <b> (439)
        on left: 720 721
        on right: 251 252 724 727 733 739 743 746
    make_struct_decl <pExpression> (440)
        on left: 724 727 730 733
        on right: 701
    $@72 (441)
        on left: 722
        on right: 724
    $@73 (442)
        on left: 723
        on right: 724
    $@74 (443)
        on left: 725
        on right: 727
    $@75 (444)
        on left: 726
        on right: 727
    $@76 (445)
        on left: 728
        on right: 730
    $@77 (446)
        on left: 729
        on right: 730
    $@78 (447)
        on left: 731
        on right: 733
    $@79 (448)
        on left: 732
        on right: 733
    make_map_tuple <pExpression> (449)
        on left: 734 735
        on right: 758 759 770
    make_tuple_call <pExpression> (450)
        on left: 736 739
        on right: 705
    $@80 (451)
        on left: 737
        on right: 739
    $@81 (452)
        on left: 738
        on right: 739
    make_dim_decl <pExpression> (453)
        on left: 740 743 746 749 750 753 754 757
        on right: 702
    $@82 (454)
        on left: 741
        on right: 743
    $@83 (455)
        on left: 742
        on right: 743
    $@84 (456)
        on left: 744
        on right: 746
    $@85 (457)
        on left: 745
        on right: 746
    $@86 (458)
        on left: 747
        on right: 749
    $@87 (459)
        on left: 748
        on right: 749
    $@88 (460)
        on left: 751
        on right: 753
    $@89 (461)
        on left: 752
        on right: 753
    $@90 (462)
        on left: 755
        on right: 757
    $@91 (463)
        on left: 756
        on right: 757
    expr_map_tuple_list <pExpression> (464)
        on left: 758 759
        on right: 238 759 760 761
    make_table_decl <pExpression> (465)
        on left: 760 761 762 763
        on right: 703
    array_comprehension_where <pExpression> (466)
        on left: 764 765
        on right: 768 769 770
    optional_comma <b> (467)
        on left: 766 767
        on right: 236 238 400 547 700 719 736 740 750 754 757 760 761
    array_comprehension <pExpression> (468)
        on left: 768 769 770
        on right: 704


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  265 kwd_let: "let" .

    $default  reduce using rule 265 (kwd_let)


State 4

   36 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   46 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   37 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  538 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 533 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  266 kwd_let: "var" .

    $default  reduce using rule 266 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  700 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 533 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  692 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 533 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  696 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 533 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   35 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  113 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 20

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  204 global_function_declaration: optional_annotation_list . "def" function_declaration
  547 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"
  562 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 69
    "class"   shift, and go to state 70
    "def"     shift, and go to state 71
    "enum"    shift, and go to state 72

    class_or_struct  go to state 73


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  527 global_let: kwd_let . optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 74

    $default  reduce using rule 521 (optional_shared)

    optional_shared  go to state 75


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   84 annotation_argument_name: "type" .

    $default  reduce using rule 84 (annotation_argument_name)


State 33

   85 annotation_argument_name: "in" .

    $default  reduce using rule 85 (annotation_argument_name)


State 34

   83 annotation_argument_name: "name" .

    $default  reduce using rule 83 (annotation_argument_name)


State 35

   86 annotation_argument: annotation_argument_name . '=' string_constant
   87                    | annotation_argument_name . '=' "name"
   88                    | annotation_argument_name . '=' "integer constant"
   89                    | annotation_argument_name . '=' "floating point constant"
   90                    | annotation_argument_name . '=' "true"
   91                    | annotation_argument_name . '=' "false"
   92                    | annotation_argument_name .
   93                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 76

    $default  reduce using rule 92 (annotation_argument)


State 36

   94 annotation_argument_list: annotation_argument .

    $default  reduce using rule 94 (annotation_argument_list)


State 37

   36 options_declaration: "options" annotation_argument_list .
   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 77

    $default  reduce using rule 36 (options_declaration)


State 38

   49 expect_error: "integer constant" .
   50             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 78

    $default  reduce using rule 49 (expect_error)


State 39

   46 expect_declaration: "expect" expect_list .
   48 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 79

    $default  reduce using rule 46 (expect_declaration)


State 40

   47 expect_list: expect_error .

    $default  reduce using rule 47 (expect_list)


State 41

   38 require_module_name: "name" .

    $default  reduce using rule 38 (require_module_name)


State 42

   39 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 80


State 43

   40 require_module_name: require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"
   42 require_module: require_module_name . is_public_module
   43               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 81
    "public"  shift, and go to state 82
    '/'       shift, and go to state 83
    '.'       shift, and go to state 84

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 85


State 44

   37 require_declaration: "require" require_module .

    $default  reduce using rule 37 (require_declaration)


State 45

  535 optional_public_or_private_alias: "public" .

    $default  reduce using rule 535 (optional_public_or_private_alias)


State 46

  534 optional_public_or_private_alias: "private" .

    $default  reduce using rule 534 (optional_public_or_private_alias)


State 47

  537 single_alias: optional_public_or_private_alias . "name" $@29 '=' type_declaration

    "name"  shift, and go to state 86


State 48

  538 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 87


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 74

    $default  reduce using rule 521 (optional_shared)

    optional_shared  go to state 88


State 52

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 89


State 53

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "name"  shift, and go to state 90


State 54

  696 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "name"  shift, and go to state 91


State 55

  243 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 92


State 56

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"

    "::"  shift, and go to state 93

    $default  reduce using rule 241 (name_in_namespace)


State 57

   35 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 34 ($@1)

    $@1  go to state 94


State 58

   99 annotation_declaration_name: "require" .

    $default  reduce using rule 99 (annotation_declaration_name)


State 59

  100 annotation_declaration_name: "private" .

    $default  reduce using rule 100 (annotation_declaration_name)


State 60

  109 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 95
    name_in_namespace             go to state 67


State 61

  104 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 62

  108 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 63

  101 annotation_declaration_basic: annotation_declaration_name .
  102                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 98

    $default  reduce using rule 101 (annotation_declaration_basic)


State 64

  103 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 103 (annotation_declaration)


State 65

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  110 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 110 (annotation_list)


State 66

  111 annotation_list: annotation_list . ',' annotation_declaration
  113 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 102
    ']'  shift, and go to state 103


State 67

   98 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 98 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

  554 class_or_struct: "struct" .

    $default  reduce using rule 554 (class_or_struct)


State 70

  553 class_or_struct: "class" .

    $default  reduce using rule 553 (class_or_struct)


State 71

  204 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 104
    "private"  shift, and go to state 105

    $default  reduce using rule 205 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 106
    function_declaration                 go to state 107


State 72

  547 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "public"   shift, and go to state 108
    "private"  shift, and go to state 109

    $default  reduce using rule 539 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 110


State 73

  562 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list

    "public"   shift, and go to state 111
    "private"  shift, and go to state 112

    $default  reduce using rule 555 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 113


State 74

  522 optional_shared: "shared" .

    $default  reduce using rule 522 (optional_shared)


State 75

  527 global_let: kwd_let optional_shared . optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 114
    "private"  shift, and go to state 115

    $default  reduce using rule 523 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 116


State 76

   86 annotation_argument: annotation_argument_name '=' . string_constant
   87                    | annotation_argument_name '=' . "name"
   88                    | annotation_argument_name '=' . "integer constant"
   89                    | annotation_argument_name '=' . "floating point constant"
   90                    | annotation_argument_name '=' . "true"
   91                    | annotation_argument_name '=' . "false"
   93                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 117
    "false"                    shift, and go to state 118
    "integer constant"         shift, and go to state 119
    "floating point constant"  shift, and go to state 120
    "name"                     shift, and go to state 121
    "start of the string"      shift, and go to state 122
    '('                        shift, and go to state 123

    string_constant  go to state 124


State 77

   95 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 125


State 78

   50 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 126


State 79

   48 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 127


State 80

   39 require_module_name: '%' require_module_name .
   40                    | require_module_name . '.' "name"
   41                    | require_module_name . '/' "name"

    '.'  shift, and go to state 84

    $default  reduce using rule 39 (require_module_name)


State 81

   43 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 128


State 82

   45 is_public_module: "public" .

    $default  reduce using rule 45 (is_public_module)


State 83

   41 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 129


State 84

   40 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 130


State 85

   42 require_module: require_module_name is_public_module .

    $default  reduce using rule 42 (require_module)


State 86

  537 single_alias: optional_public_or_private_alias "name" . $@29 '=' type_declaration

    $default  reduce using rule 536 ($@29)

    $@29  go to state 131


State 87

  538 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 538 (alias_declaration)


State 88

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 132
    "private"  shift, and go to state 133

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 134


State 89

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 697 ($@69)

    $@69  go to state 135


State 90

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 689 ($@63)

    $@63  go to state 136


State 91

  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 693 ($@66)

    $@66  go to state 137


State 92

  243 name_in_namespace: "::" "name" .

    $default  reduce using rule 243 (name_in_namespace)


State 93

  242 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 138


State 94

   35 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 139

    reader_character_sequence  go to state 140


State 95

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  109                       | "|>" annotation_declaration .

    $default  reduce using rule 109 (annotation_declaration)


State 96

  104 annotation_declaration: '!' annotation_declaration .
  105                       | annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 104 (annotation_declaration)


State 97

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  108                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101
    ')'   shift, and go to state 141


State 98

  102 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 142


State 99

  105 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 143
    name_in_namespace             go to state 67


State 100

  106 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 101

  107 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  111 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  113 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 113 (optional_annotation_list)


State 104

  207 optional_public_or_private_function: "public" .

    $default  reduce using rule 207 (optional_public_or_private_function)


State 105

  206 optional_public_or_private_function: "private" .

    $default  reduce using rule 206 (optional_public_or_private_function)


State 106

  210 function_declaration: optional_public_or_private_function . $@2 function_declaration_header expression_block

    $default  reduce using rule 209 ($@2)

    $@2  go to state 147


State 107

  204 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 204 (global_function_declaration)


State 108

  541 optional_public_or_private_enum: "public" .

    $default  reduce using rule 541 (optional_public_or_private_enum)


State 109

  540 optional_public_or_private_enum: "private" .

    $default  reduce using rule 540 (optional_public_or_private_enum)


State 110

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 148

    enum_name  go to state 149


State 111

  557 optional_public_or_private_structure: "public" .

    $default  reduce using rule 557 (optional_public_or_private_structure)


State 112

  556 optional_public_or_private_structure: "private" .

    $default  reduce using rule 556 (optional_public_or_private_structure)


State 113

  562 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@32 structure_name $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 560 ($@32)

    $@32  go to state 150


State 114

  525 optional_public_or_private_variable: "public" .

    $default  reduce using rule 525 (optional_public_or_private_variable)


State 115

  524 optional_public_or_private_variable: "private" .

    $default  reduce using rule 524 (optional_public_or_private_variable)


State 116

  527 global_let: kwd_let optional_shared optional_public_or_private_variable . $@28 optional_field_annotation global_let_variable_declaration

    $default  reduce using rule 526 ($@28)

    $@28  go to state 151


State 117

   90 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 90 (annotation_argument)


State 118

   91 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 91 (annotation_argument)


State 119

   88 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 88 (annotation_argument)


State 120

   89 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 89 (annotation_argument)


State 121

   87 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 87 (annotation_argument)


State 122

   27 string_constant: "start of the string" . character_sequence "end of the string"

    STRING_CHARACTER      shift, and go to state 152
    STRING_CHARACTER_ESC  shift, and go to state 153

    character_sequence  go to state 154


State 123

   93 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 155
    "false"                    shift, and go to state 156
    "integer constant"         shift, and go to state 157
    "floating point constant"  shift, and go to state 158
    "name"                     shift, and go to state 159
    "start of the string"      shift, and go to state 122

    string_constant                 go to state 160
    annotation_argument_value       go to state 161
    annotation_argument_value_list  go to state 162


State 124

   86 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 86 (annotation_argument)


State 125

   95 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 95 (annotation_argument_list)


State 126

   50 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 50 (expect_error)


State 127

   48 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 48 (expect_list)


State 128

   43 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 82

    $default  reduce using rule 44 (is_public_module)

    is_public_module  go to state 163


State 129

   41 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 41 (require_module_name)


State 130

   40 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 40 (require_module_name)


State 131

  537 single_alias: optional_public_or_private_alias "name" $@29 . '=' type_declaration

    '='  shift, and go to state 164


State 132

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 133

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 134

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 135

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 . "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    "begin of code block"  shift, and go to state 165


State 136

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 . "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block"

    "begin of code block"  shift, and go to state 166


State 137

  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 . "begin of code block" $@67 variant_alias_type_list $@68 "end of code block"

    "begin of code block"  shift, and go to state 167


State 138

  242 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 242 (name_in_namespace)


State 139

   32 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 32 (reader_character_sequence)


State 140

   33 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   35 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 168

    $default  reduce using rule 35 (expr_reader)


State 141

  108 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 108 (annotation_declaration)


State 142

   95 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 77
    ')'  shift, and go to state 169


State 143

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  105                       | annotation_declaration "&&" annotation_declaration .
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 105 (annotation_declaration)


State 144

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  106                       | annotation_declaration "||" annotation_declaration .
  107                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 99
    "^^"  shift, and go to state 101

    $default  reduce using rule 106 (annotation_declaration)


State 145

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  107                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 99

    $default  reduce using rule 107 (annotation_declaration)


State 146

  105 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  106                       | annotation_declaration . "||" annotation_declaration
  107                       | annotation_declaration . "^^" annotation_declaration
  111 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 111 (annotation_list)


State 147

  210 function_declaration: optional_public_or_private_function $@2 . function_declaration_header expression_block

    "operator"  shift, and go to state 170
    "bool"      shift, and go to state 171
    "string"    shift, and go to state 172
    "int"       shift, and go to state 173
    "int2"      shift, and go to state 174
    "int3"      shift, and go to state 175
    "int4"      shift, and go to state 176
    "uint"      shift, and go to state 177
    "uint2"     shift, and go to state 178
    "uint3"     shift, and go to state 179
    "uint4"     shift, and go to state 180
    "float"     shift, and go to state 181
    "float2"    shift, and go to state 182
    "float3"    shift, and go to state 183
    "float4"    shift, and go to state 184
    "range"     shift, and go to state 185
    "urange"    shift, and go to state 186
    "range64"   shift, and go to state 187
    "urange64"  shift, and go to state 188
    "int64"     shift, and go to state 189
    "uint64"    shift, and go to state 190
    "double"    shift, and go to state 191
    "int8"      shift, and go to state 192
    "uint8"     shift, and go to state 193
    "int16"     shift, and go to state 194
    "uint16"    shift, and go to state 195
    "++"        shift, and go to state 196
    "--"        shift, and go to state 197
    "name"      shift, and go to state 198

    function_name                go to state 199
    function_declaration_header  go to state 200


State 148

  542 enum_name: "name" .

    $default  reduce using rule 542 (enum_name)


State 149

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    ':'  shift, and go to state 201

    $default  reduce using rule 543 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 202


State 150

  562 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 . structure_name $@33 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 203

    $default  reduce using rule 550 (optional_sealed)

    optional_sealed  go to state 204
    structure_name   go to state 205


State 151

  527 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 206

    $default  reduce using rule 459 (optional_field_annotation)

    metadata_argument_list     go to state 207
    optional_field_annotation  go to state 208


State 152

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 153

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 154

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 209
    STRING_CHARACTER_ESC  shift, and go to state 210
    "end of the string"   shift, and go to state 211


State 155

   79 annotation_argument_value: "true" .

    $default  reduce using rule 79 (annotation_argument_value)


State 156

   80 annotation_argument_value: "false" .

    $default  reduce using rule 80 (annotation_argument_value)


State 157

   77 annotation_argument_value: "integer constant" .

    $default  reduce using rule 77 (annotation_argument_value)


State 158

   78 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 78 (annotation_argument_value)


State 159

   76 annotation_argument_value: "name" .

    $default  reduce using rule 76 (annotation_argument_value)


State 160

   75 annotation_argument_value: string_constant .

    $default  reduce using rule 75 (annotation_argument_value)


State 161

   81 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 81 (annotation_argument_value_list)


State 162

   82 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 212
    ')'  shift, and go to state 213


State 163

   43 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 43 (require_module)


State 164

  537 single_alias: optional_public_or_private_alias "name" $@29 '=' . type_declaration

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 262


State 165

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" . $@70 bitfield_alias_bits optional_comma $@71 "end of code block"

    $default  reduce using rule 698 ($@70)

    $@70  go to state 263


State 166

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" . $@64 tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 690 ($@64)

    $@64  go to state 264


State 167

  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" . $@67 variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 694 ($@67)

    $@67  go to state 265


State 168

   33 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 169

  102 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 102 (annotation_declaration_basic)


State 170

  120 function_name: "operator" . '!'
  121              | "operator" . '~'
  122              | "operator" . "+="
  123              | "operator" . "-="
  124              | "operator" . "*="
  125              | "operator" . "/="
  126              | "operator" . "%="
  127              | "operator" . "&="
  128              | "operator" . "|="
  129              | "operator" . "^="
  130              | "operator" . "&&="
  131              | "operator" . "||="
  132              | "operator" . "^^="
  133              | "operator" . "&&"
  134              | "operator" . "||"
  135              | "operator" . "^^"
  136              | "operator" . '+'
  137              | "operator" . '-'
  138              | "operator" . '*'
  139              | "operator" . '/'
  140              | "operator" . '%'
  141              | "operator" . '<'
  142              | "operator" . '>'
  143              | "operator" . ".."
  144              | "operator" . "=="
  145              | "operator" . "!="
  146              | "operator" . "<="
  147              | "operator" . ">="
  148              | "operator" . '&'
  149              | "operator" . '|'
  150              | "operator" . '^'
  153              | "operator" . "++"
  154              | "operator" . "--"
  155              | "operator" . "<<"
  156              | "operator" . ">>"
  157              | "operator" . "<<="
  158              | "operator" . ">>="
  159              | "operator" . "<<<"
  160              | "operator" . ">>>"
  161              | "operator" . "<<<="
  162              | "operator" . ">>>="
  163              | "operator" . '[' ']'
  164              | "operator" . "?[" ']'
  165              | "operator" . '.'
  166              | "operator" . "?."
  167              | "operator" . '.' "name"
  168              | "operator" . '.' "name" ":="
  169              | "operator" . "?." "name"
  170              | "operator" . ":="
  171              | "operator" . "delete"
  172              | "operator" . "??"
  173              | "operator" . "is"
  174              | "operator" . "as"
  175              | "operator" . "is" "name"
  176              | "operator" . "as" "name"
  177              | "operator" . '?' "as"
  178              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 266
    "as"      shift, and go to state 267
    "delete"  shift, and go to state 268
    "+="      shift, and go to state 269
    "-="      shift, and go to state 270
    "/="      shift, and go to state 271
    "*="      shift, and go to state 272
    "%="      shift, and go to state 273
    "&="      shift, and go to state 274
    "|="      shift, and go to state 275
    "^="      shift, and go to state 276
    "<<"      shift, and go to state 277
    ">>"      shift, and go to state 278
    "++"      shift, and go to state 279
    "--"      shift, and go to state 280
    "<="      shift, and go to state 281
    "<<="     shift, and go to state 282
    ">>="     shift, and go to state 283
    ">="      shift, and go to state 284
    "=="      shift, and go to state 285
    "!="      shift, and go to state 286
    "??"      shift, and go to state 287
    "?."      shift, and go to state 288
    "?["      shift, and go to state 289
    ":="      shift, and go to state 290
    "<<<"     shift, and go to state 291
    ">>>"     shift, and go to state 292
    "<<<="    shift, and go to state 293
    ">>>="    shift, and go to state 294
    "&&"      shift, and go to state 295
    "||"      shift, and go to state 296
    "^^"      shift, and go to state 297
    "&&="     shift, and go to state 298
    "||="     shift, and go to state 299
    "^^="     shift, and go to state 300
    ".."      shift, and go to state 301
    '?'       shift, and go to state 302
    '|'       shift, and go to state 303
    '^'       shift, and go to state 304
    '&'       shift, and go to state 305
    '<'       shift, and go to state 306
    '>'       shift, and go to state 307
    '-'       shift, and go to state 308
    '+'       shift, and go to state 309
    '*'       shift, and go to state 310
    '/'       shift, and go to state 311
    '%'       shift, and go to state 312
    '~'       shift, and go to state 313
    '!'       shift, and go to state 314
    '.'       shift, and go to state 315
    '['       shift, and go to state 316


State 171

  179 function_name: "bool" .

    $default  reduce using rule 179 (function_name)


State 172

  180 function_name: "string" .

    $default  reduce using rule 180 (function_name)


State 173

  181 function_name: "int" .

    $default  reduce using rule 181 (function_name)


State 174

  182 function_name: "int2" .

    $default  reduce using rule 182 (function_name)


State 175

  183 function_name: "int3" .

    $default  reduce using rule 183 (function_name)


State 176

  184 function_name: "int4" .

    $default  reduce using rule 184 (function_name)


State 177

  185 function_name: "uint" .

    $default  reduce using rule 185 (function_name)


State 178

  186 function_name: "uint2" .

    $default  reduce using rule 186 (function_name)


State 179

  187 function_name: "uint3" .

    $default  reduce using rule 187 (function_name)


State 180

  188 function_name: "uint4" .

    $default  reduce using rule 188 (function_name)


State 181

  189 function_name: "float" .

    $default  reduce using rule 189 (function_name)


State 182

  190 function_name: "float2" .

    $default  reduce using rule 190 (function_name)


State 183

  191 function_name: "float3" .

    $default  reduce using rule 191 (function_name)


State 184

  192 function_name: "float4" .

    $default  reduce using rule 192 (function_name)


State 185

  193 function_name: "range" .

    $default  reduce using rule 193 (function_name)


State 186

  194 function_name: "urange" .

    $default  reduce using rule 194 (function_name)


State 187

  195 function_name: "range64" .

    $default  reduce using rule 195 (function_name)


State 188

  196 function_name: "urange64" .

    $default  reduce using rule 196 (function_name)


State 189

  197 function_name: "int64" .

    $default  reduce using rule 197 (function_name)


State 190

  198 function_name: "uint64" .

    $default  reduce using rule 198 (function_name)


State 191

  199 function_name: "double" .

    $default  reduce using rule 199 (function_name)


State 192

  200 function_name: "int8" .

    $default  reduce using rule 200 (function_name)


State 193

  201 function_name: "uint8" .

    $default  reduce using rule 201 (function_name)


State 194

  202 function_name: "int16" .

    $default  reduce using rule 202 (function_name)


State 195

  203 function_name: "uint16" .

    $default  reduce using rule 203 (function_name)


State 196

  151 function_name: "++" . "operator"

    "operator"  shift, and go to state 317


State 197

  152 function_name: "--" . "operator"

    "operator"  shift, and go to state 318


State 198

  119 function_name: "name" .

    $default  reduce using rule 119 (function_name)


State 199

  208 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 319

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 320


State 200

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 322


State 201

  544 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 323
    "uint"    shift, and go to state 324
    "int64"   shift, and go to state 325
    "uint64"  shift, and go to state 326
    "int8"    shift, and go to state 327
    "uint8"   shift, and go to state 328
    "int16"   shift, and go to state 329
    "uint16"  shift, and go to state 330

    enum_basic_type_declaration  go to state 331


State 202

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@30 enum_list optional_comma $@31 "end of code block"

    "begin of code block"  shift, and go to state 332


State 203

  551 optional_sealed: "sealed" .

    $default  reduce using rule 551 (optional_sealed)


State 204

  552 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 333


State 205

  562 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name . $@33 optional_struct_variable_declaration_list

    $default  reduce using rule 561 ($@33)

    $@33  go to state 334


State 206

   96 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 335


State 207

   97 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  460 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 336

    $default  reduce using rule 460 (optional_field_annotation)


State 208

  527 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 337

    global_let_variable_name_with_pos_list  go to state 338
    global_let_variable_declaration         go to state 339


State 209

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 210

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 211

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 212

   82 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 155
    "false"                    shift, and go to state 156
    "integer constant"         shift, and go to state 157
    "floating point constant"  shift, and go to state 158
    "name"                     shift, and go to state 159
    "start of the string"      shift, and go to state 122

    string_constant            go to state 160
    annotation_argument_value  go to state 340


State 213

   93 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 93 (annotation_argument)


State 214

  629 type_declaration_no_options_no_dim: "type" . '<' $@36 type_declaration '>' $@37

    '<'  shift, and go to state 341


State 215

  652 type_declaration_no_options_no_dim: "array" . '<' $@41 type_declaration '>' $@42

    '<'  shift, and go to state 342


State 216

  655 type_declaration_no_options_no_dim: "table" . '<' $@43 table_type_pair '>' $@44

    '<'  shift, and go to state 343


State 217

  630 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 344


State 218

  658 type_declaration_no_options_no_dim: "iterator" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 345


State 219

  648 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@39 type_declaration '>' $@40

    '<'  shift, and go to state 346


State 220

  568 basic_type_declaration: "bool" .

    $default  reduce using rule 568 (basic_type_declaration)


State 221

  588 basic_type_declaration: "void" .

    $default  reduce using rule 588 (basic_type_declaration)


State 222

  569 basic_type_declaration: "string" .

    $default  reduce using rule 569 (basic_type_declaration)


State 223

  604 auto_type_declaration: "auto" .
  605                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 347

    $default  reduce using rule 604 (auto_type_declaration)


State 224

  570 basic_type_declaration: "int" .

    $default  reduce using rule 570 (basic_type_declaration)


State 225

  574 basic_type_declaration: "int2" .

    $default  reduce using rule 574 (basic_type_declaration)


State 226

  575 basic_type_declaration: "int3" .

    $default  reduce using rule 575 (basic_type_declaration)


State 227

  576 basic_type_declaration: "int4" .

    $default  reduce using rule 576 (basic_type_declaration)


State 228

  577 basic_type_declaration: "uint" .

    $default  reduce using rule 577 (basic_type_declaration)


State 229

  594 basic_type_declaration: "bitfield" .
  614 bitfield_type_declaration: "bitfield" . '<' $@34 bitfield_bits '>' $@35

    '<'  shift, and go to state 348

    $default  reduce using rule 594 (basic_type_declaration)


State 230

  581 basic_type_declaration: "uint2" .

    $default  reduce using rule 581 (basic_type_declaration)


State 231

  582 basic_type_declaration: "uint3" .

    $default  reduce using rule 582 (basic_type_declaration)


State 232

  583 basic_type_declaration: "uint4" .

    $default  reduce using rule 583 (basic_type_declaration)


State 233

  584 basic_type_declaration: "float" .

    $default  reduce using rule 584 (basic_type_declaration)


State 234

  585 basic_type_declaration: "float2" .

    $default  reduce using rule 585 (basic_type_declaration)


State 235

  586 basic_type_declaration: "float3" .

    $default  reduce using rule 586 (basic_type_declaration)


State 236

  587 basic_type_declaration: "float4" .

    $default  reduce using rule 587 (basic_type_declaration)


State 237

  589 basic_type_declaration: "range" .

    $default  reduce using rule 589 (basic_type_declaration)


State 238

  590 basic_type_declaration: "urange" .

    $default  reduce using rule 590 (basic_type_declaration)


State 239

  591 basic_type_declaration: "range64" .

    $default  reduce using rule 591 (basic_type_declaration)


State 240

  592 basic_type_declaration: "urange64" .

    $default  reduce using rule 592 (basic_type_declaration)


State 241

  659 type_declaration_no_options_no_dim: "block" .
  662                                   | "block" . '<' $@47 type_declaration '>' $@48
  665                                   | "block" . '<' $@49 optional_function_argument_list optional_function_type '>' $@50

    '<'  shift, and go to state 349

    $default  reduce using rule 659 (type_declaration_no_options_no_dim)


State 242

  573 basic_type_declaration: "int64" .

    $default  reduce using rule 573 (basic_type_declaration)


State 243

  580 basic_type_declaration: "uint64" .

    $default  reduce using rule 580 (basic_type_declaration)


State 244

  593 basic_type_declaration: "double" .

    $default  reduce using rule 593 (basic_type_declaration)


State 245

  666 type_declaration_no_options_no_dim: "function" .
  669                                   | "function" . '<' $@51 type_declaration '>' $@52
  672                                   | "function" . '<' $@53 optional_function_argument_list optional_function_type '>' $@54

    '<'  shift, and go to state 350

    $default  reduce using rule 666 (type_declaration_no_options_no_dim)


State 246

  673 type_declaration_no_options_no_dim: "lambda" .
  676                                   | "lambda" . '<' $@55 type_declaration '>' $@56
  679                                   | "lambda" . '<' $@57 optional_function_argument_list optional_function_type '>' $@58

    '<'  shift, and go to state 351

    $default  reduce using rule 673 (type_declaration_no_options_no_dim)


State 247

  571 basic_type_declaration: "int8" .

    $default  reduce using rule 571 (basic_type_declaration)


State 248

  578 basic_type_declaration: "uint8" .

    $default  reduce using rule 578 (basic_type_declaration)


State 249

  572 basic_type_declaration: "int16" .

    $default  reduce using rule 572 (basic_type_declaration)


State 250

  579 basic_type_declaration: "uint16" .

    $default  reduce using rule 579 (basic_type_declaration)


State 251

  682 type_declaration_no_options_no_dim: "tuple" . '<' $@59 tuple_type_list '>' $@60

    '<'  shift, and go to state 352


State 252

  685 type_declaration_no_options_no_dim: "variant" . '<' $@61 variant_type_list '>' $@62

    '<'  shift, and go to state 353


State 253

  606 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 354


State 254

  631 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  633                                   | '$' . name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 355


State 255

  603 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 603 (structure_type_declaration)


State 256

  623 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 623 (type_declaration_no_options_no_dim)


State 257

  626 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 626 (type_declaration_no_options_no_dim)


State 258

  624 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 624 (type_declaration_no_options_no_dim)


State 259

  625 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 625 (type_declaration_no_options_no_dim)


State 260

  686 type_declaration: type_declaration_no_options .

    $default  reduce using rule 686 (type_declaration)


State 261

  621 type_declaration_no_options: type_declaration_no_options_no_dim .
  622                            | type_declaration_no_options_no_dim . dim_list
  634 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  635                                   | type_declaration_no_options_no_dim . "explicit"
  636                                   | type_declaration_no_options_no_dim . "const"
  637                                   | type_declaration_no_options_no_dim . '-' "const"
  638                                   | type_declaration_no_options_no_dim . '&'
  639                                   | type_declaration_no_options_no_dim . '-' '&'
  640                                   | type_declaration_no_options_no_dim . '#'
  641                                   | type_declaration_no_options_no_dim . "implicit"
  642                                   | type_declaration_no_options_no_dim . '-' '#'
  643                                   | type_declaration_no_options_no_dim . "==" "const"
  644                                   | type_declaration_no_options_no_dim . "==" '&'
  645                                   | type_declaration_no_options_no_dim . '*'
  649                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 356
    "implicit"  shift, and go to state 357
    "explicit"  shift, and go to state 358
    "=="        shift, and go to state 359
    "??"        shift, and go to state 360
    '&'         shift, and go to state 361
    '-'         shift, and go to state 362
    '*'         shift, and go to state 363
    '['         shift, and go to state 364
    '#'         shift, and go to state 365

    $default  reduce using rule 621 (type_declaration_no_options)

    dim_list  go to state 366


State 262

  537 single_alias: optional_public_or_private_alias "name" $@29 '=' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 537 (single_alias)


State 263

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 . bitfield_alias_bits optional_comma $@71 "end of code block"

    "name"  shift, and go to state 368

    $default  reduce using rule 609 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 369


State 264

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 . tuple_alias_type_list $@65 "end of code block"

    $default  reduce using rule 487 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 370


State 265

  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 . variant_alias_type_list $@68 "end of code block"

    $default  reduce using rule 493 (variant_alias_type_list)

    variant_alias_type_list  go to state 371


State 266

  173 function_name: "operator" "is" .
  175              | "operator" "is" . "name"

    "name"  shift, and go to state 372

    $default  reduce using rule 173 (function_name)


State 267

  174 function_name: "operator" "as" .
  176              | "operator" "as" . "name"

    "name"  shift, and go to state 373

    $default  reduce using rule 174 (function_name)


State 268

  171 function_name: "operator" "delete" .

    $default  reduce using rule 171 (function_name)


State 269

  122 function_name: "operator" "+=" .

    $default  reduce using rule 122 (function_name)


State 270

  123 function_name: "operator" "-=" .

    $default  reduce using rule 123 (function_name)


State 271

  125 function_name: "operator" "/=" .

    $default  reduce using rule 125 (function_name)


State 272

  124 function_name: "operator" "*=" .

    $default  reduce using rule 124 (function_name)


State 273

  126 function_name: "operator" "%=" .

    $default  reduce using rule 126 (function_name)


State 274

  127 function_name: "operator" "&=" .

    $default  reduce using rule 127 (function_name)


State 275

  128 function_name: "operator" "|=" .

    $default  reduce using rule 128 (function_name)


State 276

  129 function_name: "operator" "^=" .

    $default  reduce using rule 129 (function_name)


State 277

  155 function_name: "operator" "<<" .

    $default  reduce using rule 155 (function_name)


State 278

  156 function_name: "operator" ">>" .

    $default  reduce using rule 156 (function_name)


State 279

  153 function_name: "operator" "++" .

    $default  reduce using rule 153 (function_name)


State 280

  154 function_name: "operator" "--" .

    $default  reduce using rule 154 (function_name)


State 281

  146 function_name: "operator" "<=" .

    $default  reduce using rule 146 (function_name)


State 282

  157 function_name: "operator" "<<=" .

    $default  reduce using rule 157 (function_name)


State 283

  158 function_name: "operator" ">>=" .

    $default  reduce using rule 158 (function_name)


State 284

  147 function_name: "operator" ">=" .

    $default  reduce using rule 147 (function_name)


State 285

  144 function_name: "operator" "==" .

    $default  reduce using rule 144 (function_name)


State 286

  145 function_name: "operator" "!=" .

    $default  reduce using rule 145 (function_name)


State 287

  172 function_name: "operator" "??" .

    $default  reduce using rule 172 (function_name)


State 288

  166 function_name: "operator" "?." .
  169              | "operator" "?." . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 166 (function_name)


State 289

  164 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 375


State 290

  170 function_name: "operator" ":=" .

    $default  reduce using rule 170 (function_name)


State 291

  159 function_name: "operator" "<<<" .

    $default  reduce using rule 159 (function_name)


State 292

  160 function_name: "operator" ">>>" .

    $default  reduce using rule 160 (function_name)


State 293

  161 function_name: "operator" "<<<=" .

    $default  reduce using rule 161 (function_name)


State 294

  162 function_name: "operator" ">>>=" .

    $default  reduce using rule 162 (function_name)


State 295

  133 function_name: "operator" "&&" .

    $default  reduce using rule 133 (function_name)


State 296

  134 function_name: "operator" "||" .

    $default  reduce using rule 134 (function_name)


State 297

  135 function_name: "operator" "^^" .

    $default  reduce using rule 135 (function_name)


State 298

  130 function_name: "operator" "&&=" .

    $default  reduce using rule 130 (function_name)


State 299

  131 function_name: "operator" "||=" .

    $default  reduce using rule 131 (function_name)


State 300

  132 function_name: "operator" "^^=" .

    $default  reduce using rule 132 (function_name)


State 301

  143 function_name: "operator" ".." .

    $default  reduce using rule 143 (function_name)


State 302

  177 function_name: "operator" '?' . "as"
  178              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 376


State 303

  149 function_name: "operator" '|' .

    $default  reduce using rule 149 (function_name)


State 304

  150 function_name: "operator" '^' .

    $default  reduce using rule 150 (function_name)


State 305

  148 function_name: "operator" '&' .

    $default  reduce using rule 148 (function_name)


State 306

  141 function_name: "operator" '<' .

    $default  reduce using rule 141 (function_name)


State 307

  142 function_name: "operator" '>' .

    $default  reduce using rule 142 (function_name)


State 308

  137 function_name: "operator" '-' .

    $default  reduce using rule 137 (function_name)


State 309

  136 function_name: "operator" '+' .

    $default  reduce using rule 136 (function_name)


State 310

  138 function_name: "operator" '*' .

    $default  reduce using rule 138 (function_name)


State 311

  139 function_name: "operator" '/' .

    $default  reduce using rule 139 (function_name)


State 312

  140 function_name: "operator" '%' .

    $default  reduce using rule 140 (function_name)


State 313

  121 function_name: "operator" '~' .

    $default  reduce using rule 121 (function_name)


State 314

  120 function_name: "operator" '!' .

    $default  reduce using rule 120 (function_name)


State 315

  165 function_name: "operator" '.' .
  167              | "operator" '.' . "name"
  168              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 377

    $default  reduce using rule 165 (function_name)


State 316

  163 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 378


State 317

  151 function_name: "++" "operator" .

    $default  reduce using rule 151 (function_name)


State 318

  152 function_name: "--" "operator" .

    $default  reduce using rule 152 (function_name)


State 319

  115 optional_function_argument_list: '(' . ')'
  116                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 379
    ')'   shift, and go to state 380
    '@'   shift, and go to state 206

    $default  reduce using rule 459 (optional_field_annotation)

    metadata_argument_list         go to state 207
    optional_field_annotation      go to state 381
    function_argument_declaration  go to state 382
    function_argument_list         go to state 383


State 320

  208 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 384

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 385


State 321

  211 expression_block: "begin of code block" . expressions "end of code block"
  212                 | "begin of code block" . expressions "end of code block" "finally" "begin of code block" expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 386


State 322

  210 function_declaration: optional_public_or_private_function $@2 function_declaration_header expression_block .

    $default  reduce using rule 210 (function_declaration)


State 323

  595 enum_basic_type_declaration: "int" .

    $default  reduce using rule 595 (enum_basic_type_declaration)


State 324

  598 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 598 (enum_basic_type_declaration)


State 325

  601 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 601 (enum_basic_type_declaration)


State 326

  602 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 602 (enum_basic_type_declaration)


State 327

  596 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 596 (enum_basic_type_declaration)


State 328

  599 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 599 (enum_basic_type_declaration)


State 329

  597 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 597 (enum_basic_type_declaration)


State 330

  600 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 600 (enum_basic_type_declaration)


State 331

  544 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 544 (optional_enum_basic_type_declaration)


State 332

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@30 enum_list optional_comma $@31 "end of code block"

    $default  reduce using rule 545 ($@30)

    $@30  go to state 387


State 333

  552 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 388

    $default  reduce using rule 548 (optional_structure_parent)

    optional_structure_parent  go to state 389


State 334

  562 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 390

    $default  reduce using rule 558 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 391


State 335

   96 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 96 (metadata_argument_list)


State 336

   97 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 392


State 337

  513 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 513 (global_let_variable_name_with_pos_list)


State 338

  514 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  518 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  519                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  520                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 393
    ':'  shift, and go to state 394
    '&'  shift, and go to state 395

    $default  reduce using rule 506 (optional_ref)

    optional_ref  go to state 396


State 339

  527 global_let: kwd_let optional_shared optional_public_or_private_variable $@28 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 527 (global_let)


State 340

   82 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 82 (annotation_argument_value_list)


State 341

  629 type_declaration_no_options_no_dim: "type" '<' . $@36 type_declaration '>' $@37

    $default  reduce using rule 627 ($@36)

    $@36  go to state 397


State 342

  652 type_declaration_no_options_no_dim: "array" '<' . $@41 type_declaration '>' $@42

    $default  reduce using rule 650 ($@41)

    $@41  go to state 398


State 343

  655 type_declaration_no_options_no_dim: "table" '<' . $@43 table_type_pair '>' $@44

    $default  reduce using rule 653 ($@43)

    $@43  go to state 399


State 344

  630 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 464
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 345

  658 type_declaration_no_options_no_dim: "iterator" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 656 ($@45)

    $@45  go to state 473


State 346

  648 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@39 type_declaration '>' $@40

    $default  reduce using rule 646 ($@39)

    $@39  go to state 474


State 347

  605 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 475


State 348

  614 bitfield_type_declaration: "bitfield" '<' . $@34 bitfield_bits '>' $@35

    $default  reduce using rule 612 ($@34)

    $@34  go to state 476


State 349

  662 type_declaration_no_options_no_dim: "block" '<' . $@47 type_declaration '>' $@48
  665                                   | "block" '<' . $@49 optional_function_argument_list optional_function_type '>' $@50

    ':'       reduce using rule 663 ($@49)
    '>'       reduce using rule 663 ($@49)
    '('       reduce using rule 663 ($@49)
    $default  reduce using rule 660 ($@47)

    $@47  go to state 477
    $@49  go to state 478


State 350

  669 type_declaration_no_options_no_dim: "function" '<' . $@51 type_declaration '>' $@52
  672                                   | "function" '<' . $@53 optional_function_argument_list optional_function_type '>' $@54

    ':'       reduce using rule 670 ($@53)
    '>'       reduce using rule 670 ($@53)
    '('       reduce using rule 670 ($@53)
    $default  reduce using rule 667 ($@51)

    $@51  go to state 479
    $@53  go to state 480


State 351

  676 type_declaration_no_options_no_dim: "lambda" '<' . $@55 type_declaration '>' $@56
  679                                   | "lambda" '<' . $@57 optional_function_argument_list optional_function_type '>' $@58

    ':'       reduce using rule 677 ($@57)
    '>'       reduce using rule 677 ($@57)
    '('       reduce using rule 677 ($@57)
    $default  reduce using rule 674 ($@55)

    $@55  go to state 481
    $@57  go to state 482


State 352

  682 type_declaration_no_options_no_dim: "tuple" '<' . $@59 tuple_type_list '>' $@60

    $default  reduce using rule 680 ($@59)

    $@59  go to state 483


State 353

  685 type_declaration_no_options_no_dim: "variant" '<' . $@61 variant_type_list '>' $@62

    $default  reduce using rule 683 ($@61)

    $@61  go to state 484


State 354

  606 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 485
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 355

  631 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  633                                   | '$' name_in_namespace . '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 486
    '('  shift, and go to state 487


State 356

  636 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 636 (type_declaration_no_options_no_dim)


State 357

  641 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 641 (type_declaration_no_options_no_dim)


State 358

  635 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 635 (type_declaration_no_options_no_dim)


State 359

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  644                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 488
    '&'      shift, and go to state 489


State 360

  649 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 649 (type_declaration_no_options_no_dim)


State 361

  638 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 638 (type_declaration_no_options_no_dim)


State 362

  634 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  637                                   | type_declaration_no_options_no_dim '-' . "const"
  639                                   | type_declaration_no_options_no_dim '-' . '&'
  642                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 490
    '&'      shift, and go to state 491
    '['      shift, and go to state 492
    '#'      shift, and go to state 493


State 363

  645 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '*' .

    $default  reduce using rule 645 (type_declaration_no_options_no_dim)


State 364

  617 dim_list: '[' . expr ']'
  618         | '[' . ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    ']'                               shift, and go to state 494
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 495
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 365

  640 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 640 (type_declaration_no_options_no_dim)


State 366

  619 dim_list: dim_list . '[' expr ']'
  620         | dim_list . '[' ']'
  622 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 496

    $default  reduce using rule 622 (type_declaration_no_options)


State 367

  687 type_declaration: type_declaration '|' . type_declaration_no_options
  688                 | type_declaration '|' . '#'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254
    '#'          shift, and go to state 497

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 498
    type_declaration_no_options_no_dim  go to state 261


State 368

  610 bitfield_alias_bits: "name" .

    $default  reduce using rule 610 (bitfield_alias_bits)


State 369

  611 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits . optional_comma $@71 "end of code block"

    ','  shift, and go to state 499

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 500


State 370

  488 tuple_alias_type_list: tuple_alias_type_list . "end of expression"
  489                      | tuple_alias_type_list . tuple_type "end of expression"
  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list . $@65 "end of code block"

    "type"               shift, and go to state 214
    "array"              shift, and go to state 215
    "table"              shift, and go to state 216
    "typedecl"           shift, and go to state 217
    "iterator"           shift, and go to state 218
    "smart_ptr"          shift, and go to state 219
    "bool"               shift, and go to state 220
    "void"               shift, and go to state 221
    "string"             shift, and go to state 222
    "auto"               shift, and go to state 223
    "int"                shift, and go to state 224
    "int2"               shift, and go to state 225
    "int3"               shift, and go to state 226
    "int4"               shift, and go to state 227
    "uint"               shift, and go to state 228
    "bitfield"           shift, and go to state 229
    "uint2"              shift, and go to state 230
    "uint3"              shift, and go to state 231
    "uint4"              shift, and go to state 232
    "float"              shift, and go to state 233
    "float2"             shift, and go to state 234
    "float3"             shift, and go to state 235
    "float4"             shift, and go to state 236
    "range"              shift, and go to state 237
    "urange"             shift, and go to state 238
    "range64"            shift, and go to state 239
    "urange64"           shift, and go to state 240
    "block"              shift, and go to state 241
    "int64"              shift, and go to state 242
    "uint64"             shift, and go to state 243
    "double"             shift, and go to state 244
    "function"           shift, and go to state 245
    "lambda"             shift, and go to state 246
    "int8"               shift, and go to state 247
    "uint8"              shift, and go to state 248
    "int16"              shift, and go to state 249
    "uint16"             shift, and go to state 250
    "tuple"              shift, and go to state 251
    "variant"            shift, and go to state 252
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 253
    "name"               shift, and go to state 501
    "end of expression"  shift, and go to state 502
    '$'                  shift, and go to state 254

    $default  reduce using rule 691 ($@65)

    name_in_namespace                   go to state 255
    tuple_type                          go to state 503
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 504
    $@65                                go to state 505


State 371

  494 variant_alias_type_list: variant_alias_type_list . "end of expression"
  495                        | variant_alias_type_list . variant_type "end of expression"
  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list . $@68 "end of code block"

    "name"               shift, and go to state 506
    "end of expression"  shift, and go to state 507

    $default  reduce using rule 695 ($@68)

    variant_type  go to state 508
    $@68          go to state 509


State 372

  175 function_name: "operator" "is" "name" .

    $default  reduce using rule 175 (function_name)


State 373

  176 function_name: "operator" "as" "name" .

    $default  reduce using rule 176 (function_name)


State 374

  169 function_name: "operator" "?." "name" .

    $default  reduce using rule 169 (function_name)


State 375

  164 function_name: "operator" "?[" ']' .

    $default  reduce using rule 164 (function_name)


State 376

  177 function_name: "operator" '?' "as" .
  178              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 510

    $default  reduce using rule 177 (function_name)


State 377

  167 function_name: "operator" '.' "name" .
  168              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 511

    $default  reduce using rule 167 (function_name)


State 378

  163 function_name: "operator" '[' ']' .

    $default  reduce using rule 163 (function_name)


State 379

  480 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 512


State 380

  115 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 115 (optional_function_argument_list)


State 381

  479 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 513
    "var"  shift, and go to state 514

    $default  reduce using rule 264 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 515


State 382

  481 function_argument_list: function_argument_declaration .

    $default  reduce using rule 481 (function_argument_list)


State 383

  116 optional_function_argument_list: '(' function_argument_list . ')'
  482 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 516
    ')'                  shift, and go to state 517


State 384

  118 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 518


State 385

  208 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 208 (function_declaration_header)


State 386

  211 expression_block: "begin of code block" expressions . "end of code block"
  212                 | "begin of code block" expressions . "end of code block" "finally" "begin of code block" expressions "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 519
    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 520
    "if"                              shift, and go to state 521
    "static_if"                       shift, and go to state 522
    "for"                             shift, and go to state 523
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "return"                          shift, and go to state 524
    "null"                            shift, and go to state 408
    "break"                           shift, and go to state 525
    "try"                             shift, and go to state 526
    "table"                           shift, and go to state 409
    "delete"                          shift, and go to state 527
    "deref"                           shift, and go to state 410
    "with"                            shift, and go to state 528
    "assume"                          shift, and go to state 529
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 413
    "continue"                        shift, and go to state 530
    "pass"                            shift, and go to state 531
    "reinterpret"                     shift, and go to state 414
    "label"                           shift, and go to state 532
    "goto"                            shift, and go to state 533
    "unsafe"                          shift, and go to state 534
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "yield"                           shift, and go to state 535
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    "end of code block"               shift, and go to state 536
    "end of expression"               shift, and go to state 537
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder           go to state 448
    expr_reader              go to state 449
    expression_label         go to state 538
    expression_goto          go to state 539
    if_or_static_if          go to state 540
    expression_if_one_liner  go to state 541
    expression_if_then_else  go to state 542
    expression_for_loop      go to state 543
    expression_unsafe        go to state 544
    expression_while_loop    go to state 545
    expression_with          go to state 546
    expression_with_alias    go to state 547
    expr_call_pipe           go to state 450
    expression_any           go to state 548
    name_in_namespace        go to state 451
    expression_delete        go to state 549
    expr_new                 go to state 452
    expression_break         go to state 550
    expression_continue      go to state 551
    expression_return        go to state 552
    expression_yield         go to state 553
    expression_try_catch     go to state 554
    kwd_let                  go to state 555
    expression_let           go to state 556
    expr_cast                go to state 453
    expr_type_decl           go to state 454
    expr_type_info           go to state 455
    block_or_lambda          go to state 456
    expr_full_block          go to state 457
    expr_numeric_const       go to state 458
    expr_assign              go to state 557
    expr_named_call          go to state 459
    expr_method_call         go to state 460
    func_addr_expr           go to state 461
    expr_field               go to state 462
    expr_call                go to state 463
    expr                     go to state 558
    expr_mtag                go to state 465
    basic_type_declaration   go to state 466
    make_decl                go to state 467
    make_struct_decl         go to state 468
    make_tuple_call          go to state 469
    make_dim_decl            go to state 470
    make_table_decl          go to state 471
    array_comprehension      go to state 472


State 387

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 . enum_list optional_comma $@31 "end of code block"

    "name"  shift, and go to state 559

    $default  reduce using rule 530 (enum_list)

    enum_expression  go to state 560
    enum_list        go to state 561


State 388

  549 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 562


State 389

  552 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 552 (structure_name)


State 390

  559 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 472 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 563


State 391

  562 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@32 structure_name $@33 optional_struct_variable_declaration_list .

    $default  reduce using rule 562 (structure_declaration)


State 392

   97 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 97 (metadata_argument_list)


State 393

  514 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 564


State 394

  518 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  519                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 565
    type_declaration_no_options_no_dim  go to state 261


State 395

  507 optional_ref: '&' .

    $default  reduce using rule 507 (optional_ref)


State 396

  520 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 569


State 397

  629 type_declaration_no_options_no_dim: "type" '<' $@36 . type_declaration '>' $@37

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 570


State 398

  652 type_declaration_no_options_no_dim: "array" '<' $@41 . type_declaration '>' $@42

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 571


State 399

  655 type_declaration_no_options_no_dim: "table" '<' $@43 . table_type_pair '>' $@44

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    table_type_pair                     go to state 572
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 573


State 400

  724 make_struct_decl: "struct" . '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 574


State 401

  727 make_struct_decl: "class" . '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 575


State 402

  366 expr: "true" .

    $default  reduce using rule 366 (expr)


State 403

  367 expr: "false" .

    $default  reduce using rule 367 (expr)


State 404

  249 expr_new: "new" . structure_type_declaration
  250         | "new" . structure_type_declaration '(' optional_expr_list ')'
  251         | "new" . new_type_declaration '(' use_initializer ')'
  252         | "new" . new_type_declaration '(' use_initializer make_struct_single ')'
  253         | "new" . make_decl

    "struct"               shift, and go to state 400
    "class"                shift, and go to state 401
    "array"                shift, and go to state 407
    "table"                shift, and go to state 409
    "fixed_array"          shift, and go to state 415
    "default"              shift, and go to state 416
    "tuple"                shift, and go to state 418
    "variant"              shift, and go to state 419
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 438
    '<'                    shift, and go to state 576
    '['                    shift, and go to state 444

    name_in_namespace           go to state 255
    new_type_declaration        go to state 577
    structure_type_declaration  go to state 578
    make_decl                   go to state 579
    make_struct_decl            go to state 468
    make_tuple_call             go to state 469
    make_dim_decl               go to state 470
    make_table_decl             go to state 471
    array_comprehension         go to state 472


State 405

  287 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  288               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  289               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 580


State 406

  286 expr_type_decl: "type" . '<' $@11 type_declaration '>' $@12

    '<'  shift, and go to state 581


State 407

  743 make_dim_decl: "array" . "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'
  746              | "array" . "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'
  749              | "array" . "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'
  750              | "array" . '(' expr_list optional_comma ')'
  753              | "array" . '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "struct"   shift, and go to state 582
    "tuple"    shift, and go to state 583
    "variant"  shift, and go to state 584
    '<'        shift, and go to state 585
    '('        shift, and go to state 586


State 408

  360 expr: "null" .

    $default  reduce using rule 360 (expr)


State 409

  761 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  762                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  763                | "table" . '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 587
    '('  shift, and go to state 588


State 410

  410 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 589


State 411

  277 expr_cast: "cast" . '<' $@5 type_declaration_no_options '>' $@6 expr

    '<'  shift, and go to state 590


State 412

  280 expr_cast: "upcast" . '<' $@7 type_declaration_no_options '>' $@8 expr

    '<'  shift, and go to state 591


State 413

  411 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 592


State 414

  283 expr_cast: "reinterpret" . '<' $@9 type_declaration_no_options '>' $@10 expr

    '<'  shift, and go to state 593


State 415

  754 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  757              | "fixed_array" . '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 594
    '('  shift, and go to state 595


State 416

  733 make_struct_decl: "default" . '<' $@78 type_declaration_no_options '>' $@79 use_initializer

    '<'  shift, and go to state 596


State 417

  594 basic_type_declaration: "bitfield" .

    $default  reduce using rule 594 (basic_type_declaration)


State 418

  736 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  739                | "tuple" . '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 597
    '('  shift, and go to state 598


State 419

  730 make_struct_decl: "variant" . '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    '<'  shift, and go to state 599


State 420

  412 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" . '<' type_declaration_no_options '>' optional_capture_list expression_block

    '<'  shift, and go to state 600


State 421

  396 expr: "++" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 601
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 422

  397 expr: "--" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 602
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 423

  443 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 603


State 424

  444 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 604


State 425

  445 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 605


State 426

  446 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 606


State 427

  447 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 607


State 428

  449 expr_mtag: "$c" . '(' expr ')' '(' ')'
  450          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 608


State 429

  448 expr_mtag: "..." .

    $default  reduce using rule 448 (expr_mtag)


State 430

  309 expr_numeric_const: "integer constant" .

    $default  reduce using rule 309 (expr_numeric_const)


State 431

  311 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 311 (expr_numeric_const)


State 432

  310 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 310 (expr_numeric_const)


State 433

  312 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 312 (expr_numeric_const)


State 434

  313 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 313 (expr_numeric_const)


State 435

  314 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 314 (expr_numeric_const)


State 436

  315 expr_numeric_const: "double constant" .

    $default  reduce using rule 315 (expr_numeric_const)


State 437

   31 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 28 (string_builder_body)

    string_builder_body  go to state 609


State 438

  760 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  770 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "for"                             shift, and go to state 610
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 611
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_map_tuple          go to state 612
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    expr_map_tuple_list     go to state 613
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 439

  373 expr: '-' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 614
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 440

  372 expr: '+' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 615
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 441

  409 expr: '*' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 616
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 442

  371 expr: '~' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 617
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 443

  370 expr: '!' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 618
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 444

  740 make_dim_decl: '[' . expr_list optional_comma ']'
  768 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  769                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "for"                             shift, and go to state 619
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "iterator"                        shift, and go to state 620
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 621
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 445

  400 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 623
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 446

  295 block_or_lambda: '$' .

    $default  reduce using rule 295 (block_or_lambda)


State 447

  296 block_or_lambda: '@' .
  297                | '@' . '@'
  341 func_addr_expr: '@' . '@' func_addr_name
  344               | '@' . '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' . '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  458 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 624

    $default  reduce using rule 296 (block_or_lambda)


State 448

  364 expr: string_builder .

    $default  reduce using rule 364 (expr)


State 449

  363 expr: expr_reader .

    $default  reduce using rule 363 (expr)


State 450

  442 expr: expr_call_pipe .

    $default  reduce using rule 442 (expr)


State 451

  335 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  336                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace . '(' ')'
  356          | name_in_namespace . '(' make_struct_single ')'
  357          | name_in_namespace . '(' expr_list ')'
  361 expr: name_in_namespace .

    '('  shift, and go to state 625

    $default  reduce using rule 361 (expr)


State 452

  435 expr: expr_new .

    $default  reduce using rule 435 (expr)


State 453

  434 expr: expr_cast .

    $default  reduce using rule 434 (expr)


State 454

  433 expr: expr_type_decl .

    $default  reduce using rule 433 (expr)


State 455

  432 expr: expr_type_info .

    $default  reduce using rule 432 (expr)


State 456

  306 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 626


State 457

  438 expr: expr_full_block .

    $default  reduce using rule 438 (expr)


State 458

  362 expr: expr_numeric_const .

    $default  reduce using rule 362 (expr)


State 459

  437 expr: expr_named_call .

    $default  reduce using rule 437 (expr)


State 460

  436 expr: expr_method_call .

    $default  reduce using rule 436 (expr)


State 461

  407 expr: func_addr_expr .

    $default  reduce using rule 407 (expr)


State 462

  368 expr: expr_field .

    $default  reduce using rule 368 (expr)


State 463

  213 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  408 expr: expr_call .

    "begin of code block"  shift, and go to state 627
    '$'                    shift, and go to state 446
    '@'                    shift, and go to state 628

    $default  reduce using rule 408 (expr)

    block_or_lambda                go to state 629
    expr_full_block_assumed_piped  go to state 630


State 464

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  630 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 666


State 465

  369 expr: expr_mtag .

    $default  reduce using rule 369 (expr)


State 466

  358 expr_call: basic_type_declaration . '(' ')'
  359          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 667


State 467

  365 expr: make_decl .

    $default  reduce using rule 365 (expr)


State 468

  701 make_decl: make_struct_decl .

    $default  reduce using rule 701 (make_decl)


State 469

  705 make_decl: make_tuple_call .

    $default  reduce using rule 705 (make_decl)


State 470

  702 make_decl: make_dim_decl .

    $default  reduce using rule 702 (make_decl)


State 471

  703 make_decl: make_table_decl .

    $default  reduce using rule 703 (make_decl)


State 472

  704 make_decl: array_comprehension .

    $default  reduce using rule 704 (make_decl)


State 473

  658 type_declaration_no_options_no_dim: "iterator" '<' $@45 . type_declaration '>' $@46

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 668


State 474

  648 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 . type_declaration '>' $@40

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 669


State 475

  605 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 670


State 476

  614 bitfield_type_declaration: "bitfield" '<' $@34 . bitfield_bits '>' $@35

    "name"  shift, and go to state 671

    bitfield_bits  go to state 672


State 477

  662 type_declaration_no_options_no_dim: "block" '<' $@47 . type_declaration '>' $@48

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 673


State 478

  665 type_declaration_no_options_no_dim: "block" '<' $@49 . optional_function_argument_list optional_function_type '>' $@50

    '('  shift, and go to state 319

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 674


State 479

  669 type_declaration_no_options_no_dim: "function" '<' $@51 . type_declaration '>' $@52

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 675


State 480

  672 type_declaration_no_options_no_dim: "function" '<' $@53 . optional_function_argument_list optional_function_type '>' $@54

    '('  shift, and go to state 319

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 676


State 481

  676 type_declaration_no_options_no_dim: "lambda" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 677


State 482

  679 type_declaration_no_options_no_dim: "lambda" '<' $@57 . optional_function_argument_list optional_function_type '>' $@58

    '('  shift, and go to state 319

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 678


State 483

  682 type_declaration_no_options_no_dim: "tuple" '<' $@59 . tuple_type_list '>' $@60

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 501
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    tuple_type                          go to state 679
    tuple_type_list                     go to state 680
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 504


State 484

  685 type_declaration_no_options_no_dim: "variant" '<' $@61 . variant_type_list '>' $@62

    "name"  shift, and go to state 506

    variant_type       go to state 681
    variant_type_list  go to state 682


State 485

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  606 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 683


State 486

  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 632 ($@38)

    $@38  go to state 684


State 487

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    optional_expr_list      go to state 685
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 686
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 488

  643 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 643 (type_declaration_no_options_no_dim)


State 489

  644 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 644 (type_declaration_no_options_no_dim)


State 490

  637 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 637 (type_declaration_no_options_no_dim)


State 491

  639 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 639 (type_declaration_no_options_no_dim)


State 492

  634 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 687


State 493

  642 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 642 (type_declaration_no_options_no_dim)


State 494

  618 dim_list: '[' ']' .

    $default  reduce using rule 618 (dim_list)


State 495

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  617 dim_list: '[' expr . ']'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 688


State 496

  619 dim_list: dim_list '[' . expr ']'
  620         | dim_list '[' . ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    ']'                               shift, and go to state 689
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 690
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 497

  688 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 688 (type_declaration)


State 498

  687 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 687 (type_declaration)


State 499

  611 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  767 optional_comma: ',' .

    "name"  shift, and go to state 691

    $default  reduce using rule 767 (optional_comma)


State 500

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma . $@71 "end of code block"

    $default  reduce using rule 699 ($@71)

    $@71  go to state 692


State 501

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"
  484 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 93
    ':'   shift, and go to state 693

    $default  reduce using rule 241 (name_in_namespace)


State 502

  488 tuple_alias_type_list: tuple_alias_type_list "end of expression" .

    $default  reduce using rule 488 (tuple_alias_type_list)


State 503

  489 tuple_alias_type_list: tuple_alias_type_list tuple_type . "end of expression"

    "end of expression"  shift, and go to state 694


State 504

  483 tuple_type: type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 483 (tuple_type)


State 505

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 . "end of code block"

    "end of code block"  shift, and go to state 695


State 506

  490 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 696


State 507

  494 variant_alias_type_list: variant_alias_type_list "end of expression" .

    $default  reduce using rule 494 (variant_alias_type_list)


State 508

  495 variant_alias_type_list: variant_alias_type_list variant_type . "end of expression"

    "end of expression"  shift, and go to state 697


State 509

  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 . "end of code block"

    "end of code block"  shift, and go to state 698


State 510

  178 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 178 (function_name)


State 511

  168 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 168 (function_name)


State 512

  480 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 699
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 513

  262 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 262 (kwd_let_var_or_nothing)


State 514

  263 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 263 (kwd_let_var_or_nothing)


State 515

  479 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_declaration         go to state 702
    variable_name_with_pos_list  go to state 703


State 516

  482 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 379
    '@'   shift, and go to state 206

    $default  reduce using rule 459 (optional_field_annotation)

    metadata_argument_list         go to state 207
    optional_field_annotation      go to state 381
    function_argument_declaration  go to state 704


State 517

  116 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 116 (optional_function_argument_list)


State 518

  118 optional_function_type: ':' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 118 (optional_function_type)


State 519

  234 expressions: expressions error .

    $default  reduce using rule 234 (expressions)


State 520

   72 expression_while_loop: "while" . '(' expr ')' expression_block

    '('  shift, and go to state 705


State 521

   59 if_or_static_if: "if" .

    $default  reduce using rule 59 (if_or_static_if)


State 522

   60 if_or_static_if: "static_if" .

    $default  reduce using rule 60 (if_or_static_if)


State 523

   70 expression_for_loop: "for" . '(' variable_name_with_pos_list "in" expr_list ')' expression_block

    '('  shift, and go to state 706


State 524

  256 expression_return: "return" .
  257                  | "return" . expr
  258                  | "return" . "<-" expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "<-"                              shift, and go to state 707
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 256 (expression_return)

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 708
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 525

  254 expression_break: "break" .

    $default  reduce using rule 254 (expression_break)


State 526

  261 expression_try_catch: "try" . expression_block "recover" expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 709


State 527

  244 expression_delete: "delete" . expr
  245                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "explicit"                        shift, and go to state 710
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 711
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 528

   73 expression_with: "with" . '(' expr ')' expression_block

    '('  shift, and go to state 712


State 529

   74 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 713


State 530

  255 expression_continue: "continue" .

    $default  reduce using rule 255 (expression_continue)


State 531

  231 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 714


State 532

   51 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 715


State 533

   52 expression_goto: "goto" . "label" "integer constant"
   53                | "goto" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "label"                           shift, and go to state 716
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 717
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 534

   71 expression_unsafe: "unsafe" . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 718


State 535

  259 expression_yield: "yield" . expr
  260                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "<-"                              shift, and go to state 719
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 720
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 536

  211 expression_block: "begin of code block" expressions "end of code block" .
  212                 | "begin of code block" expressions "end of code block" . "finally" "begin of code block" expressions "end of code block"

    "finally"  shift, and go to state 721

    $default  reduce using rule 211 (expression_block)


State 537

  214 expression_any: "end of expression" .

    $default  reduce using rule 214 (expression_any)


State 538

  229 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 722


State 539

  230 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 723


State 540

   68 expression_if_then_else: if_or_static_if . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 724


State 541

   69 expression_if_then_else: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 725


State 542

  227 expression_any: expression_if_then_else .

    $default  reduce using rule 227 (expression_any)


State 543

  222 expression_any: expression_for_loop .

    $default  reduce using rule 222 (expression_any)


State 544

  219 expression_any: expression_unsafe .

    $default  reduce using rule 219 (expression_any)


State 545

  218 expression_any: expression_while_loop .

    $default  reduce using rule 218 (expression_any)


State 546

  220 expression_any: expression_with .

    $default  reduce using rule 220 (expression_any)


State 547

  221 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 726


State 548

  233 expressions: expressions expression_any .

    $default  reduce using rule 233 (expressions)


State 549

  216 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 727


State 550

   66 expression_if_one_liner: expression_break .
  223 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 728

    $default  reduce using rule 66 (expression_if_one_liner)


State 551

   67 expression_if_one_liner: expression_continue .
  224 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 729

    $default  reduce using rule 67 (expression_if_one_liner)


State 552

   64 expression_if_one_liner: expression_return .
  225 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 730

    $default  reduce using rule 64 (expression_if_one_liner)


State 553

   65 expression_if_one_liner: expression_yield .
  226 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 731

    $default  reduce using rule 65 (expression_if_one_liner)


State 554

  228 expression_any: expression_try_catch .

    $default  reduce using rule 228 (expression_any)


State 555

  273 expression_let: kwd_let . optional_in_scope let_variable_declaration
  274               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 732

    $default  reduce using rule 268 (optional_in_scope)

    optional_in_scope  go to state 733


State 556

  217 expression_any: expression_let .

    $default  reduce using rule 217 (expression_any)


State 557

  215 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 734


State 558

   63 expression_if_one_liner: expr .
  316 expr_assign: expr .
  317            | expr . '=' expr
  318            | expr . "<-" expr
  319            | expr . ":=" expr
  320            | expr . "&=" expr
  321            | expr . "|=" expr
  322            | expr . "^=" expr
  323            | expr . "&&=" expr
  324            | expr . "||=" expr
  325            | expr . "^^=" expr
  326            | expr . "+=" expr
  327            | expr . "-=" expr
  328            | expr . "*=" expr
  329            | expr . "/=" expr
  330            | expr . "%=" expr
  331            | expr . "<<=" expr
  332            | expr . ">>=" expr
  333            | expr . "<<<=" expr
  334            | expr . ">>>=" expr
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 631
    "as"    shift, and go to state 632
    "+="    shift, and go to state 735
    "-="    shift, and go to state 736
    "/="    shift, and go to state 737
    "*="    shift, and go to state 738
    "%="    shift, and go to state 739
    "&="    shift, and go to state 740
    "|="    shift, and go to state 741
    "^="    shift, and go to state 742
    "<<"    shift, and go to state 633
    ">>"    shift, and go to state 634
    "++"    shift, and go to state 635
    "--"    shift, and go to state 636
    "<="    shift, and go to state 637
    "<<="   shift, and go to state 743
    ">>="   shift, and go to state 744
    ">="    shift, and go to state 638
    "=="    shift, and go to state 639
    "!="    shift, and go to state 640
    "->"    shift, and go to state 641
    "<-"    shift, and go to state 745
    "??"    shift, and go to state 642
    "?."    shift, and go to state 643
    "?["    shift, and go to state 644
    "<|"    shift, and go to state 645
    "|>"    shift, and go to state 646
    ":="    shift, and go to state 746
    "<<<"   shift, and go to state 647
    ">>>"   shift, and go to state 648
    "<<<="  shift, and go to state 747
    ">>>="  shift, and go to state 748
    "&&"    shift, and go to state 649
    "||"    shift, and go to state 650
    "^^"    shift, and go to state 651
    "&&="   shift, and go to state 749
    "||="   shift, and go to state 750
    "^^="   shift, and go to state 751
    ".."    shift, and go to state 652
    '='     shift, and go to state 752
    '?'     shift, and go to state 653
    '|'     shift, and go to state 654
    '^'     shift, and go to state 655
    '&'     shift, and go to state 656
    '<'     shift, and go to state 657
    '>'     shift, and go to state 658
    '-'     shift, and go to state 659
    '+'     shift, and go to state 660
    '*'     shift, and go to state 661
    '/'     shift, and go to state 662
    '%'     shift, and go to state 663
    '.'     shift, and go to state 664
    '['     shift, and go to state 665

    "end of expression"  reduce using rule 316 (expr_assign)
    $default             reduce using rule 63 (expression_if_one_liner)


State 559

  528 enum_expression: "name" .
  529                | "name" . '=' expr

    '='  shift, and go to state 753

    $default  reduce using rule 528 (enum_expression)


State 560

  531 enum_list: enum_expression .

    $default  reduce using rule 531 (enum_list)


State 561

  532 enum_list: enum_list . ',' enum_expression
  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list . optional_comma $@31 "end of code block"

    ','  shift, and go to state 754

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 755


State 562

  549 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 549 (optional_structure_parent)


State 563

  474 struct_variable_declaration_list: struct_variable_declaration_list . $@25 structure_variable_declaration "end of expression"
  476                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  478                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block
  559 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 756
    '['                  shift, and go to state 15

    "def"     reduce using rule 112 (optional_annotation_list)
    $default  reduce using rule 473 ($@25)

    optional_annotation_list  go to state 757
    $@25                      go to state 758


State 564

  514 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 514 (global_let_variable_name_with_pos_list)


State 565

  518 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  519                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 566
    ":="                 shift, and go to state 567
    "end of expression"  shift, and go to state 759
    '='                  shift, and go to state 568

    copy_or_move_or_clone  go to state 760


State 566

  504 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 504 (copy_or_move_or_clone)


State 567

  505 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 505 (copy_or_move_or_clone)


State 568

  503 copy_or_move_or_clone: '=' .

    $default  reduce using rule 503 (copy_or_move_or_clone)


State 569

  520 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 761
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 570

  629 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration . '>' $@37
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 762


State 571

  652 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration . '>' $@42
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 763


State 572

  655 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair . '>' $@44

    '>'  shift, and go to state 764


State 573

  615 table_type_pair: type_declaration .
  616                | type_declaration . "end of expression" type_declaration
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 765
    '|'                  shift, and go to state 367

    $default  reduce using rule 615 (table_type_pair)


State 574

  724 make_struct_decl: "struct" '<' . $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 722 ($@72)

    $@72  go to state 766


State 575

  727 make_struct_decl: "class" '<' . $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 725 ($@74)

    $@74  go to state 767


State 576

  248 new_type_declaration: '<' . $@3 type_declaration '>' $@4

    $default  reduce using rule 246 ($@3)

    $@3  go to state 768


State 577

  251 expr_new: "new" new_type_declaration . '(' use_initializer ')'
  252         | "new" new_type_declaration . '(' use_initializer make_struct_single ')'

    '('  shift, and go to state 769


State 578

  249 expr_new: "new" structure_type_declaration .
  250         | "new" structure_type_declaration . '(' optional_expr_list ')'

    '('  shift, and go to state 770

    $default  reduce using rule 249 (expr_new)


State 579

  253 expr_new: "new" make_decl .

    $default  reduce using rule 253 (expr_new)


State 580

  287 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  288               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 771
    '('  shift, and go to state 772


State 581

  286 expr_type_decl: "type" '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 284 ($@11)

    $@11  go to state 773


State 582

  743 make_dim_decl: "array" "struct" . '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 774


State 583

  746 make_dim_decl: "array" "tuple" . '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    '<'  shift, and go to state 775


State 584

  749 make_dim_decl: "array" "variant" . '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    '<'  shift, and go to state 776


State 585

  753 make_dim_decl: "array" '<' . $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    $default  reduce using rule 751 ($@88)

    $@88  go to state 777


State 586

  750 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 778
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 587

  762 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  763                | "table" '<' . type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 779
    type_declaration_no_options_no_dim  go to state 261


State 588

  761 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 611
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_map_tuple          go to state 612
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    expr_map_tuple_list     go to state 780
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 589

  410 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 781
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 590

  277 expr_cast: "cast" '<' . $@5 type_declaration_no_options '>' $@6 expr

    $default  reduce using rule 275 ($@5)

    $@5  go to state 782


State 591

  280 expr_cast: "upcast" '<' . $@7 type_declaration_no_options '>' $@8 expr

    $default  reduce using rule 278 ($@7)

    $@7  go to state 783


State 592

  411 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 784
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 593

  283 expr_cast: "reinterpret" '<' . $@9 type_declaration_no_options '>' $@10 expr

    $default  reduce using rule 281 ($@9)

    $@9  go to state 785


State 594

  757 make_dim_decl: "fixed_array" '<' . $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 755 ($@90)

    $@90  go to state 786


State 595

  754 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 787
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 596

  733 make_struct_decl: "default" '<' . $@78 type_declaration_no_options '>' $@79 use_initializer

    $default  reduce using rule 731 ($@78)

    $@78  go to state 788


State 597

  739 make_tuple_call: "tuple" '<' . $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 737 ($@80)

    $@80  go to state 789


State 598

  736 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 790
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 599

  730 make_struct_decl: "variant" '<' . $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    $default  reduce using rule 728 ($@76)

    $@76  go to state 791


State 600

  412 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  413     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' . type_declaration_no_options '>' optional_capture_list expression_block

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 792
    type_declaration_no_options_no_dim  go to state 261


State 601

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  396     | "++" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 396 (expr)


State 602

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  397     | "--" expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 397 (expr)


State 603

  443 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 793
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 604

  444 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 794
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 605

  445 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 795
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 606

  446 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 796
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 607

  447 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 797
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 608

  449 expr_mtag: "$c" '(' . expr ')' '(' ')'
  450          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 798
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 609

   29 string_builder_body: string_builder_body . character_sequence
   30                    | string_builder_body . "{" expr "}"
   31 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 152
    STRING_CHARACTER_ESC  shift, and go to state 153
    "end of the string"   shift, and go to state 799
    "{"                   shift, and go to state 800

    character_sequence  go to state 801


State 610

  770 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_name_with_pos_list  go to state 802


State 611

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  734 make_map_tuple: expr . "=>" expr
  735               | expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "=>"   shift, and go to state 803
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 735 (make_map_tuple)


State 612

  758 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 758 (expr_map_tuple_list)


State 613

  759 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  760 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 804

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 805


State 614

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  373 expr: '-' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 373 (expr)


State 615

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  372 expr: '+' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 372 (expr)


State 616

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  409     | '*' expr .
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 409 (expr)


State 617

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  371 expr: '~' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 371 (expr)


State 618

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  370 expr: '!' expr .
  374     | expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 370 (expr)


State 619

  768 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_name_with_pos_list  go to state 806


State 620

  769 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 807


State 621

  291 expr_list: expr_list . ',' expr
  740 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 808

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 809


State 622

  290 expr_list: expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 290 (expr_list)


State 623

  291 expr_list: expr_list . ',' expr
  400 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 808

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 810


State 624

  297 block_or_lambda: '@' '@' .
  341 func_addr_expr: '@' '@' . func_addr_name
  344               | '@' '@' . '<' $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' '@' . '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name
  458 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 811
    "$c"    shift, and go to state 812
    "name"  shift, and go to state 56
    '<'     shift, and go to state 813

    $default  reduce using rule 297 (block_or_lambda)

    name_in_namespace  go to state 814
    func_addr_name     go to state 815


State 625

  335 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  336                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  355 expr_call: name_in_namespace '(' . ')'
  356          | name_in_namespace '(' . make_struct_single ')'
  357          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "$f"                              shift, and go to state 816
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 817
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 818
    '('                               shift, and go to state 445
    ')'                               shift, and go to state 819
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 820
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_fields      go to state 821
    make_struct_single      go to state 822
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 626

  306 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 823

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 824


State 627

  308 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 825


State 628

  296 block_or_lambda: '@' .
  297                | '@' . '@'

    '@'  shift, and go to state 826

    $default  reduce using rule 296 (block_or_lambda)


State 629

  307 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 112 (optional_annotation_list)

    optional_annotation_list  go to state 827


State 630

  213 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 213 (expr_call_pipe)


State 631

  419 expr: expr "is" . "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr "is" . basic_type_declaration
  421     | expr "is" . "name"
  457 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 828
    "bool"      shift, and go to state 220
    "void"      shift, and go to state 221
    "string"    shift, and go to state 222
    "int"       shift, and go to state 224
    "int2"      shift, and go to state 225
    "int3"      shift, and go to state 226
    "int4"      shift, and go to state 227
    "uint"      shift, and go to state 228
    "bitfield"  shift, and go to state 417
    "uint2"     shift, and go to state 230
    "uint3"     shift, and go to state 231
    "uint4"     shift, and go to state 232
    "float"     shift, and go to state 233
    "float2"    shift, and go to state 234
    "float3"    shift, and go to state 235
    "float4"    shift, and go to state 236
    "range"     shift, and go to state 237
    "urange"    shift, and go to state 238
    "range64"   shift, and go to state 239
    "urange64"  shift, and go to state 240
    "int64"     shift, and go to state 242
    "uint64"    shift, and go to state 243
    "double"    shift, and go to state 244
    "int8"      shift, and go to state 247
    "uint8"     shift, and go to state 248
    "int16"     shift, and go to state 249
    "uint16"    shift, and go to state 250
    "$f"        shift, and go to state 829
    "name"      shift, and go to state 830

    basic_type_declaration  go to state 831


State 632

  422 expr: expr "as" . "name"
  425     | expr "as" . "type" '<' $@21 type_declaration '>' $@22
  426     | expr "as" . basic_type_declaration
  455 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 832
    "bool"      shift, and go to state 220
    "void"      shift, and go to state 221
    "string"    shift, and go to state 222
    "int"       shift, and go to state 224
    "int2"      shift, and go to state 225
    "int3"      shift, and go to state 226
    "int4"      shift, and go to state 227
    "uint"      shift, and go to state 228
    "bitfield"  shift, and go to state 417
    "uint2"     shift, and go to state 230
    "uint3"     shift, and go to state 231
    "uint4"     shift, and go to state 232
    "float"     shift, and go to state 233
    "float2"    shift, and go to state 234
    "float3"    shift, and go to state 235
    "float4"    shift, and go to state 236
    "range"     shift, and go to state 237
    "urange"    shift, and go to state 238
    "range64"   shift, and go to state 239
    "urange64"  shift, and go to state 240
    "int64"     shift, and go to state 242
    "uint64"    shift, and go to state 243
    "double"    shift, and go to state 244
    "int8"      shift, and go to state 247
    "uint8"     shift, and go to state 248
    "int16"     shift, and go to state 249
    "uint16"    shift, and go to state 250
    "$f"        shift, and go to state 833
    "name"      shift, and go to state 834

    basic_type_declaration  go to state 835


State 633

  374 expr: expr "<<" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 836
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 634

  375 expr: expr ">>" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 837
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 635

  398 expr: expr "++" .

    $default  reduce using rule 398 (expr)


State 636

  399 expr: expr "--" .

    $default  reduce using rule 399 (expr)


State 637

  387 expr: expr "<=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 838
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 638

  388 expr: expr ">=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 839
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 639

  385 expr: expr "==" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 840
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 640

  386 expr: expr "!=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 841
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 641

  337 expr_method_call: expr "->" . "name" '(' ')'
  338                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 842


State 642

  415 expr: expr "??" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 843
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 643

  405 expr: expr "?." . "name"
  452 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 844
    "name"  shift, and go to state 845


State 644

  403 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 846
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 645

  439 expr: expr "<|" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 847
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 646

  440 expr: expr "|>" . expr
  441     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 848
    expr_mtag               go to state 465
    basic_type_declaration  go to state 849
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 647

  376 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 850
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 648

  377 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 851
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 649

  392 expr: expr "&&" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 852
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 650

  393 expr: expr "||" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 853
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 651

  394 expr: expr "^^" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 854
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 652

  395 expr: expr ".." . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 855
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 653

  416 expr: expr '?' . expr ':' expr
  427     | expr '?' . "as" "name"
  430     | expr '?' . "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' . "as" basic_type_declaration
  456 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "as"                              shift, and go to state 856
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 857
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 654

  390 expr: expr '|' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 858
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 655

  391 expr: expr '^' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 859
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 656

  389 expr: expr '&' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 860
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 657

  383 expr: expr '<' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 861
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 658

  384 expr: expr '>' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 862
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 659

  379 expr: expr '-' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 863
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 660

  378 expr: expr '+' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 864
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 661

  380 expr: expr '*' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 865
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 662

  381 expr: expr '/' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 866
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 663

  382 expr: expr '%' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 867
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 664

  348 expr_field: expr '.' . "name"
  349           | expr '.' . '.' "name"
  350           | expr '.' . "name" '(' ')'
  351           | expr '.' . "name" '(' expr_list ')'
  354           | expr '.' . $@17 error $@18
  402 expr: expr '.' . '[' expr ']'
  404     | expr '.' . "?[" expr ']'
  406     | expr '.' . "?." "name"
  451 expr_mtag: expr '.' . "$f" '(' expr ')'
  453          | expr '.' . '.' "$f" '(' expr ')'
  454          | expr '.' . "?." "$f" '(' expr ')'

    "?."    shift, and go to state 868
    "?["    shift, and go to state 869
    "$f"    shift, and go to state 870
    "name"  shift, and go to state 871
    '.'     shift, and go to state 872
    '['     shift, and go to state 873

    $default  reduce using rule 352 ($@17)

    $@17  go to state 874


State 665

  401 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 875
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 666

  630 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 630 (type_declaration_no_options_no_dim)


State 667

  358 expr_call: basic_type_declaration '(' . ')'
  359          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    ')'                               shift, and go to state 876
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 877
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 668

  658 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration . '>' $@46
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 878


State 669

  648 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration . '>' $@40
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 879


State 670

  605 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 605 (auto_type_declaration)


State 671

  607 bitfield_bits: "name" .

    $default  reduce using rule 607 (bitfield_bits)


State 672

  608 bitfield_bits: bitfield_bits . "end of expression" "name"
  614 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits . '>' $@35

    "end of expression"  shift, and go to state 880
    '>'                  shift, and go to state 881


State 673

  662 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration . '>' $@48
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 882


State 674

  665 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list . optional_function_type '>' $@50

    ':'  shift, and go to state 384

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 883


State 675

  669 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration . '>' $@52
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 884


State 676

  672 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list . optional_function_type '>' $@54

    ':'  shift, and go to state 384

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 885


State 677

  676 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration . '>' $@56
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 886


State 678

  679 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list . optional_function_type '>' $@58

    ':'  shift, and go to state 384

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 887


State 679

  485 tuple_type_list: tuple_type .

    $default  reduce using rule 485 (tuple_type_list)


State 680

  486 tuple_type_list: tuple_type_list . "end of expression" tuple_type
  682 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list . '>' $@60

    "end of expression"  shift, and go to state 888
    '>'                  shift, and go to state 889


State 681

  491 variant_type_list: variant_type .

    $default  reduce using rule 491 (variant_type_list)


State 682

  492 variant_type_list: variant_type_list . "end of expression" variant_type
  685 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list . '>' $@62

    "end of expression"  shift, and go to state 890
    '>'                  shift, and go to state 891


State 683

  606 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 606 (auto_type_declaration)


State 684

  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    type_declaration_no_options_list    go to state 892
    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 893


State 685

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 894


State 686

  236 optional_expr_list: expr_list . optional_comma
  291 expr_list: expr_list . ',' expr

    ','  shift, and go to state 808

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 895


State 687

  634 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 634 (type_declaration_no_options_no_dim)


State 688

  617 dim_list: '[' expr ']' .

    $default  reduce using rule 617 (dim_list)


State 689

  620 dim_list: dim_list '[' ']' .

    $default  reduce using rule 620 (dim_list)


State 690

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  619 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 896


State 691

  611 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 611 (bitfield_alias_bits)


State 692

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 . "end of code block"

    "end of code block"  shift, and go to state 897


State 693

  484 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 898


State 694

  489 tuple_alias_type_list: tuple_alias_type_list tuple_type "end of expression" .

    $default  reduce using rule 489 (tuple_alias_type_list)


State 695

  692 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@63 "begin of code block" $@64 tuple_alias_type_list $@65 "end of code block" .

    $default  reduce using rule 692 (tuple_alias_declaration)


State 696

  490 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 899


State 697

  495 variant_alias_type_list: variant_alias_type_list variant_type "end of expression" .

    $default  reduce using rule 495 (variant_alias_type_list)


State 698

  696 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@66 "begin of code block" $@67 variant_alias_type_list $@68 "end of code block" .

    $default  reduce using rule 696 (variant_alias_declaration)


State 699

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  480 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 900


State 700

  564 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 901


State 701

  563 variable_name_with_pos_list: "name" .
  565                            | "name" . "aka" "name"

    "aka"  shift, and go to state 902

    $default  reduce using rule 563 (variable_name_with_pos_list)


State 702

  479 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 479 (function_argument_declaration)


State 703

  498 variable_declaration: variable_name_with_pos_list .
  499                     | variable_name_with_pos_list . '&'
  500                     | variable_name_with_pos_list . ':' type_declaration
  501                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  502                     | variable_name_with_pos_list . copy_or_move expr
  566 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  567                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 903
    ','   shift, and go to state 904
    '='   shift, and go to state 905
    ':'   shift, and go to state 906
    '&'   shift, and go to state 907

    $default  reduce using rule 498 (variable_declaration)

    copy_or_move  go to state 908


State 704

  482 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 482 (function_argument_list)


State 705

   72 expression_while_loop: "while" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 909
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 706

   70 expression_for_loop: "for" '(' . variable_name_with_pos_list "in" expr_list ')' expression_block

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_name_with_pos_list  go to state 910


State 707

  258 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 911
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 708

  257 expression_return: "return" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 257 (expression_return)


State 709

  261 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 912


State 710

  245 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 913
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 711

  244 expression_delete: "delete" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 244 (expression_delete)


State 712

   73 expression_with: "with" '(' . expr ')' expression_block

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 914
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 713

   74 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 915


State 714

  231 expression_any: "pass" "end of expression" .

    $default  reduce using rule 231 (expression_any)


State 715

   51 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 916


State 716

   52 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 917


State 717

   53 expression_goto: "goto" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 53 (expression_goto)


State 718

   71 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 71 (expression_unsafe)


State 719

  260 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 918
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 720

  259 expression_yield: "yield" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 259 (expression_yield)


State 721

  212 expression_block: "begin of code block" expressions "end of code block" "finally" . "begin of code block" expressions "end of code block"

    "begin of code block"  shift, and go to state 919


State 722

  229 expression_any: expression_label "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 723

  230 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 724

   68 expression_if_then_else: if_or_static_if '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 920
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 725

   69 expression_if_then_else: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 921


State 726

  221 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 221 (expression_any)


State 727

  216 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 216 (expression_any)


State 728

  223 expression_any: expression_break "end of expression" .

    $default  reduce using rule 223 (expression_any)


State 729

  224 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 224 (expression_any)


State 730

  225 expression_any: expression_return "end of expression" .

    $default  reduce using rule 225 (expression_any)


State 731

  226 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 226 (expression_any)


State 732

  267 optional_in_scope: "inscope" .

    $default  reduce using rule 267 (optional_in_scope)


State 733

  273 expression_let: kwd_let optional_in_scope . let_variable_declaration
  274               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 922
    "name"  shift, and go to state 923
    '('     shift, and go to state 924

    tuple_expansion_variable_declaration  go to state 925
    let_variable_name_with_pos_list       go to state 926
    let_variable_declaration              go to state 927


State 734

  215 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 215 (expression_any)


State 735

  326 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 928
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 736

  327 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 929
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 737

  329 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 930
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 738

  328 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 931
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 739

  330 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 932
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 740

  320 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 933
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 741

  321 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 934
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 742

  322 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 935
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 743

  331 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 936
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 744

  332 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 937
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 745

  318 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 938
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 746

  319 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 939
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 747

  333 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 940
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 748

  334 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 941
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 749

  323 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 942
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 750

  324 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 943
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 751

  325 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 944
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 752

  317 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 945
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 753

  529 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 946
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 754

  532 enum_list: enum_list ',' . enum_expression
  767 optional_comma: ',' .

    "name"  shift, and go to state 559

    $default  reduce using rule 767 (optional_comma)

    enum_expression  go to state 947


State 755

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma . $@31 "end of code block"

    $default  reduce using rule 546 ($@31)

    $@31  go to state 948


State 756

  559 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 559 (optional_struct_variable_declaration_list)


State 757

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  478                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "def"  shift, and go to state 949


State 758

  474 struct_variable_declaration_list: struct_variable_declaration_list $@25 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 206

    $default  reduce using rule 459 (optional_field_annotation)

    metadata_argument_list          go to state 207
    optional_field_annotation       go to state 950
    structure_variable_declaration  go to state 951


State 759

  518 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 518 (global_let_variable_declaration)


State 760

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 952
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 761

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  520 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 953
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665


State 762

  629 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' . $@37

    $default  reduce using rule 628 ($@37)

    $@37  go to state 954


State 763

  652 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' . $@42

    $default  reduce using rule 651 ($@42)

    $@42  go to state 955


State 764

  655 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' . $@44

    $default  reduce using rule 654 ($@44)

    $@44  go to state 956


State 765

  616 table_type_pair: type_declaration "end of expression" . type_declaration

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 957


State 766

  724 make_struct_decl: "struct" '<' $@72 . type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 958
    type_declaration_no_options_no_dim  go to state 261


State 767

  727 make_struct_decl: "class" '<' $@74 . type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 959
    type_declaration_no_options_no_dim  go to state 261


State 768

  248 new_type_declaration: '<' $@3 . type_declaration '>' $@4

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 960


State 769

  251 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  252         | "new" new_type_declaration '(' . use_initializer make_struct_single ')'

    "uninitialized"  shift, and go to state 961

    $default  reduce using rule 720 (use_initializer)

    use_initializer  go to state 962


State 770

  250 expr_new: "new" structure_type_declaration '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    optional_expr_list      go to state 963
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 686
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 771

  288 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 964


State 772

  287 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 965
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 773

  286 expr_type_decl: "type" '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 966


State 774

  743 make_dim_decl: "array" "struct" '<' . $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 741 ($@82)

    $@82  go to state 967


State 775

  746 make_dim_decl: "array" "tuple" '<' . $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 744 ($@84)

    $@84  go to state 968


State 776

  749 make_dim_decl: "array" "variant" '<' . $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    $default  reduce using rule 747 ($@86)

    $@86  go to state 969


State 777

  753 make_dim_decl: "array" '<' $@88 . type_declaration_no_options '>' $@89 '(' optional_expr_list ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 970
    type_declaration_no_options_no_dim  go to state 261


State 778

  291 expr_list: expr_list . ',' expr
  750 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 808

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 971


State 779

  762 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  763                | "table" '<' type_declaration_no_options . "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "end of expression"  shift, and go to state 972
    '>'                  shift, and go to state 973


State 780

  759 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  761 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 804

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 974


State 781

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  410     | "deref" '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 975


State 782

  277 expr_cast: "cast" '<' $@5 . type_declaration_no_options '>' $@6 expr

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 976
    type_declaration_no_options_no_dim  go to state 261


State 783

  280 expr_cast: "upcast" '<' $@7 . type_declaration_no_options '>' $@8 expr

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 977
    type_declaration_no_options_no_dim  go to state 261


State 784

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  411     | "addr" '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 978


State 785

  283 expr_cast: "reinterpret" '<' $@9 . type_declaration_no_options '>' $@10 expr

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 979
    type_declaration_no_options_no_dim  go to state 261


State 786

  757 make_dim_decl: "fixed_array" '<' $@90 . type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 980
    type_declaration_no_options_no_dim  go to state 261


State 787

  291 expr_list: expr_list . ',' expr
  754 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 808

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 981


State 788

  733 make_struct_decl: "default" '<' $@78 . type_declaration_no_options '>' $@79 use_initializer

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 982
    type_declaration_no_options_no_dim  go to state 261


State 789

  739 make_tuple_call: "tuple" '<' $@80 . type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 983
    type_declaration_no_options_no_dim  go to state 261


State 790

  291 expr_list: expr_list . ',' expr
  736 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 808

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 984


State 791

  730 make_struct_decl: "variant" '<' $@76 . type_declaration_no_options '>' $@77 '(' make_variant_dim ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 985
    type_declaration_no_options_no_dim  go to state 261


State 792

  412 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options . '>' optional_capture_list expression_block

    '>'  shift, and go to state 986


State 793

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  443 expr_mtag: "$$" '(' expr . ')'
  451          | expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 987


State 794

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  444 expr_mtag: "$i" '(' expr . ')'
  451          | expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 988


State 795

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  445 expr_mtag: "$v" '(' expr . ')'
  451          | expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 989


State 796

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  446 expr_mtag: "$b" '(' expr . ')'
  451          | expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 990


State 797

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  447 expr_mtag: "$a" '(' expr . ')'
  451          | expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 991


State 798

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  449 expr_mtag: "$c" '(' expr . ')' '(' ')'
  450          | "$c" '(' expr . ')' '(' expr_list ')'
  451          | expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 992


State 799

   31 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 31 (string_builder)


State 800

   30 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 993
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 801

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   29 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 209
    STRING_CHARACTER_ESC  shift, and go to state 210

    $default  reduce using rule 29 (string_builder_body)


State 802

  566 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  567                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  770 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 994
    ','   shift, and go to state 904


State 803

  734 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 995
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 804

  759 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  767 optional_comma: ',' .

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 767 (optional_comma)

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 611
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_map_tuple          go to state 996
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 805

  760 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 997


State 806

  566 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  567                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  768 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 998
    ','   shift, and go to state 904


State 807

  769 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_name_with_pos_list  go to state 999


State 808

  291 expr_list: expr_list ',' . expr
  767 optional_comma: ',' .

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 767 (optional_comma)

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1000
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 809

  740 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1001


State 810

  400 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1002


State 811

  340 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1003


State 812

  458 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1004


State 813

  344 func_addr_expr: '@' '@' '<' . $@13 type_declaration_no_options '>' $@14 func_addr_name
  347               | '@' '@' '<' . $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    ':'       reduce using rule 345 ($@15)
    '>'       reduce using rule 345 ($@15)
    '('       reduce using rule 345 ($@15)
    $default  reduce using rule 342 ($@13)

    $@13  go to state 1005
    $@15  go to state 1006


State 814

  339 func_addr_name: name_in_namespace .

    $default  reduce using rule 339 (func_addr_name)


State 815

  341 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 341 (func_addr_expr)


State 816

  710 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  711                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1007


State 817

  241 name_in_namespace: "name" .
  242                  | "name" . "::" "name"
  706 make_struct_fields: "name" . copy_or_move expr
  707                   | "name" . ":=" expr

    "<-"  shift, and go to state 903
    ":="  shift, and go to state 1008
    "::"  shift, and go to state 93
    '='   shift, and go to state 905

    $default  reduce using rule 241 (name_in_namespace)

    copy_or_move  go to state 1009


State 818

  335 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  740 make_dim_decl: '[' . expr_list optional_comma ']'
  768 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  769                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "for"                             shift, and go to state 619
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "iterator"                        shift, and go to state 620
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "$f"                              shift, and go to state 816
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 817
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 621
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_fields      go to state 1010
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 819

  355 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 355 (expr_call)


State 820

  291 expr_list: expr_list . ',' expr
  336 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  357 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1011
    ')'  shift, and go to state 1012


State 821

  708 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  709                   | make_struct_fields . ',' "name" ":=" expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  715 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1013

    $default  reduce using rule 715 (make_struct_single)


State 822

  356 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1014


State 823

  305 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1015


State 824

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 319

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1016


State 825

  233 expressions: expressions . expression_any
  234            | expressions . error
  308 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 519
    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 520
    "if"                              shift, and go to state 521
    "static_if"                       shift, and go to state 522
    "for"                             shift, and go to state 523
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "return"                          shift, and go to state 524
    "null"                            shift, and go to state 408
    "break"                           shift, and go to state 525
    "try"                             shift, and go to state 526
    "table"                           shift, and go to state 409
    "delete"                          shift, and go to state 527
    "deref"                           shift, and go to state 410
    "with"                            shift, and go to state 528
    "assume"                          shift, and go to state 529
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 413
    "continue"                        shift, and go to state 530
    "pass"                            shift, and go to state 531
    "reinterpret"                     shift, and go to state 414
    "label"                           shift, and go to state 532
    "goto"                            shift, and go to state 533
    "unsafe"                          shift, and go to state 534
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "yield"                           shift, and go to state 535
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    "end of code block"               shift, and go to state 1017
    "end of expression"               shift, and go to state 537
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder           go to state 448
    expr_reader              go to state 449
    expression_label         go to state 538
    expression_goto          go to state 539
    if_or_static_if          go to state 540
    expression_if_one_liner  go to state 541
    expression_if_then_else  go to state 542
    expression_for_loop      go to state 543
    expression_unsafe        go to state 544
    expression_while_loop    go to state 545
    expression_with          go to state 546
    expression_with_alias    go to state 547
    expr_call_pipe           go to state 450
    expression_any           go to state 548
    name_in_namespace        go to state 451
    expression_delete        go to state 549
    expr_new                 go to state 452
    expression_break         go to state 550
    expression_continue      go to state 551
    expression_return        go to state 552
    expression_yield         go to state 553
    expression_try_catch     go to state 554
    kwd_let                  go to state 555
    expression_let           go to state 556
    expr_cast                go to state 453
    expr_type_decl           go to state 454
    expr_type_info           go to state 455
    block_or_lambda          go to state 456
    expr_full_block          go to state 457
    expr_numeric_const       go to state 458
    expr_assign              go to state 557
    expr_named_call          go to state 459
    expr_method_call         go to state 460
    func_addr_expr           go to state 461
    expr_field               go to state 462
    expr_call                go to state 463
    expr                     go to state 558
    expr_mtag                go to state 465
    basic_type_declaration   go to state 466
    make_decl                go to state 467
    make_struct_decl         go to state 468
    make_tuple_call          go to state 469
    make_dim_decl            go to state 470
    make_table_decl          go to state 471
    array_comprehension      go to state 472


State 826

  297 block_or_lambda: '@' '@' .

    $default  reduce using rule 297 (block_or_lambda)


State 827

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 823

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 1018


State 828

  419 expr: expr "is" "type" . '<' $@19 type_declaration_no_options '>' $@20

    '<'  shift, and go to state 1019


State 829

  457 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1020


State 830

  421 expr: expr "is" "name" .

    $default  reduce using rule 421 (expr)


State 831

  420 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 420 (expr)


State 832

  425 expr: expr "as" "type" . '<' $@21 type_declaration '>' $@22

    '<'  shift, and go to state 1021


State 833

  455 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1022


State 834

  422 expr: expr "as" "name" .

    $default  reduce using rule 422 (expr)


State 835

  426 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 426 (expr)


State 836

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  374     | expr "<<" expr .
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 374 (expr)


State 837

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  375     | expr ">>" expr .
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 375 (expr)


State 838

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  387     | expr "<=" expr .
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 387 (expr)


State 839

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  388     | expr ">=" expr .
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 388 (expr)


State 840

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  385     | expr "==" expr .
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 385 (expr)


State 841

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  386     | expr "!=" expr .
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 386 (expr)


State 842

  337 expr_method_call: expr "->" "name" . '(' ')'
  338                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1023


State 843

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  415     | expr "??" expr .
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 415 (expr)


State 844

  452 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1024


State 845

  405 expr: expr "?." "name" .

    $default  reduce using rule 405 (expr)


State 846

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  403     | expr "?[" expr . ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1025


State 847

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  439     | expr "<|" expr .
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 439 (expr)


State 848

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  440     | expr "|>" expr .
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 641
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 440 (expr)


State 849

  358 expr_call: basic_type_declaration . '(' ')'
  359          | basic_type_declaration . '(' expr_list ')'
  441 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 667

    $default  reduce using rule 441 (expr)


State 850

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  376     | expr "<<<" expr .
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 376 (expr)


State 851

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  377     | expr ">>>" expr .
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '-'   shift, and go to state 659
    '+'   shift, and go to state 660
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 377 (expr)


State 852

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  392     | expr "&&" expr .
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 392 (expr)


State 853

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  393     | expr "||" expr .
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "^^"   shift, and go to state 651
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 393 (expr)


State 854

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  394     | expr "^^" expr .
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 394 (expr)


State 855

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  395     | expr ".." expr .
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    ".."  error (nonassociative)

    $default  reduce using rule 395 (expr)


State 856

  427 expr: expr '?' "as" . "name"
  430     | expr '?' "as" . "type" '<' $@23 type_declaration '>' $@24
  431     | expr '?' "as" . basic_type_declaration
  456 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1026
    "bool"      shift, and go to state 220
    "void"      shift, and go to state 221
    "string"    shift, and go to state 222
    "int"       shift, and go to state 224
    "int2"      shift, and go to state 225
    "int3"      shift, and go to state 226
    "int4"      shift, and go to state 227
    "uint"      shift, and go to state 228
    "bitfield"  shift, and go to state 417
    "uint2"     shift, and go to state 230
    "uint3"     shift, and go to state 231
    "uint4"     shift, and go to state 232
    "float"     shift, and go to state 233
    "float2"    shift, and go to state 234
    "float3"    shift, and go to state 235
    "float4"    shift, and go to state 236
    "range"     shift, and go to state 237
    "urange"    shift, and go to state 238
    "range64"   shift, and go to state 239
    "urange64"  shift, and go to state 240
    "int64"     shift, and go to state 242
    "uint64"    shift, and go to state 243
    "double"    shift, and go to state 244
    "int8"      shift, and go to state 247
    "uint8"     shift, and go to state 248
    "int16"     shift, and go to state 249
    "uint16"    shift, and go to state 250
    "$f"        shift, and go to state 1027
    "name"      shift, and go to state 1028

    basic_type_declaration  go to state 1029


State 857

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  416     | expr '?' expr . ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    ':'    shift, and go to state 1030
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665


State 858

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  390     | expr '|' expr .
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 390 (expr)


State 859

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  391     | expr '^' expr .
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 391 (expr)


State 860

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  389     | expr '&' expr .
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 389 (expr)


State 861

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  383     | expr '<' expr .
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 383 (expr)


State 862

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  384     | expr '>' expr .
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 384 (expr)


State 863

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  379     | expr '-' expr .
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 379 (expr)


State 864

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  378     | expr '+' expr .
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '*'   shift, and go to state 661
    '/'   shift, and go to state 662
    '%'   shift, and go to state 663
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 378 (expr)


State 865

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  380     | expr '*' expr .
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 380 (expr)


State 866

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  381     | expr '/' expr .
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 381 (expr)


State 867

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  382     | expr '%' expr .
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 631
    "as"  shift, and go to state 632
    "++"  shift, and go to state 635
    "--"  shift, and go to state 636
    "->"  shift, and go to state 641
    "??"  shift, and go to state 642
    "?."  shift, and go to state 643
    "?["  shift, and go to state 644
    "<|"  shift, and go to state 645
    "|>"  shift, and go to state 646
    '.'   shift, and go to state 664
    '['   shift, and go to state 665

    $default  reduce using rule 382 (expr)


State 868

  406 expr: expr '.' "?." . "name"
  454 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1031
    "name"  shift, and go to state 1032


State 869

  404 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1033
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 870

  451 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1034


State 871

  348 expr_field: expr '.' "name" .
  350           | expr '.' "name" . '(' ')'
  351           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1035

    $default  reduce using rule 348 (expr_field)


State 872

  349 expr_field: expr '.' '.' . "name"
  453 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1036
    "name"  shift, and go to state 1037


State 873

  402 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1038
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 874

  354 expr_field: expr '.' $@17 . error $@18

    error  shift, and go to state 1039


State 875

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  401     | expr '[' expr . ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1040


State 876

  358 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 358 (expr_call)


State 877

  291 expr_list: expr_list . ',' expr
  359 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1042


State 878

  658 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 657 ($@46)

    $@46  go to state 1043


State 879

  648 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' . $@40

    $default  reduce using rule 647 ($@40)

    $@40  go to state 1044


State 880

  608 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1045


State 881

  614 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' . $@35

    $default  reduce using rule 613 ($@35)

    $@35  go to state 1046


State 882

  662 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 661 ($@48)

    $@48  go to state 1047


State 883

  665 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type . '>' $@50

    '>'  shift, and go to state 1048


State 884

  669 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' . $@52

    $default  reduce using rule 668 ($@52)

    $@52  go to state 1049


State 885

  672 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type . '>' $@54

    '>'  shift, and go to state 1050


State 886

  676 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 675 ($@56)

    $@56  go to state 1051


State 887

  679 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type . '>' $@58

    '>'  shift, and go to state 1052


State 888

  486 tuple_type_list: tuple_type_list "end of expression" . tuple_type

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 501
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    tuple_type                          go to state 1053
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 504


State 889

  682 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' . $@60

    $default  reduce using rule 681 ($@60)

    $@60  go to state 1054


State 890

  492 variant_type_list: variant_type_list "end of expression" . variant_type

    "name"  shift, and go to state 506

    variant_type  go to state 1055


State 891

  685 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' . $@62

    $default  reduce using rule 684 ($@62)

    $@62  go to state 1056


State 892

  240 type_declaration_no_options_list: type_declaration_no_options_list . "end of expression" type_declaration
  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 1057
    '>'                  shift, and go to state 1058


State 893

  239 type_declaration_no_options_list: type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 239 (type_declaration_no_options_list)


State 894

  631 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 631 (type_declaration_no_options_no_dim)


State 895

  236 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 236 (optional_expr_list)


State 896

  619 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 619 (dim_list)


State 897

  700 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@69 "begin of code block" $@70 bitfield_alias_bits optional_comma $@71 "end of code block" .

    $default  reduce using rule 700 (bitfield_alias_declaration)


State 898

  484 tuple_type: "name" ':' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 484 (tuple_type)


State 899

  490 variant_type: "name" ':' type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 490 (variant_type)


State 900

  480 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 480 (function_argument_declaration)


State 901

  564 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1059
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 902

  565 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1060


State 903

  497 copy_or_move: "<-" .

    $default  reduce using rule 497 (copy_or_move)


State 904

  566 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  567                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1061


State 905

  496 copy_or_move: '=' .

    $default  reduce using rule 496 (copy_or_move)


State 906

  500 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  501                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 1062


State 907

  499 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 499 (variable_declaration)


State 908

  502 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1063
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 909

   72 expression_while_loop: "while" '(' expr . ')' expression_block
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1064


State 910

   70 expression_for_loop: "for" '(' variable_name_with_pos_list . "in" expr_list ')' expression_block
  566 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  567                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1065
    ','   shift, and go to state 904


State 911

  258 expression_return: "return" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 258 (expression_return)


State 912

  261 expression_try_catch: "try" expression_block "recover" . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1066


State 913

  245 expression_delete: "delete" "explicit" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 245 (expression_delete)


State 914

   73 expression_with: "with" '(' expr . ')' expression_block
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1067


State 915

   74 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1068
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 916

   51 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 51 (expression_label)


State 917

   52 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 52 (expression_goto)


State 918

  260 expression_yield: "yield" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 260 (expression_yield)


State 919

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" . expressions "end of code block"

    $default  reduce using rule 232 (expressions)

    expressions  go to state 1069


State 920

   68 expression_if_then_else: if_or_static_if '(' expr . ')' expression_block expression_else
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1070


State 921

   69 expression_if_then_else: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1071
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 922

  509 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 1072


State 923

  508 let_variable_name_with_pos_list: "name" .
  510                                | "name" . "aka" "name"

    "aka"  shift, and go to state 1073

    $default  reduce using rule 508 (let_variable_name_with_pos_list)


State 924

  271 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1074

    tuple_expansion  go to state 1075


State 925

  274 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 274 (expression_let)


State 926

  511 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  512                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  515 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  516                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  517                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1076
    ':'  shift, and go to state 1077
    '&'  shift, and go to state 395

    $default  reduce using rule 506 (optional_ref)

    optional_ref  go to state 1078


State 927

  273 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 273 (expression_let)


State 928

  326 expr_assign: expr "+=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 326 (expr_assign)


State 929

  327 expr_assign: expr "-=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 327 (expr_assign)


State 930

  329 expr_assign: expr "/=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 329 (expr_assign)


State 931

  328 expr_assign: expr "*=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 328 (expr_assign)


State 932

  330 expr_assign: expr "%=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 330 (expr_assign)


State 933

  320 expr_assign: expr "&=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 320 (expr_assign)


State 934

  321 expr_assign: expr "|=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 321 (expr_assign)


State 935

  322 expr_assign: expr "^=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 322 (expr_assign)


State 936

  331 expr_assign: expr "<<=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 331 (expr_assign)


State 937

  332 expr_assign: expr ">>=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 332 (expr_assign)


State 938

  318 expr_assign: expr "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 318 (expr_assign)


State 939

  319 expr_assign: expr ":=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 319 (expr_assign)


State 940

  333 expr_assign: expr "<<<=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 333 (expr_assign)


State 941

  334 expr_assign: expr ">>>=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 334 (expr_assign)


State 942

  323 expr_assign: expr "&&=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 323 (expr_assign)


State 943

  324 expr_assign: expr "||=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 324 (expr_assign)


State 944

  325 expr_assign: expr "^^=" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 325 (expr_assign)


State 945

  317 expr_assign: expr '=' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 317 (expr_assign)


State 946

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  529 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 529 (enum_expression)


State 947

  532 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 532 (enum_list)


State 948

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 . "end of code block"

    "end of code block"  shift, and go to state 1079


State 949

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression"
  478                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "public"   shift, and go to state 1080
    "private"  shift, and go to state 1081

    $default  reduce using rule 466 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1082


State 950

  471 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1083

    $default  reduce using rule 469 (optional_static_member_variable)

    optional_static_member_variable  go to state 1084


State 951

  474 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1085


State 952

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 1086
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665


State 953

  520 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 520 (global_let_variable_declaration)


State 954

  629 type_declaration_no_options_no_dim: "type" '<' $@36 type_declaration '>' $@37 .

    $default  reduce using rule 629 (type_declaration_no_options_no_dim)


State 955

  652 type_declaration_no_options_no_dim: "array" '<' $@41 type_declaration '>' $@42 .

    $default  reduce using rule 652 (type_declaration_no_options_no_dim)


State 956

  655 type_declaration_no_options_no_dim: "table" '<' $@43 table_type_pair '>' $@44 .

    $default  reduce using rule 655 (type_declaration_no_options_no_dim)


State 957

  616 table_type_pair: type_declaration "end of expression" type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 616 (table_type_pair)


State 958

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options . '>' $@73 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1087


State 959

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options . '>' $@75 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1088


State 960

  248 new_type_declaration: '<' $@3 type_declaration . '>' $@4
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 1089


State 961

  721 use_initializer: "uninitialized" .

    $default  reduce using rule 721 (use_initializer)


State 962

  251 expr_new: "new" new_type_declaration '(' use_initializer . ')'
  252         | "new" new_type_declaration '(' use_initializer . make_struct_single ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090
    ')'     shift, and go to state 1091

    make_struct_fields  go to state 821
    make_struct_single  go to state 1092


State 963

  250 expr_new: "new" structure_type_declaration '(' optional_expr_list . ')'

    ')'  shift, and go to state 1093


State 964

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  289               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1094
    '>'                  shift, and go to state 1095


State 965

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1096


State 966

  286 expr_type_decl: "type" '<' $@11 type_declaration . '>' $@12
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 1097


State 967

  743 make_dim_decl: "array" "struct" '<' $@82 . type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1098
    type_declaration_no_options_no_dim  go to state 261


State 968

  746 make_dim_decl: "array" "tuple" '<' $@84 . type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1099
    type_declaration_no_options_no_dim  go to state 261


State 969

  749 make_dim_decl: "array" "variant" '<' $@86 . type_declaration_no_options '>' $@87 '(' make_variant_dim ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1100
    type_declaration_no_options_no_dim  go to state 261


State 970

  753 make_dim_decl: "array" '<' $@88 type_declaration_no_options . '>' $@89 '(' optional_expr_list ')'

    '>'  shift, and go to state 1101


State 971

  750 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1102


State 972

  763 make_table_decl: "table" '<' type_declaration_no_options "end of expression" . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1103
    type_declaration_no_options_no_dim  go to state 261


State 973

  762 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1104


State 974

  761 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1105


State 975

  410 expr: "deref" '(' expr ')' .

    $default  reduce using rule 410 (expr)


State 976

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options . '>' $@6 expr

    '>'  shift, and go to state 1106


State 977

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options . '>' $@8 expr

    '>'  shift, and go to state 1107


State 978

  411 expr: "addr" '(' expr ')' .

    $default  reduce using rule 411 (expr)


State 979

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options . '>' $@10 expr

    '>'  shift, and go to state 1108


State 980

  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options . '>' $@91 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1109


State 981

  754 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1110


State 982

  733 make_struct_decl: "default" '<' $@78 type_declaration_no_options . '>' $@79 use_initializer

    '>'  shift, and go to state 1111


State 983

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options . '>' $@81 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1112


State 984

  736 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1113


State 985

  730 make_struct_decl: "variant" '<' $@76 type_declaration_no_options . '>' $@77 '(' make_variant_dim ')'

    '>'  shift, and go to state 1114


State 986

  412 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' . optional_capture_list expression_block

    "capture"  shift, and go to state 823

    $default  reduce using rule 304 (optional_capture_list)

    optional_capture_list  go to state 1115


State 987

  443 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 443 (expr_mtag)


State 988

  444 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 444 (expr_mtag)


State 989

  445 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 445 (expr_mtag)


State 990

  446 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 446 (expr_mtag)


State 991

  447 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 447 (expr_mtag)


State 992

  449 expr_mtag: "$c" '(' expr ')' . '(' ')'
  450          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1116


State 993

   30 string_builder_body: string_builder_body "{" expr . "}"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    "}"    shift, and go to state 1117
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665


State 994

  770 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1118
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 995

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  734 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 734 (make_map_tuple)


State 996

  759 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 759 (expr_map_tuple_list)


State 997

  760 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 760 (make_table_decl)


State 998

  768 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1119
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 999

  566 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  567                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  769 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1120
    ','   shift, and go to state 904


State 1000

  291 expr_list: expr_list ',' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 291 (expr_list)


State 1001

  740 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 740 (make_dim_decl)


State 1002

  400 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 400 (expr)


State 1003

  340 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1121
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1004

  458 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1122
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1005

  344 func_addr_expr: '@' '@' '<' $@13 . type_declaration_no_options '>' $@14 func_addr_name

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1123
    type_declaration_no_options_no_dim  go to state 261


State 1006

  347 func_addr_expr: '@' '@' '<' $@15 . optional_function_argument_list optional_function_type '>' $@16 func_addr_name

    '('  shift, and go to state 319

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1124


State 1007

  710 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  711                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1125
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1008

  707 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1126
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1009

  706 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1127
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1010

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  708 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  709                   | make_struct_fields . ',' "name" ":=" expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1013
    ']'  shift, and go to state 1128


State 1011

  291 expr_list: expr_list ',' . expr
  336 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 1129
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1000
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1012

  357 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 357 (expr_call)


State 1013

  708 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  709                   | make_struct_fields ',' . "name" ":=" expr
  712                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1130
    "name"  shift, and go to state 1131


State 1014

  356 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 356 (expr_call)


State 1015

  305 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"  shift, and go to state 1132
    ":="  shift, and go to state 1133
    '='   shift, and go to state 1134
    '&'   shift, and go to state 1135

    capture_entry  go to state 1136
    capture_list   go to state 1137


State 1016

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 384

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1138


State 1017

  308 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 308 (expr_full_block_assumed_piped)


State 1018

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 319

    $default  reduce using rule 114 (optional_function_argument_list)

    optional_function_argument_list  go to state 1139


State 1019

  419 expr: expr "is" "type" '<' . $@19 type_declaration_no_options '>' $@20

    $default  reduce using rule 417 ($@19)

    $@19  go to state 1140


State 1020

  457 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1141
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1021

  425 expr: expr "as" "type" '<' . $@21 type_declaration '>' $@22

    $default  reduce using rule 423 ($@21)

    $@21  go to state 1142


State 1022

  455 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1143
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1023

  337 expr_method_call: expr "->" "name" '(' . ')'
  338                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    ')'                               shift, and go to state 1144
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1145
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1024

  452 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1146
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1025

  403 expr: expr "?[" expr ']' .

    $default  reduce using rule 403 (expr)


State 1026

  430 expr: expr '?' "as" "type" . '<' $@23 type_declaration '>' $@24

    '<'  shift, and go to state 1147


State 1027

  456 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1148


State 1028

  427 expr: expr '?' "as" "name" .

    $default  reduce using rule 427 (expr)


State 1029

  431 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 431 (expr)


State 1030

  416 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1149
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1031

  454 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1150


State 1032

  406 expr: expr '.' "?." "name" .

    $default  reduce using rule 406 (expr)


State 1033

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  404     | expr '.' "?[" expr . ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1151


State 1034

  451 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1152
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1035

  350 expr_field: expr '.' "name" '(' . ')'
  351           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    ')'                               shift, and go to state 1153
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1154
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1036

  453 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1155


State 1037

  349 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 349 (expr_field)


State 1038

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  402     | expr '.' '[' expr . ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ']'    shift, and go to state 1156


State 1039

  354 expr_field: expr '.' $@17 error . $@18

    $default  reduce using rule 353 ($@18)

    $@18  go to state 1157


State 1040

  401 expr: expr '[' expr ']' .

    $default  reduce using rule 401 (expr)


State 1041

  291 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1000
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1042

  359 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 359 (expr_call)


State 1043

  658 type_declaration_no_options_no_dim: "iterator" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 658 (type_declaration_no_options_no_dim)


State 1044

  648 type_declaration_no_options_no_dim: "smart_ptr" '<' $@39 type_declaration '>' $@40 .

    $default  reduce using rule 648 (type_declaration_no_options_no_dim)


State 1045

  608 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 608 (bitfield_bits)


State 1046

  614 bitfield_type_declaration: "bitfield" '<' $@34 bitfield_bits '>' $@35 .

    $default  reduce using rule 614 (bitfield_type_declaration)


State 1047

  662 type_declaration_no_options_no_dim: "block" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 662 (type_declaration_no_options_no_dim)


State 1048

  665 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' . $@50

    $default  reduce using rule 664 ($@50)

    $@50  go to state 1158


State 1049

  669 type_declaration_no_options_no_dim: "function" '<' $@51 type_declaration '>' $@52 .

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 1050

  672 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' . $@54

    $default  reduce using rule 671 ($@54)

    $@54  go to state 1159


State 1051

  676 type_declaration_no_options_no_dim: "lambda" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 676 (type_declaration_no_options_no_dim)


State 1052

  679 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' . $@58

    $default  reduce using rule 678 ($@58)

    $@58  go to state 1160


State 1053

  486 tuple_type_list: tuple_type_list "end of expression" tuple_type .

    $default  reduce using rule 486 (tuple_type_list)


State 1054

  682 type_declaration_no_options_no_dim: "tuple" '<' $@59 tuple_type_list '>' $@60 .

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 1055

  492 variant_type_list: variant_type_list "end of expression" variant_type .

    $default  reduce using rule 492 (variant_type_list)


State 1056

  685 type_declaration_no_options_no_dim: "variant" '<' $@61 variant_type_list '>' $@62 .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 1057

  240 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" . type_declaration

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 1161


State 1058

  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1162


State 1059

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  564 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1163


State 1060

  565 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 565 (variable_name_with_pos_list)


State 1061

  566 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  567                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1164

    $default  reduce using rule 566 (variable_name_with_pos_list)


State 1062

  500 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  501                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 903
    '='   shift, and go to state 905
    '|'   shift, and go to state 367

    $default  reduce using rule 500 (variable_declaration)

    copy_or_move  go to state 1165


State 1063

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  502 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 502 (variable_declaration)


State 1064

   72 expression_while_loop: "while" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1166


State 1065

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" . expr_list ')' expression_block

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1167
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1066

  261 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 261 (expression_try_catch)


State 1067

   73 expression_with: "with" '(' expr ')' . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1168


State 1068

   74 expression_with_alias: "assume" "name" '=' expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 74 (expression_with_alias)


State 1069

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions . "end of code block"
  233 expressions: expressions . expression_any
  234            | expressions . error

    error                             shift, and go to state 519
    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 520
    "if"                              shift, and go to state 521
    "static_if"                       shift, and go to state 522
    "for"                             shift, and go to state 523
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "return"                          shift, and go to state 524
    "null"                            shift, and go to state 408
    "break"                           shift, and go to state 525
    "try"                             shift, and go to state 526
    "table"                           shift, and go to state 409
    "delete"                          shift, and go to state 527
    "deref"                           shift, and go to state 410
    "with"                            shift, and go to state 528
    "assume"                          shift, and go to state 529
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 413
    "continue"                        shift, and go to state 530
    "pass"                            shift, and go to state 531
    "reinterpret"                     shift, and go to state 414
    "label"                           shift, and go to state 532
    "goto"                            shift, and go to state 533
    "unsafe"                          shift, and go to state 534
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "yield"                           shift, and go to state 535
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    "end of code block"               shift, and go to state 1169
    "end of expression"               shift, and go to state 537
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder           go to state 448
    expr_reader              go to state 449
    expression_label         go to state 538
    expression_goto          go to state 539
    if_or_static_if          go to state 540
    expression_if_one_liner  go to state 541
    expression_if_then_else  go to state 542
    expression_for_loop      go to state 543
    expression_unsafe        go to state 544
    expression_while_loop    go to state 545
    expression_with          go to state 546
    expression_with_alias    go to state 547
    expr_call_pipe           go to state 450
    expression_any           go to state 548
    name_in_namespace        go to state 451
    expression_delete        go to state 549
    expr_new                 go to state 452
    expression_break         go to state 550
    expression_continue      go to state 551
    expression_return        go to state 552
    expression_yield         go to state 553
    expression_try_catch     go to state 554
    kwd_let                  go to state 555
    expression_let           go to state 556
    expr_cast                go to state 453
    expr_type_decl           go to state 454
    expr_type_info           go to state 455
    block_or_lambda          go to state 456
    expr_full_block          go to state 457
    expr_numeric_const       go to state 458
    expr_assign              go to state 557
    expr_named_call          go to state 459
    expr_method_call         go to state 460
    func_addr_expr           go to state 461
    expr_field               go to state 462
    expr_call                go to state 463
    expr                     go to state 558
    expr_mtag                go to state 465
    basic_type_declaration   go to state 466
    make_decl                go to state 467
    make_struct_decl         go to state 468
    make_tuple_call          go to state 469
    make_dim_decl            go to state 470
    make_table_decl          go to state 471
    array_comprehension      go to state 472


State 1070

   68 expression_if_then_else: if_or_static_if '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1170


State 1071

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1171


State 1072

  509 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1172
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1073

  510 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1173


State 1074

  269 tuple_expansion: "name" .

    $default  reduce using rule 269 (tuple_expansion)


State 1075

  270 tuple_expansion: tuple_expansion . ',' "name"
  271 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1174
    ')'  shift, and go to state 1175


State 1076

  511 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  512                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1176


State 1077

  515 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  516                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1177
    type_declaration_no_options_no_dim  go to state 261


State 1078

  517 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1178


State 1079

  547 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@30 enum_list optional_comma $@31 "end of code block" .

    $default  reduce using rule 547 (enum_declaration)


State 1080

  467 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 467 (optional_public_or_private_member_variable)


State 1081

  468 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 468 (optional_public_or_private_member_variable)


State 1082

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@26 function_declaration_header "end of expression"
  478                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block

    "abstract"  shift, and go to state 1179
    "static"    shift, and go to state 1083

    $default  reduce using rule 469 (optional_static_member_variable)

    optional_static_member_variable  go to state 1180


State 1083

  470 optional_static_member_variable: "static" .

    $default  reduce using rule 470 (optional_static_member_variable)


State 1084

  471 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1181
    "sealed"    shift, and go to state 1182

    $default  reduce using rule 461 (optional_override)

    optional_override  go to state 1183


State 1085

  474 struct_variable_declaration_list: struct_variable_declaration_list $@25 structure_variable_declaration "end of expression" .

    $default  reduce using rule 474 (struct_variable_declaration_list)


State 1086

  519 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 519 (global_let_variable_declaration)


State 1087

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' . $@73 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 723 ($@73)

    $@73  go to state 1184


State 1088

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' . $@75 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 726 ($@75)

    $@75  go to state 1185


State 1089

  248 new_type_declaration: '<' $@3 type_declaration '>' . $@4

    $default  reduce using rule 247 ($@4)

    $@4  go to state 1186


State 1090

  706 make_struct_fields: "name" . copy_or_move expr
  707                   | "name" . ":=" expr

    "<-"  shift, and go to state 903
    ":="  shift, and go to state 1008
    '='   shift, and go to state 905

    copy_or_move  go to state 1009


State 1091

  251 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 251 (expr_new)


State 1092

  252 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single . ')'

    ')'  shift, and go to state 1187


State 1093

  250 expr_new: "new" structure_type_declaration '(' optional_expr_list ')' .

    $default  reduce using rule 250 (expr_new)


State 1094

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1188


State 1095

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1189


State 1096

  287 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 287 (expr_type_info)


State 1097

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 285 ($@12)

    $@12  go to state 1190


State 1098

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options . '>' $@83 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1191


State 1099

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options . '>' $@85 '(' use_initializer make_struct_dim_decl ')'

    '>'  shift, and go to state 1192


State 1100

  749 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options . '>' $@87 '(' make_variant_dim ')'

    '>'  shift, and go to state 1193


State 1101

  753 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' . $@89 '(' optional_expr_list ')'

    $default  reduce using rule 752 ($@89)

    $@89  go to state 1194


State 1102

  750 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 750 (make_dim_decl)


State 1103

  763 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1195


State 1104

  762 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 237 (optional_expr_map_tuple_list)

    string_builder                go to state 448
    expr_reader                   go to state 449
    expr_call_pipe                go to state 450
    optional_expr_map_tuple_list  go to state 1196
    name_in_namespace             go to state 451
    expr_new                      go to state 452
    expr_cast                     go to state 453
    expr_type_decl                go to state 454
    expr_type_info                go to state 455
    block_or_lambda               go to state 456
    expr_full_block               go to state 457
    expr_numeric_const            go to state 458
    expr_named_call               go to state 459
    expr_method_call              go to state 460
    func_addr_expr                go to state 461
    expr_field                    go to state 462
    expr_call                     go to state 463
    expr                          go to state 611
    expr_mtag                     go to state 465
    basic_type_declaration        go to state 466
    make_decl                     go to state 467
    make_struct_decl              go to state 468
    make_map_tuple                go to state 612
    make_tuple_call               go to state 469
    make_dim_decl                 go to state 470
    expr_map_tuple_list           go to state 1197
    make_table_decl               go to state 471
    array_comprehension           go to state 472


State 1105

  761 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 761 (make_table_decl)


State 1106

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' . $@6 expr

    $default  reduce using rule 276 ($@6)

    $@6  go to state 1198


State 1107

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' . $@8 expr

    $default  reduce using rule 279 ($@8)

    $@8  go to state 1199


State 1108

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' . $@10 expr

    $default  reduce using rule 282 ($@10)

    $@10  go to state 1200


State 1109

  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' . $@91 '(' expr_list optional_comma ')'

    $default  reduce using rule 756 ($@91)

    $@91  go to state 1201


State 1110

  754 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 754 (make_dim_decl)


State 1111

  733 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' . $@79 use_initializer

    $default  reduce using rule 732 ($@79)

    $@79  go to state 1202


State 1112

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' . $@81 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 738 ($@81)

    $@81  go to state 1203


State 1113

  736 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 736 (make_tuple_call)


State 1114

  730 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' . $@77 '(' make_variant_dim ')'

    $default  reduce using rule 729 ($@77)

    $@77  go to state 1204


State 1115

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  414     | "generator" '<' type_declaration_no_options '>' optional_capture_list . expression_block

    "begin of code block"  shift, and go to state 321
    '('                    shift, and go to state 1205

    expression_block  go to state 1206


State 1116

  449 expr_mtag: "$c" '(' expr ')' '(' . ')'
  450          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    ')'                               shift, and go to state 1207
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1208
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1117

   30 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 30 (string_builder_body)


State 1118

  291 expr_list: expr_list . ',' expr
  770 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1209
    ','                  shift, and go to state 1041


State 1119

  291 expr_list: expr_list . ',' expr
  768 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1210
    ','                  shift, and go to state 1041


State 1120

  769 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1211
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1121

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  340 func_addr_name: "$i" '(' expr . ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1212


State 1122

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  458          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1213


State 1123

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options . '>' $@14 func_addr_name

    '>'  shift, and go to state 1214


State 1124

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list . optional_function_type '>' $@16 func_addr_name

    ':'  shift, and go to state 384

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1215


State 1125

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  711                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1216


State 1126

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  707 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 707 (make_struct_fields)


State 1127

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  706 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 706 (make_struct_fields)


State 1128

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1217


State 1129

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  740 make_dim_decl: '[' . expr_list optional_comma ']'
  768 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  769                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "for"                             shift, and go to state 619
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "iterator"                        shift, and go to state 620
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "$f"                              shift, and go to state 816
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 817
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 621
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_fields      go to state 1218
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1130

  712 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  713                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1219


State 1131

  708 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  709                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 903
    ":="  shift, and go to state 1220
    '='   shift, and go to state 905

    copy_or_move  go to state 1221


State 1132

  300 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1222


State 1133

  301 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1223


State 1134

  299 capture_entry: '=' . "name"

    "name"  shift, and go to state 1224


State 1135

  298 capture_entry: '&' . "name"

    "name"  shift, and go to state 1225


State 1136

  302 capture_list: capture_entry .

    $default  reduce using rule 302 (capture_list)


State 1137

  303 capture_list: capture_list . ',' capture_entry
  305 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1226
    ')'  shift, and go to state 1227


State 1138

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1228
    "begin of code block"  shift, and go to state 321

    expression_block       go to state 1229
    block_or_simple_block  go to state 1230


State 1139

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 384

    $default  reduce using rule 117 (optional_function_type)

    optional_function_type  go to state 1231


State 1140

  419 expr: expr "is" "type" '<' $@19 . type_declaration_no_options '>' $@20

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1232
    type_declaration_no_options_no_dim  go to state 261


State 1141

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  457          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1233


State 1142

  425 expr: expr "as" "type" '<' $@21 . type_declaration '>' $@22

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 1234


State 1143

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  455          | expr "as" "$f" '(' expr . ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1235


State 1144

  337 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 337 (expr_method_call)


State 1145

  291 expr_list: expr_list . ',' expr
  338 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1236


State 1146

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  452          | expr "?." "$f" '(' expr . ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1237


State 1147

  430 expr: expr '?' "as" "type" '<' . $@23 type_declaration '>' $@24

    $default  reduce using rule 428 ($@23)

    $@23  go to state 1238


State 1148

  456 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1239
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1149

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  416     | expr '?' expr ':' expr .
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 416 (expr)


State 1150

  454 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1240
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1151

  404 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 404 (expr)


State 1152

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  451          | expr '.' "$f" '(' expr . ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1241


State 1153

  350 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 350 (expr_field)


State 1154

  291 expr_list: expr_list . ',' expr
  351 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1242


State 1155

  453 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1243
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1156

  402 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 402 (expr)


State 1157

  354 expr_field: expr '.' $@17 error $@18 .

    $default  reduce using rule 354 (expr_field)


State 1158

  665 type_declaration_no_options_no_dim: "block" '<' $@49 optional_function_argument_list optional_function_type '>' $@50 .

    $default  reduce using rule 665 (type_declaration_no_options_no_dim)


State 1159

  672 type_declaration_no_options_no_dim: "function" '<' $@53 optional_function_argument_list optional_function_type '>' $@54 .

    $default  reduce using rule 672 (type_declaration_no_options_no_dim)


State 1160

  679 type_declaration_no_options_no_dim: "lambda" '<' $@57 optional_function_argument_list optional_function_type '>' $@58 .

    $default  reduce using rule 679 (type_declaration_no_options_no_dim)


State 1161

  240 type_declaration_no_options_list: type_declaration_no_options_list "end of expression" type_declaration .
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367

    $default  reduce using rule 240 (type_declaration_no_options_list)


State 1162

  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    optional_expr_list      go to state 1244
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 686
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1163

  564 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 564 (variable_name_with_pos_list)


State 1164

  567 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1245


State 1165

  501 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1246
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1166

   72 expression_while_loop: "while" '(' expr ')' expression_block .

    $default  reduce using rule 72 (expression_while_loop)


State 1167

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list . ')' expression_block
  291 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1247


State 1168

   73 expression_with: "with" '(' expr ')' expression_block .

    $default  reduce using rule 73 (expression_with)


State 1169

  212 expression_block: "begin of code block" expressions "end of code block" "finally" "begin of code block" expressions "end of code block" .

    $default  reduce using rule 212 (expression_block)


State 1170

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1248
    "elif"         shift, and go to state 1249
    "static_elif"  shift, and go to state 1250

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1251
    expression_else      go to state 1252


State 1171

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1253

    $default  reduce using rule 61 (expression_else_one_liner)

    expression_else_one_liner  go to state 1254


State 1172

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  509 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1255


State 1173

  510 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 510 (let_variable_name_with_pos_list)


State 1174

  270 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1256


State 1175

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  272                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1257
    '&'  shift, and go to state 395

    $default  reduce using rule 506 (optional_ref)

    optional_ref  go to state 1258


State 1176

  511 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  512                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1259

    $default  reduce using rule 511 (let_variable_name_with_pos_list)


State 1177

  515 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  516                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 566
    ":="                 shift, and go to state 567
    "end of expression"  shift, and go to state 1260
    '='                  shift, and go to state 568

    copy_or_move_or_clone  go to state 1261


State 1178

  517 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1262
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1179

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@26 function_declaration_header "end of expression"

    "const"  shift, and go to state 1263

    $default  reduce using rule 464 (optional_constant)

    optional_constant  go to state 1264


State 1180

  478 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@27 function_declaration_header expression_block

    "override"  shift, and go to state 1181
    "sealed"    shift, and go to state 1182

    $default  reduce using rule 461 (optional_override)

    optional_override  go to state 1265


State 1181

  462 optional_override: "override" .

    $default  reduce using rule 462 (optional_override)


State 1182

  463 optional_override: "sealed" .

    $default  reduce using rule 463 (optional_override)


State 1183

  471 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1080
    "private"  shift, and go to state 1081

    $default  reduce using rule 466 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1266


State 1184

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1267


State 1185

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1268


State 1186

  248 new_type_declaration: '<' $@3 type_declaration '>' $@4 .

    $default  reduce using rule 248 (new_type_declaration)


State 1187

  252 expr_new: "new" new_type_declaration '(' use_initializer make_struct_single ')' .

    $default  reduce using rule 252 (expr_new)


State 1188

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1269


State 1189

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1270
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1190

  286 expr_type_decl: "type" '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 286 (expr_type_decl)


State 1191

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' . $@83 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 742 ($@83)

    $@83  go to state 1271


State 1192

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' . $@85 '(' use_initializer make_struct_dim_decl ')'

    $default  reduce using rule 745 ($@85)

    $@85  go to state 1272


State 1193

  749 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' . $@87 '(' make_variant_dim ')'

    $default  reduce using rule 748 ($@87)

    $@87  go to state 1273


State 1194

  753 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 . '(' optional_expr_list ')'

    '('  shift, and go to state 1274


State 1195

  763 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1275


State 1196

  762 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1276


State 1197

  238 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  759 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 804

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 1277


State 1198

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1278
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1199

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1279
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1200

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1280
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1201

  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1281


State 1202

  733 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 . use_initializer

    "uninitialized"  shift, and go to state 961

    $default  reduce using rule 720 (use_initializer)

    use_initializer  go to state 1282


State 1203

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1283


State 1204

  730 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 . '(' make_variant_dim ')'

    '('  shift, and go to state 1284


State 1205

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    ')'                               shift, and go to state 1285
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1286
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1206

  414 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list expression_block .

    $default  reduce using rule 414 (expr)


State 1207

  449 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 449 (expr_mtag)


State 1208

  291 expr_list: expr_list . ',' expr
  450 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1041
    ')'  shift, and go to state 1287


State 1209

  770 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 611
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_map_tuple          go to state 1288
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1210

  768 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1289
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1211

  291 expr_list: expr_list . ',' expr
  769 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1290
    ','                  shift, and go to state 1041


State 1212

  340 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 340 (func_addr_name)


State 1213

  458 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 458 (expr_mtag)


State 1214

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' . $@14 func_addr_name

    $default  reduce using rule 343 ($@14)

    $@14  go to state 1291


State 1215

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type . '>' $@16 func_addr_name

    '>'  shift, and go to state 1292


State 1216

  710 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  711                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 903
    ":="  shift, and go to state 1293
    '='   shift, and go to state 905

    copy_or_move  go to state 1294


State 1217

  335 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 335 (expr_named_call)


State 1218

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  708 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  709                   | make_struct_fields . ',' "name" ":=" expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1013
    ']'  shift, and go to state 1295


State 1219

  712 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  713                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1296
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1220

  709 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1297
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1221

  708 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1298
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1222

  300 capture_entry: "<-" "name" .

    $default  reduce using rule 300 (capture_entry)


State 1223

  301 capture_entry: ":=" "name" .

    $default  reduce using rule 301 (capture_entry)


State 1224

  299 capture_entry: '=' "name" .

    $default  reduce using rule 299 (capture_entry)


State 1225

  298 capture_entry: '&' "name" .

    $default  reduce using rule 298 (capture_entry)


State 1226

  303 capture_list: capture_list ',' . capture_entry

    "<-"  shift, and go to state 1132
    ":="  shift, and go to state 1133
    '='   shift, and go to state 1134
    '&'   shift, and go to state 1135

    capture_entry  go to state 1299


State 1227

  305 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 305 (optional_capture_list)


State 1228

  293 block_or_simple_block: "=>" . expr
  294                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "<-"                              shift, and go to state 1300
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1301
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1229

  292 block_or_simple_block: expression_block .

    $default  reduce using rule 292 (block_or_simple_block)


State 1230

  306 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 306 (expr_full_block)


State 1231

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1302


State 1232

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options . '>' $@20

    '>'  shift, and go to state 1303


State 1233

  457 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 457 (expr_mtag)


State 1234

  425 expr: expr "as" "type" '<' $@21 type_declaration . '>' $@22
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 1304


State 1235

  455 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 455 (expr_mtag)


State 1236

  338 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 338 (expr_method_call)


State 1237

  452 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 452 (expr_mtag)


State 1238

  430 expr: expr '?' "as" "type" '<' $@23 . type_declaration '>' $@24

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 260
    type_declaration_no_options_no_dim  go to state 261
    type_declaration                    go to state 1305


State 1239

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  456          | expr '?' "as" "$f" '(' expr . ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1306


State 1240

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  454          | expr '.' "?." "$f" '(' expr . ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1307


State 1241

  451 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 451 (expr_mtag)


State 1242

  351 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 351 (expr_field)


State 1243

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  453          | expr '.' '.' "$f" '(' expr . ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1308


State 1244

  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1309


State 1245

  567 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 567 (variable_name_with_pos_list)


State 1246

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  501 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 501 (variable_declaration)


State 1247

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1310


State 1248

   57 expression_else: "else" . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1311


State 1249

   54 elif_or_static_elif: "elif" .

    $default  reduce using rule 54 (elif_or_static_elif)


State 1250

   55 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1251

   58 expression_else: elif_or_static_elif . '(' expr ')' expression_block expression_else

    '('  shift, and go to state 1312


State 1252

   68 expression_if_then_else: if_or_static_if '(' expr ')' expression_block expression_else .

    $default  reduce using rule 68 (expression_if_then_else)


State 1253

   62 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "return"                          shift, and go to state 524
    "null"                            shift, and go to state 408
    "break"                           shift, and go to state 525
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "continue"                        shift, and go to state 530
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "yield"                           shift, and go to state 535
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder           go to state 448
    expr_reader              go to state 449
    expression_if_one_liner  go to state 1313
    expr_call_pipe           go to state 450
    name_in_namespace        go to state 451
    expr_new                 go to state 452
    expression_break         go to state 1314
    expression_continue      go to state 1315
    expression_return        go to state 1316
    expression_yield         go to state 1317
    expr_cast                go to state 453
    expr_type_decl           go to state 454
    expr_type_info           go to state 455
    block_or_lambda          go to state 456
    expr_full_block          go to state 457
    expr_numeric_const       go to state 458
    expr_named_call          go to state 459
    expr_method_call         go to state 460
    func_addr_expr           go to state 461
    expr_field               go to state 462
    expr_call                go to state 463
    expr                     go to state 1318
    expr_mtag                go to state 465
    basic_type_declaration   go to state 466
    make_decl                go to state 467
    make_struct_decl         go to state 468
    make_tuple_call          go to state 469
    make_dim_decl            go to state 470
    make_table_decl          go to state 471
    array_comprehension      go to state 472


State 1254

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1319


State 1255

  509 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 509 (let_variable_name_with_pos_list)


State 1256

  270 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 270 (tuple_expansion)


State 1257

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 214
    "array"      shift, and go to state 215
    "table"      shift, and go to state 216
    "typedecl"   shift, and go to state 217
    "iterator"   shift, and go to state 218
    "smart_ptr"  shift, and go to state 219
    "bool"       shift, and go to state 220
    "void"       shift, and go to state 221
    "string"     shift, and go to state 222
    "auto"       shift, and go to state 223
    "int"        shift, and go to state 224
    "int2"       shift, and go to state 225
    "int3"       shift, and go to state 226
    "int4"       shift, and go to state 227
    "uint"       shift, and go to state 228
    "bitfield"   shift, and go to state 229
    "uint2"      shift, and go to state 230
    "uint3"      shift, and go to state 231
    "uint4"      shift, and go to state 232
    "float"      shift, and go to state 233
    "float2"     shift, and go to state 234
    "float3"     shift, and go to state 235
    "float4"     shift, and go to state 236
    "range"      shift, and go to state 237
    "urange"     shift, and go to state 238
    "range64"    shift, and go to state 239
    "urange64"   shift, and go to state 240
    "block"      shift, and go to state 241
    "int64"      shift, and go to state 242
    "uint64"     shift, and go to state 243
    "double"     shift, and go to state 244
    "function"   shift, and go to state 245
    "lambda"     shift, and go to state 246
    "int8"       shift, and go to state 247
    "uint8"      shift, and go to state 248
    "int16"      shift, and go to state 249
    "uint16"     shift, and go to state 250
    "tuple"      shift, and go to state 251
    "variant"    shift, and go to state 252
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 253
    "name"       shift, and go to state 56
    '$'          shift, and go to state 254

    name_in_namespace                   go to state 255
    basic_type_declaration              go to state 256
    structure_type_declaration          go to state 257
    auto_type_declaration               go to state 258
    bitfield_type_declaration           go to state 259
    type_declaration_no_options         go to state 1320
    type_declaration_no_options_no_dim  go to state 261


State 1258

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1321


State 1259

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1322


State 1260

  515 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 515 (let_variable_declaration)


State 1261

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1323
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1262

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  517 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 1324
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665


State 1263

  465 optional_constant: "const" .

    $default  reduce using rule 465 (optional_constant)


State 1264

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@26 function_declaration_header "end of expression"

    $default  reduce using rule 475 ($@26)

    $@26  go to state 1325


State 1265

  478 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@27 function_declaration_header expression_block

    "const"  shift, and go to state 1263

    $default  reduce using rule 464 (optional_constant)

    optional_constant  go to state 1326


State 1266

  471 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 700
    "name"  shift, and go to state 701

    variable_declaration         go to state 1327
    variable_name_with_pos_list  go to state 703


State 1267

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 961

    $default  reduce using rule 720 (use_initializer)

    use_initializer  go to state 1328


State 1268

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 961

    $default  reduce using rule 720 (use_initializer)

    use_initializer  go to state 1329


State 1269

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1330


State 1270

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1331


State 1271

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1332


State 1272

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 . '(' use_initializer make_struct_dim_decl ')'

    '('  shift, and go to state 1333


State 1273

  749 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 . '(' make_variant_dim ')'

    '('  shift, and go to state 1334


State 1274

  753 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 235 (optional_expr_list)

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    optional_expr_list      go to state 1335
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 686
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1275

  763 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    $default  reduce using rule 237 (optional_expr_map_tuple_list)

    string_builder                go to state 448
    expr_reader                   go to state 449
    expr_call_pipe                go to state 450
    optional_expr_map_tuple_list  go to state 1336
    name_in_namespace             go to state 451
    expr_new                      go to state 452
    expr_cast                     go to state 453
    expr_type_decl                go to state 454
    expr_type_info                go to state 455
    block_or_lambda               go to state 456
    expr_full_block               go to state 457
    expr_numeric_const            go to state 458
    expr_named_call               go to state 459
    expr_method_call              go to state 460
    func_addr_expr                go to state 461
    expr_field                    go to state 462
    expr_call                     go to state 463
    expr                          go to state 611
    expr_mtag                     go to state 465
    basic_type_declaration        go to state 466
    make_decl                     go to state 467
    make_struct_decl              go to state 468
    make_map_tuple                go to state 612
    make_tuple_call               go to state 469
    make_dim_decl                 go to state 470
    expr_map_tuple_list           go to state 1197
    make_table_decl               go to state 471
    array_comprehension           go to state 472


State 1276

  762 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 762 (make_table_decl)


State 1277

  238 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 238 (optional_expr_map_tuple_list)


State 1278

  277 expr_cast: "cast" '<' $@5 type_declaration_no_options '>' $@6 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 277 (expr_cast)


State 1279

  280 expr_cast: "upcast" '<' $@7 type_declaration_no_options '>' $@8 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 280 (expr_cast)


State 1280

  283 expr_cast: "reinterpret" '<' $@9 type_declaration_no_options '>' $@10 expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 283 (expr_cast)


State 1281

  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    expr_list               go to state 1337
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 622
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1282

  733 make_struct_decl: "default" '<' $@78 type_declaration_no_options '>' $@79 use_initializer .

    $default  reduce using rule 733 (make_struct_decl)


State 1283

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 961

    $default  reduce using rule 720 (use_initializer)

    use_initializer  go to state 1338


State 1284

  730 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1339
    make_variant_dim    go to state 1340


State 1285

  412 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 412 (expr)


State 1286

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  413     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1341


State 1287

  450 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 450 (expr_mtag)


State 1288

  770 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1342

    $default  reduce using rule 764 (array_comprehension_where)

    array_comprehension_where  go to state 1343


State 1289

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  768 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 1342
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665

    $default  reduce using rule 764 (array_comprehension_where)

    array_comprehension_where  go to state 1344


State 1290

  769 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1345
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1291

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 811
    "name"  shift, and go to state 56

    name_in_namespace  go to state 814
    func_addr_name     go to state 1346


State 1292

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' . $@16 func_addr_name

    $default  reduce using rule 346 ($@16)

    $@16  go to state 1347


State 1293

  711 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1348
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1294

  710 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1349
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1295

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1350


State 1296

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  712 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  713                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1351


State 1297

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  709 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 709 (make_struct_fields)


State 1298

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  708 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 708 (make_struct_fields)


State 1299

  303 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 303 (capture_list)


State 1300

  294 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1352
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1301

  293 block_or_simple_block: "=>" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    ".."  error (nonassociative)

    $default  reduce using rule 293 (block_or_simple_block)


State 1302

  307 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 307 (expr_full_block_assumed_piped)


State 1303

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' . $@20

    $default  reduce using rule 418 ($@20)

    $@20  go to state 1353


State 1304

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' . $@22

    $default  reduce using rule 424 ($@22)

    $@22  go to state 1354


State 1305

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration . '>' $@24
  687 type_declaration: type_declaration . '|' type_declaration_no_options
  688                 | type_declaration . '|' '#'

    '|'  shift, and go to state 367
    '>'  shift, and go to state 1355


State 1306

  456 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 456 (expr_mtag)


State 1307

  454 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 454 (expr_mtag)


State 1308

  453 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 453 (expr_mtag)


State 1309

  633 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@38 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 633 (type_declaration_no_options_no_dim)


State 1310

   70 expression_for_loop: "for" '(' variable_name_with_pos_list "in" expr_list ')' expression_block .

    $default  reduce using rule 70 (expression_for_loop)


State 1311

   57 expression_else: "else" expression_block .

    $default  reduce using rule 57 (expression_else)


State 1312

   58 expression_else: elif_or_static_elif '(' . expr ')' expression_block expression_else

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1356
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1313

   62 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 62 (expression_else_one_liner)


State 1314

   66 expression_if_one_liner: expression_break .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1315

   67 expression_if_one_liner: expression_continue .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1316

   64 expression_if_one_liner: expression_return .

    $default  reduce using rule 64 (expression_if_one_liner)


State 1317

   65 expression_if_one_liner: expression_yield .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1318

   63 expression_if_one_liner: expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 63 (expression_if_one_liner)


State 1319

   69 expression_if_then_else: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 69 (expression_if_then_else)


State 1320

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 566
    ":="  shift, and go to state 567
    '='   shift, and go to state 568

    copy_or_move_or_clone  go to state 1357


State 1321

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1358
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1322

  512 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 512 (let_variable_name_with_pos_list)


State 1323

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 1359
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665


State 1324

  517 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 517 (let_variable_declaration)


State 1325

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 170
    "bool"      shift, and go to state 171
    "string"    shift, and go to state 172
    "int"       shift, and go to state 173
    "int2"      shift, and go to state 174
    "int3"      shift, and go to state 175
    "int4"      shift, and go to state 176
    "uint"      shift, and go to state 177
    "uint2"     shift, and go to state 178
    "uint3"     shift, and go to state 179
    "uint4"     shift, and go to state 180
    "float"     shift, and go to state 181
    "float2"    shift, and go to state 182
    "float3"    shift, and go to state 183
    "float4"    shift, and go to state 184
    "range"     shift, and go to state 185
    "urange"    shift, and go to state 186
    "range64"   shift, and go to state 187
    "urange64"  shift, and go to state 188
    "int64"     shift, and go to state 189
    "uint64"    shift, and go to state 190
    "double"    shift, and go to state 191
    "int8"      shift, and go to state 192
    "uint8"     shift, and go to state 193
    "int16"     shift, and go to state 194
    "uint16"    shift, and go to state 195
    "++"        shift, and go to state 196
    "--"        shift, and go to state 197
    "name"      shift, and go to state 198

    function_name                go to state 199
    function_declaration_header  go to state 1360


State 1326

  478 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@27 function_declaration_header expression_block

    $default  reduce using rule 477 ($@27)

    $@27  go to state 1361


State 1327

  471 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 471 (structure_variable_declaration)


State 1328

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1362

    make_struct_fields    go to state 1363
    make_struct_dim_list  go to state 1364
    make_struct_dim_decl  go to state 1365


State 1329

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1362

    make_struct_fields    go to state 1363
    make_struct_dim_list  go to state 1364
    make_struct_dim_decl  go to state 1366


State 1330

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1367
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1331

  288 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 288 (expr_type_info)


State 1332

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 961

    $default  reduce using rule 720 (use_initializer)

    use_initializer  go to state 1368


State 1333

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' . use_initializer make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 961

    $default  reduce using rule 720 (use_initializer)

    use_initializer  go to state 1369


State 1334

  749 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1339
    make_variant_dim    go to state 1370


State 1335

  753 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1371


State 1336

  763 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1372


State 1337

  291 expr_list: expr_list . ',' expr
  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 808

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 1373


State 1338

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1362

    make_struct_fields    go to state 1363
    make_struct_dim_list  go to state 1364
    make_struct_dim_decl  go to state 1374


State 1339

  708 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  709                   | make_struct_fields . ',' "name" ":=" expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  714 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1013

    $default  reduce using rule 714 (make_variant_dim)


State 1340

  730 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1375


State 1341

  413 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 413 (expr)


State 1342

  765 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1376


State 1343

  770 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1377


State 1344

  768 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1378


State 1345

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  769 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 1342
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665

    $default  reduce using rule 764 (array_comprehension_where)

    array_comprehension_where  go to state 1379


State 1346

  344 func_addr_expr: '@' '@' '<' $@13 type_declaration_no_options '>' $@14 func_addr_name .

    $default  reduce using rule 344 (func_addr_expr)


State 1347

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 811
    "name"  shift, and go to state 56

    name_in_namespace  go to state 814
    func_addr_name     go to state 1380


State 1348

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  711 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 711 (make_struct_fields)


State 1349

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  710 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 710 (make_struct_fields)


State 1350

  336 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 336 (expr_named_call)


State 1351

  712 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  713                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 903
    ":="  shift, and go to state 1381
    '='   shift, and go to state 905

    copy_or_move  go to state 1382


State 1352

  294 block_or_simple_block: "=>" "<-" expr .
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 294 (block_or_simple_block)


State 1353

  419 expr: expr "is" "type" '<' $@19 type_declaration_no_options '>' $@20 .

    $default  reduce using rule 419 (expr)


State 1354

  425 expr: expr "as" "type" '<' $@21 type_declaration '>' $@22 .

    $default  reduce using rule 425 (expr)


State 1355

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' . $@24

    $default  reduce using rule 429 ($@24)

    $@24  go to state 1383


State 1356

   58 expression_else: elif_or_static_elif '(' expr . ')' expression_block expression_else
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1384


State 1357

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1385
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1358

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 1386
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665


State 1359

  516 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 516 (let_variable_declaration)


State 1360

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1387


State 1361

  478 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 . function_declaration_header expression_block

    "operator"  shift, and go to state 170
    "bool"      shift, and go to state 171
    "string"    shift, and go to state 172
    "int"       shift, and go to state 173
    "int2"      shift, and go to state 174
    "int3"      shift, and go to state 175
    "int4"      shift, and go to state 176
    "uint"      shift, and go to state 177
    "uint2"     shift, and go to state 178
    "uint3"     shift, and go to state 179
    "uint4"     shift, and go to state 180
    "float"     shift, and go to state 181
    "float2"    shift, and go to state 182
    "float3"    shift, and go to state 183
    "float4"    shift, and go to state 184
    "range"     shift, and go to state 185
    "urange"    shift, and go to state 186
    "range64"   shift, and go to state 187
    "urange64"  shift, and go to state 188
    "int64"     shift, and go to state 189
    "uint64"    shift, and go to state 190
    "double"    shift, and go to state 191
    "int8"      shift, and go to state 192
    "uint8"     shift, and go to state 193
    "int16"     shift, and go to state 194
    "uint16"    shift, and go to state 195
    "++"        shift, and go to state 196
    "--"        shift, and go to state 197
    "name"      shift, and go to state 198

    function_name                go to state 199
    function_declaration_header  go to state 1388


State 1362

  716 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1389


State 1363

  708 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  709                   | make_struct_fields . ',' "name" ":=" expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  718 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1013

    $default  reduce using rule 718 (make_struct_dim_decl)


State 1364

  717 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  719 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1390

    $default  reduce using rule 766 (optional_comma)

    optional_comma  go to state 1391


State 1365

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1392


State 1366

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1393


State 1367

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665
    ')'    shift, and go to state 1394


State 1368

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1362

    make_struct_fields    go to state 1363
    make_struct_dim_list  go to state 1364
    make_struct_dim_decl  go to state 1395


State 1369

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer . make_struct_dim_decl ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090
    '('     shift, and go to state 1362

    make_struct_fields    go to state 1363
    make_struct_dim_list  go to state 1364
    make_struct_dim_decl  go to state 1396


State 1370

  749 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1397


State 1371

  753 make_dim_decl: "array" '<' $@88 type_declaration_no_options '>' $@89 '(' optional_expr_list ')' .

    $default  reduce using rule 753 (make_dim_decl)


State 1372

  763 make_table_decl: "table" '<' type_declaration_no_options "end of expression" type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 763 (make_table_decl)


State 1373

  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1398


State 1374

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1399


State 1375

  730 make_struct_decl: "variant" '<' $@76 type_declaration_no_options '>' $@77 '(' make_variant_dim ')' .

    $default  reduce using rule 730 (make_struct_decl)


State 1376

  765 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1400
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1377

  770 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 770 (array_comprehension)


State 1378

  768 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 768 (array_comprehension)


State 1379

  769 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1401


State 1380

  347 func_addr_expr: '@' '@' '<' $@15 optional_function_argument_list optional_function_type '>' $@16 func_addr_name .

    $default  reduce using rule 347 (func_addr_expr)


State 1381

  713 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1402
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1382

  712 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 400
    "class"                           shift, and go to state 401
    "true"                            shift, and go to state 402
    "false"                           shift, and go to state 403
    "new"                             shift, and go to state 404
    "typeinfo"                        shift, and go to state 405
    "type"                            shift, and go to state 406
    "array"                           shift, and go to state 407
    "null"                            shift, and go to state 408
    "table"                           shift, and go to state 409
    "deref"                           shift, and go to state 410
    "cast"                            shift, and go to state 411
    "upcast"                          shift, and go to state 412
    "addr"                            shift, and go to state 413
    "reinterpret"                     shift, and go to state 414
    "fixed_array"                     shift, and go to state 415
    "default"                         shift, and go to state 416
    "bool"                            shift, and go to state 220
    "void"                            shift, and go to state 221
    "string"                          shift, and go to state 222
    "int"                             shift, and go to state 224
    "int2"                            shift, and go to state 225
    "int3"                            shift, and go to state 226
    "int4"                            shift, and go to state 227
    "uint"                            shift, and go to state 228
    "bitfield"                        shift, and go to state 417
    "uint2"                           shift, and go to state 230
    "uint3"                           shift, and go to state 231
    "uint4"                           shift, and go to state 232
    "float"                           shift, and go to state 233
    "float2"                          shift, and go to state 234
    "float3"                          shift, and go to state 235
    "float4"                          shift, and go to state 236
    "range"                           shift, and go to state 237
    "urange"                          shift, and go to state 238
    "range64"                         shift, and go to state 239
    "urange64"                        shift, and go to state 240
    "int64"                           shift, and go to state 242
    "uint64"                          shift, and go to state 243
    "double"                          shift, and go to state 244
    "int8"                            shift, and go to state 247
    "uint8"                           shift, and go to state 248
    "int16"                           shift, and go to state 249
    "uint16"                          shift, and go to state 250
    "tuple"                           shift, and go to state 418
    "variant"                         shift, and go to state 419
    "generator"                       shift, and go to state 420
    "++"                              shift, and go to state 421
    "--"                              shift, and go to state 422
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 423
    "$i"                              shift, and go to state 424
    "$v"                              shift, and go to state 425
    "$b"                              shift, and go to state 426
    "$a"                              shift, and go to state 427
    "$c"                              shift, and go to state 428
    "..."                             shift, and go to state 429
    "integer constant"                shift, and go to state 430
    "long integer constant"           shift, and go to state 431
    "unsigned integer constant"       shift, and go to state 432
    "unsigned long integer constant"  shift, and go to state 433
    "unsigned int8 constant"          shift, and go to state 434
    "floating point constant"         shift, and go to state 435
    "double constant"                 shift, and go to state 436
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 437
    "begin of code block"             shift, and go to state 438
    '-'                               shift, and go to state 439
    '+'                               shift, and go to state 440
    '*'                               shift, and go to state 441
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 442
    '!'                               shift, and go to state 443
    '['                               shift, and go to state 444
    '('                               shift, and go to state 445
    '$'                               shift, and go to state 446
    '@'                               shift, and go to state 447

    string_builder          go to state 448
    expr_reader             go to state 449
    expr_call_pipe          go to state 450
    name_in_namespace       go to state 451
    expr_new                go to state 452
    expr_cast               go to state 453
    expr_type_decl          go to state 454
    expr_type_info          go to state 455
    block_or_lambda         go to state 456
    expr_full_block         go to state 457
    expr_numeric_const      go to state 458
    expr_named_call         go to state 459
    expr_method_call        go to state 460
    func_addr_expr          go to state 461
    expr_field              go to state 462
    expr_call               go to state 463
    expr                    go to state 1403
    expr_mtag               go to state 465
    basic_type_declaration  go to state 466
    make_decl               go to state 467
    make_struct_decl        go to state 468
    make_tuple_call         go to state 469
    make_dim_decl           go to state 470
    make_table_decl         go to state 471
    array_comprehension     go to state 472


State 1383

  430 expr: expr '?' "as" "type" '<' $@23 type_declaration '>' $@24 .

    $default  reduce using rule 430 (expr)


State 1384

   58 expression_else: elif_or_static_elif '(' expr ')' . expression_block expression_else

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1404


State 1385

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 631
    "as"                 shift, and go to state 632
    "<<"                 shift, and go to state 633
    ">>"                 shift, and go to state 634
    "++"                 shift, and go to state 635
    "--"                 shift, and go to state 636
    "<="                 shift, and go to state 637
    ">="                 shift, and go to state 638
    "=="                 shift, and go to state 639
    "!="                 shift, and go to state 640
    "->"                 shift, and go to state 641
    "??"                 shift, and go to state 642
    "?."                 shift, and go to state 643
    "?["                 shift, and go to state 644
    "<|"                 shift, and go to state 645
    "|>"                 shift, and go to state 646
    "<<<"                shift, and go to state 647
    ">>>"                shift, and go to state 648
    "&&"                 shift, and go to state 649
    "||"                 shift, and go to state 650
    "^^"                 shift, and go to state 651
    ".."                 shift, and go to state 652
    "end of expression"  shift, and go to state 1405
    '?'                  shift, and go to state 653
    '|'                  shift, and go to state 654
    '^'                  shift, and go to state 655
    '&'                  shift, and go to state 656
    '<'                  shift, and go to state 657
    '>'                  shift, and go to state 658
    '-'                  shift, and go to state 659
    '+'                  shift, and go to state 660
    '*'                  shift, and go to state 661
    '/'                  shift, and go to state 662
    '%'                  shift, and go to state 663
    '.'                  shift, and go to state 664
    '['                  shift, and go to state 665


State 1386

  272 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 272 (tuple_expansion_variable_declaration)


State 1387

  476 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@26 function_declaration_header "end of expression" .

    $default  reduce using rule 476 (struct_variable_declaration_list)


State 1388

  478 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header . expression_block

    "begin of code block"  shift, and go to state 321

    expression_block  go to state 1406


State 1389

  708 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  709                   | make_struct_fields . ',' "name" ":=" expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  716 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1407


State 1390

  717 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  767 optional_comma: ',' .

    '('  shift, and go to state 1408

    $default  reduce using rule 767 (optional_comma)


State 1391

  719 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 719 (make_struct_dim_decl)


State 1392

  724 make_struct_decl: "struct" '<' $@72 type_declaration_no_options '>' $@73 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 724 (make_struct_decl)


State 1393

  727 make_struct_decl: "class" '<' $@74 type_declaration_no_options '>' $@75 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 727 (make_struct_decl)


State 1394

  289 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 289 (expr_type_info)


State 1395

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1409


State 1396

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl . ')'

    ')'  shift, and go to state 1410


State 1397

  749 make_dim_decl: "array" "variant" '<' $@86 type_declaration_no_options '>' $@87 '(' make_variant_dim ')' .

    $default  reduce using rule 749 (make_dim_decl)


State 1398

  757 make_dim_decl: "fixed_array" '<' $@90 type_declaration_no_options '>' $@91 '(' expr_list optional_comma ')' .

    $default  reduce using rule 757 (make_dim_decl)


State 1399

  739 make_tuple_call: "tuple" '<' $@80 type_declaration_no_options '>' $@81 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 739 (make_tuple_call)


State 1400

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  765 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 765 (array_comprehension_where)


State 1401

  769 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 769 (array_comprehension)


State 1402

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  713 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 713 (make_struct_fields)


State 1403

  337 expr_method_call: expr . "->" "name" '(' ')'
  338                 | expr . "->" "name" '(' expr_list ')'
  348 expr_field: expr . '.' "name"
  349           | expr . '.' '.' "name"
  350           | expr . '.' "name" '(' ')'
  351           | expr . '.' "name" '(' expr_list ')'
  354           | expr . '.' $@17 error $@18
  374 expr: expr . "<<" expr
  375     | expr . ">>" expr
  376     | expr . "<<<" expr
  377     | expr . ">>>" expr
  378     | expr . '+' expr
  379     | expr . '-' expr
  380     | expr . '*' expr
  381     | expr . '/' expr
  382     | expr . '%' expr
  383     | expr . '<' expr
  384     | expr . '>' expr
  385     | expr . "==" expr
  386     | expr . "!=" expr
  387     | expr . "<=" expr
  388     | expr . ">=" expr
  389     | expr . '&' expr
  390     | expr . '|' expr
  391     | expr . '^' expr
  392     | expr . "&&" expr
  393     | expr . "||" expr
  394     | expr . "^^" expr
  395     | expr . ".." expr
  398     | expr . "++"
  399     | expr . "--"
  401     | expr . '[' expr ']'
  402     | expr . '.' '[' expr ']'
  403     | expr . "?[" expr ']'
  404     | expr . '.' "?[" expr ']'
  405     | expr . "?." "name"
  406     | expr . '.' "?." "name"
  415     | expr . "??" expr
  416     | expr . '?' expr ':' expr
  419     | expr . "is" "type" '<' $@19 type_declaration_no_options '>' $@20
  420     | expr . "is" basic_type_declaration
  421     | expr . "is" "name"
  422     | expr . "as" "name"
  425     | expr . "as" "type" '<' $@21 type_declaration '>' $@22
  426     | expr . "as" basic_type_declaration
  427     | expr . '?' "as" "name"
  430     | expr . '?' "as" "type" '<' $@23 type_declaration '>' $@24
  431     | expr . '?' "as" basic_type_declaration
  439     | expr . "<|" expr
  440     | expr . "|>" expr
  441     | expr . "|>" basic_type_declaration
  451 expr_mtag: expr . '.' "$f" '(' expr ')'
  452          | expr . "?." "$f" '(' expr ')'
  453          | expr . '.' '.' "$f" '(' expr ')'
  454          | expr . '.' "?." "$f" '(' expr ')'
  455          | expr . "as" "$f" '(' expr ')'
  456          | expr . '?' "as" "$f" '(' expr ')'
  457          | expr . "is" "$f" '(' expr ')'
  712 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 631
    "as"   shift, and go to state 632
    "<<"   shift, and go to state 633
    ">>"   shift, and go to state 634
    "++"   shift, and go to state 635
    "--"   shift, and go to state 636
    "<="   shift, and go to state 637
    ">="   shift, and go to state 638
    "=="   shift, and go to state 639
    "!="   shift, and go to state 640
    "->"   shift, and go to state 641
    "??"   shift, and go to state 642
    "?."   shift, and go to state 643
    "?["   shift, and go to state 644
    "<|"   shift, and go to state 645
    "|>"   shift, and go to state 646
    "<<<"  shift, and go to state 647
    ">>>"  shift, and go to state 648
    "&&"   shift, and go to state 649
    "||"   shift, and go to state 650
    "^^"   shift, and go to state 651
    ".."   shift, and go to state 652
    '?'    shift, and go to state 653
    '|'    shift, and go to state 654
    '^'    shift, and go to state 655
    '&'    shift, and go to state 656
    '<'    shift, and go to state 657
    '>'    shift, and go to state 658
    '-'    shift, and go to state 659
    '+'    shift, and go to state 660
    '*'    shift, and go to state 661
    '/'    shift, and go to state 662
    '%'    shift, and go to state 663
    '.'    shift, and go to state 664
    '['    shift, and go to state 665

    $default  reduce using rule 712 (make_struct_fields)


State 1404

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block . expression_else

    "else"         shift, and go to state 1248
    "elif"         shift, and go to state 1249
    "static_elif"  shift, and go to state 1250

    $default  reduce using rule 56 (expression_else)

    elif_or_static_elif  go to state 1251
    expression_else      go to state 1411


State 1405

  271 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 271 (tuple_expansion_variable_declaration)


State 1406

  478 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@27 function_declaration_header expression_block .

    $default  reduce using rule 478 (struct_variable_declaration_list)


State 1407

  716 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 716 (make_struct_dim_list)


State 1408

  717 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 816
    "name"  shift, and go to state 1090

    make_struct_fields  go to state 1412


State 1409

  743 make_dim_decl: "array" "struct" '<' $@82 type_declaration_no_options '>' $@83 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 743 (make_dim_decl)


State 1410

  746 make_dim_decl: "array" "tuple" '<' $@84 type_declaration_no_options '>' $@85 '(' use_initializer make_struct_dim_decl ')' .

    $default  reduce using rule 746 (make_dim_decl)


State 1411

   58 expression_else: elif_or_static_elif '(' expr ')' expression_block expression_else .

    $default  reduce using rule 58 (expression_else)


State 1412

  708 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  709                   | make_struct_fields . ',' "name" ":=" expr
  712                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  713                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  717 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1413


State 1413

  717 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 717 (make_struct_dim_list)
