Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration "end of expression"
    9        | program options_declaration "end of expression"
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program "end of expression"

   16 top_level_reader_macro: expr_reader "end of expression"

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 string_builder_body: %empty
   30                    | string_builder_body character_sequence
   31                    | string_builder_body "{" expr "}"

   32 string_builder: "start of the string" string_builder_body "end of the string"

   33 reader_character_sequence: STRING_CHARACTER
   34                          | reader_character_sequence STRING_CHARACTER

   35 $@1: %empty

   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   37 options_declaration: "options" annotation_argument_list

   38 require_declaration: "require" require_module

   39 require_module_name: "name"
   40                    | '%' require_module_name
   41                    | require_module_name '.' "name"
   42                    | require_module_name '/' "name"

   43 require_module: require_module_name is_public_module
   44               | require_module_name "as" "name" is_public_module

   45 is_public_module: %empty
   46                 | "public"

   47 expect_declaration: "expect" expect_list

   48 expect_list: expect_error
   49            | expect_list ',' expect_error

   50 expect_error: "integer constant"
   51             | "integer constant" ':' "integer constant"

   52 expression_label: "label" "integer constant" ':'

   53 expression_goto: "goto" "label" "integer constant"
   54                | "goto" expr

   55 elif_or_static_elif: "elif"
   56                    | "static_elif"

   57 expression_else: %empty
   58                | "else" optional_semis expression_block
   59                | elif_or_static_elif '(' expr ')' optional_semis expression_block expression_else

   60 if_or_static_if: "if"
   61                | "static_if"

   62 expression_else_one_liner: %empty
   63                          | "else" expression_if_one_liner

   64 expression_if_one_liner: expr
   65                        | expression_return
   66                        | expression_yield
   67                        | expression_break
   68                        | expression_continue

   69 optional_semi_list: "end of expression"
   70                   | optional_semi_list "end of expression"

   71 optional_semis: %empty
   72               | optional_semi_list

   73 $@2: %empty

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis expression_block expression_else

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression"

   76 $@3: %empty

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

   78 expression_unsafe: "unsafe" optional_semis expression_block

   79 $@4: %empty

   80 expression_while_loop: $@4 "while" '(' expr ')' optional_semis expression_block

   81 $@5: %empty

   82 expression_with: $@5 "with" '(' expr ')' optional_semis expression_block

   83 expression_with_alias: "assume" "name" '=' expr

   84 annotation_argument_value: string_constant
   85                          | "name"
   86                          | "integer constant"
   87                          | "floating point constant"
   88                          | "true"
   89                          | "false"

   90 annotation_argument_value_list: annotation_argument_value
   91                               | annotation_argument_value_list ',' annotation_argument_value

   92 annotation_argument_name: "name"
   93                         | "type"
   94                         | "in"

   95 annotation_argument: annotation_argument_name '=' string_constant
   96                    | annotation_argument_name '=' "name"
   97                    | annotation_argument_name '=' "integer constant"
   98                    | annotation_argument_name '=' "floating point constant"
   99                    | annotation_argument_name '=' "true"
  100                    | annotation_argument_name '=' "false"
  101                    | annotation_argument_name
  102                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  103 annotation_argument_list: annotation_argument
  104                         | annotation_argument_list ',' annotation_argument

  105 metadata_argument_list: '@' annotation_argument
  106                       | metadata_argument_list '@' annotation_argument

  107 annotation_declaration_name: name_in_namespace
  108                            | "require"
  109                            | "private"

  110 annotation_declaration_basic: annotation_declaration_name
  111                             | annotation_declaration_name '(' annotation_argument_list ')'

  112 annotation_declaration: annotation_declaration_basic
  113                       | '!' annotation_declaration
  114                       | annotation_declaration "&&" annotation_declaration
  115                       | annotation_declaration "||" annotation_declaration
  116                       | annotation_declaration "^^" annotation_declaration
  117                       | '(' annotation_declaration ')'
  118                       | "|>" annotation_declaration

  119 annotation_list: annotation_declaration
  120                | annotation_list ',' annotation_declaration

  121 optional_annotation_list: %empty
  122                         | '[' annotation_list ']'

  123 optional_function_argument_list: %empty
  124                                | '(' ')'
  125                                | '(' function_argument_list ')'

  126 optional_function_type: %empty
  127                       | ':' type_declaration

  128 function_name: "name"
  129              | "operator" '!'
  130              | "operator" '~'
  131              | "operator" "+="
  132              | "operator" "-="
  133              | "operator" "*="
  134              | "operator" "/="
  135              | "operator" "%="
  136              | "operator" "&="
  137              | "operator" "|="
  138              | "operator" "^="
  139              | "operator" "&&="
  140              | "operator" "||="
  141              | "operator" "^^="
  142              | "operator" "&&"
  143              | "operator" "||"
  144              | "operator" "^^"
  145              | "operator" '+'
  146              | "operator" '-'
  147              | "operator" '*'
  148              | "operator" '/'
  149              | "operator" '%'
  150              | "operator" '<'
  151              | "operator" '>'
  152              | "operator" ".."
  153              | "operator" "=="
  154              | "operator" "!="
  155              | "operator" "<="
  156              | "operator" ">="
  157              | "operator" '&'
  158              | "operator" '|'
  159              | "operator" '^'
  160              | "++" "operator"
  161              | "--" "operator"
  162              | "operator" "++"
  163              | "operator" "--"
  164              | "operator" "<<"
  165              | "operator" ">>"
  166              | "operator" "<<="
  167              | "operator" ">>="
  168              | "operator" "<<<"
  169              | "operator" ">>>"
  170              | "operator" "<<<="
  171              | "operator" ">>>="
  172              | "operator" '[' ']'
  173              | "operator" "?[" ']'
  174              | "operator" '.'
  175              | "operator" "?."
  176              | "operator" '.' "name"
  177              | "operator" '.' "name" ":="
  178              | "operator" "?." "name"
  179              | "operator" ":="
  180              | "operator" "delete"
  181              | "operator" "??"
  182              | "operator" "is"
  183              | "operator" "as"
  184              | "operator" "is" "name"
  185              | "operator" "as" "name"
  186              | "operator" '?' "as"
  187              | "operator" '?' "as" "name"
  188              | "bool"
  189              | "string"
  190              | "int"
  191              | "int2"
  192              | "int3"
  193              | "int4"
  194              | "uint"
  195              | "uint2"
  196              | "uint3"
  197              | "uint4"
  198              | "float"
  199              | "float2"
  200              | "float3"
  201              | "float4"
  202              | "range"
  203              | "urange"
  204              | "range64"
  205              | "urange64"
  206              | "int64"
  207              | "uint64"
  208              | "double"
  209              | "int8"
  210              | "uint8"
  211              | "int16"
  212              | "uint16"

  213 global_function_declaration: optional_annotation_list "def" function_declaration

  214 optional_public_or_private_function: %empty
  215                                    | "private"
  216                                    | "public"

  217 function_declaration_header: function_name optional_function_argument_list optional_function_type

  218 $@6: %empty

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  220 expression_block_finally: %empty

  221 $@7: %empty

  222 $@8: %empty

  223 expression_block_finally: "finally" $@7 "begin of code block" expressions $@8 "end of code block"

  224 $@9: %empty

  225 $@10: %empty

  226 expression_block: $@9 "begin of code block" expressions $@10 "end of code block" expression_block_finally

  227 expr_call_pipe: expr_call expr_full_block_assumed_piped

  228 expression_any: "end of expression"
  229               | expr_assign "end of expression"
  230               | expression_delete "end of expression"
  231               | expression_let
  232               | expression_while_loop
  233               | expression_unsafe
  234               | expression_with
  235               | expression_with_alias "end of expression"
  236               | expression_for_loop
  237               | expression_break "end of expression"
  238               | expression_continue "end of expression"
  239               | expression_return "end of expression"
  240               | expression_yield "end of expression"
  241               | expression_if_then_else
  242               | expression_if_then_else_oneliner
  243               | expression_try_catch
  244               | expression_label "end of expression"
  245               | expression_goto "end of expression"
  246               | "pass" "end of expression"

  247 expressions: %empty
  248            | expressions expression_any
  249            | expressions error

  250 optional_expr_list: %empty
  251                   | expr_list optional_comma

  252 optional_expr_map_tuple_list: %empty
  253                             | expr_map_tuple_list optional_comma

  254 type_declaration_no_options_list: type_declaration
  255                                 | type_declaration_no_options_list c_or_s type_declaration

  256 name_in_namespace: "name"
  257                  | "name" "::" "name"
  258                  | "::" "name"

  259 expression_delete: "delete" expr
  260                  | "delete" "explicit" expr

  261 $@11: %empty

  262 $@12: %empty

  263 new_type_declaration: '<' $@11 type_declaration '>' $@12
  264                     | structure_type_declaration

  265 expr_new: "new" new_type_declaration
  266         | "new" new_type_declaration '(' use_initializer ')'
  267         | "new" new_type_declaration '(' expr_list ')'
  268         | "new" new_type_declaration '(' make_struct_single ')'
  269         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  270         | "new" make_decl

  271 expression_break: "break"

  272 expression_continue: "continue"

  273 expression_return: "return"
  274                  | "return" expr
  275                  | "return" "<-" expr

  276 expression_yield: "yield" expr
  277                 | "yield" "<-" expr

  278 expression_try_catch: "try" expression_block "recover" expression_block

  279 kwd_let_var_or_nothing: "let"
  280                       | "var"
  281                       | %empty

  282 kwd_let: "let"
  283        | "var"

  284 optional_in_scope: "inscope"
  285                  | %empty

  286 tuple_expansion: "name"
  287                | tuple_expansion ',' "name"

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  289                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

  290 expression_let: kwd_let optional_in_scope let_variable_declaration
  291               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  292               | kwd_let optional_in_scope "begin of code block" variable_declaration_list "end of code block"

  293 $@13: %empty

  294 $@14: %empty

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  296 $@15: %empty

  297 $@16: %empty

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  299 $@17: %empty

  300 $@18: %empty

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  302 $@19: %empty

  303 $@20: %empty

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  305 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  306               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  308 expr_list: expr
  309          | expr_list ',' expr

  310 block_or_simple_block: expression_block
  311                      | "=>" expr
  312                      | "=>" "<-" expr

  313 block_or_lambda: '$'
  314                | '@'
  315                | '@' '@'

  316 capture_entry: '&' "name"
  317              | '=' "name"
  318              | "<-" "name"
  319              | ":=" "name"
  320              | "name" '(' "name" ')'

  321 capture_list: capture_entry
  322             | capture_list ',' capture_entry

  323 optional_capture_list: %empty
  324                      | "capture" '(' capture_list ')'

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block
  327                              | "begin of code block" expressions "end of code block"

  328 expr_numeric_const: "integer constant"
  329                   | "unsigned integer constant"
  330                   | "long integer constant"
  331                   | "unsigned long integer constant"
  332                   | "unsigned int8 constant"
  333                   | "floating point constant"
  334                   | "double constant"

  335 expr_assign: expr
  336            | expr '=' expr
  337            | expr "<-" expr
  338            | expr ":=" expr
  339            | expr "&=" expr
  340            | expr "|=" expr
  341            | expr "^=" expr
  342            | expr "&&=" expr
  343            | expr "||=" expr
  344            | expr "^^=" expr
  345            | expr "+=" expr
  346            | expr "-=" expr
  347            | expr "*=" expr
  348            | expr "/=" expr
  349            | expr "%=" expr
  350            | expr "<<=" expr
  351            | expr ">>=" expr
  352            | expr "<<<=" expr
  353            | expr ">>>=" expr

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  355                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  356 expr_method_call: expr "->" "name" '(' ')'
  357                 | expr "->" "name" '(' expr_list ')'

  358 func_addr_name: name_in_namespace
  359               | "$i" '(' expr ')'

  360 func_addr_expr: '@' '@' func_addr_name

  361 $@21: %empty

  362 $@22: %empty

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  364 $@23: %empty

  365 $@24: %empty

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  367 expr_field: expr '.' "name"
  368           | expr '.' '.' "name"
  369           | expr '.' "name" '(' ')'
  370           | expr '.' "name" '(' expr_list ')'
  371           | expr '.' basic_type_declaration '(' ')'
  372           | expr '.' basic_type_declaration '(' expr_list ')'

  373 $@25: %empty

  374 $@26: %empty

  375 expr_field: expr '.' $@25 error $@26

  376 expr_call: name_in_namespace '(' ')'
  377          | name_in_namespace '(' "uninitialized" ')'
  378          | name_in_namespace '(' make_struct_single ')'
  379          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  380          | name_in_namespace '(' expr_list ')'
  381          | basic_type_declaration '(' ')'
  382          | basic_type_declaration '(' expr_list ')'

  383 expr: "null"
  384     | name_in_namespace
  385     | expr_numeric_const
  386     | expr_reader
  387     | string_builder
  388     | make_decl
  389     | "true"
  390     | "false"
  391     | expr_field
  392     | expr_mtag
  393     | '!' expr
  394     | '~' expr
  395     | '+' expr
  396     | '-' expr
  397     | expr "<<" expr
  398     | expr ">>" expr
  399     | expr "<<<" expr
  400     | expr ">>>" expr
  401     | expr '+' expr
  402     | expr '-' expr
  403     | expr '*' expr
  404     | expr '/' expr
  405     | expr '%' expr
  406     | expr '<' expr
  407     | expr '>' expr
  408     | expr "==" expr
  409     | expr "!=" expr
  410     | expr "<=" expr
  411     | expr ">=" expr
  412     | expr '&' expr
  413     | expr '|' expr
  414     | expr '^' expr
  415     | expr "&&" expr
  416     | expr "||" expr
  417     | expr "^^" expr
  418     | expr ".." expr
  419     | "++" expr
  420     | "--" expr
  421     | expr "++"
  422     | expr "--"
  423     | '(' expr_list optional_comma ')'
  424     | expr '[' expr ']'
  425     | expr '.' '[' expr ']'
  426     | expr "?[" expr ']'
  427     | expr '.' "?[" expr ']'
  428     | expr "?." "name"
  429     | expr '.' "?." "name"
  430     | func_addr_expr
  431     | expr_call
  432     | '*' expr
  433     | "deref" '(' expr ')'
  434     | "addr" '(' expr ')'
  435     | expr_generator
  436     | expr "??" expr
  437     | expr '?' expr ':' expr

  438 $@27: %empty

  439 $@28: %empty

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr "is" basic_type_declaration
  442     | expr "is" "name"
  443     | expr "as" "name"

  444 $@29: %empty

  445 $@30: %empty

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr "as" basic_type_declaration
  448     | expr '?' "as" "name"

  449 $@31: %empty

  450 $@32: %empty

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' "as" basic_type_declaration
  453     | expr_type_info
  454     | expr_type_decl
  455     | expr_cast
  456     | expr_new
  457     | expr_method_call
  458     | expr_named_call
  459     | expr_full_block
  460     | expr "<|" expr
  461     | expr "|>" expr
  462     | expr "|>" basic_type_declaration
  463     | expr_call_pipe
  464     | "unsafe" '(' expr ')'

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  466               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  467               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_semis expression_block

  468 expr_mtag: "$$" '(' expr ')'
  469          | "$i" '(' expr ')'
  470          | "$v" '(' expr ')'
  471          | "$b" '(' expr ')'
  472          | "$a" '(' expr ')'
  473          | "..."
  474          | "$c" '(' expr ')' '(' ')'
  475          | "$c" '(' expr ')' '(' expr_list ')'
  476          | expr '.' "$f" '(' expr ')'
  477          | expr "?." "$f" '(' expr ')'
  478          | expr '.' '.' "$f" '(' expr ')'
  479          | expr '.' "?." "$f" '(' expr ')'
  480          | expr "as" "$f" '(' expr ')'
  481          | expr '?' "as" "$f" '(' expr ')'
  482          | expr "is" "$f" '(' expr ')'
  483          | '@' '@' "$c" '(' expr ')'

  484 optional_field_annotation: %empty
  485                          | metadata_argument_list

  486 optional_override: %empty
  487                  | "override"
  488                  | "sealed"

  489 optional_constant: %empty
  490                  | "const"

  491 optional_public_or_private_member_variable: %empty
  492                                           | "public"
  493                                           | "private"

  494 optional_static_member_variable: %empty
  495                                | "static"

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  497 struct_variable_declaration_list: %empty

  498 $@33: %empty

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration "end of expression"

  500 $@34: %empty

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header "end of expression"

  502 $@35: %empty

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

  504 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  505                              | "$a" '(' expr ')'

  506 function_argument_list: function_argument_declaration
  507                       | function_argument_list "end of expression" function_argument_declaration

  508 tuple_type: type_declaration
  509           | "name" ':' type_declaration

  510 tuple_type_list: tuple_type
  511                | tuple_type_list c_or_s tuple_type

  512 tuple_alias_type_list: %empty
  513                      | tuple_alias_type_list c_or_s
  514                      | tuple_alias_type_list tuple_type c_or_s

  515 variant_type: "name" ':' type_declaration

  516 variant_type_list: variant_type
  517                  | variant_type_list c_or_s variant_type

  518 variant_alias_type_list: %empty
  519                        | variant_alias_type_list c_or_s
  520                        | variant_alias_type_list variant_type c_or_s

  521 copy_or_move: '='
  522             | "<-"

  523 variable_declaration: variable_name_with_pos_list
  524                     | variable_name_with_pos_list '&'
  525                     | variable_name_with_pos_list ':' type_declaration
  526                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  527                     | variable_name_with_pos_list copy_or_move expr

  528 copy_or_move_or_clone: '='
  529                      | "<-"
  530                      | ":="

  531 optional_ref: %empty
  532             | '&'

  533 let_variable_name_with_pos_list: "name"
  534                                | "$i" '(' expr ')'
  535                                | "name" "aka" "name"
  536                                | let_variable_name_with_pos_list ',' "name"
  537                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  538 global_let_variable_name_with_pos_list: "name"
  539                                       | global_let_variable_name_with_pos_list ',' "name"

  540 variable_declaration_list: %empty
  541                          | variable_declaration_list "end of expression"
  542                          | variable_declaration_list let_variable_declaration

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  544                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  545                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression"
  547                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  548                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression"

  549 optional_shared: %empty
  550                | "shared"

  551 optional_public_or_private_variable: %empty
  552                                    | "private"
  553                                    | "public"

  554 global_variable_declaration_list: %empty
  555                                 | global_variable_declaration_list "end of expression"

  556 $@36: %empty

  557 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  558 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"

  559 $@37: %empty

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

  561 enum_expression: "name"
  562                | "name" '=' expr

  563 enum_list: %empty
  564          | enum_expression
  565          | enum_list ',' enum_expression

  566 optional_public_or_private_alias: %empty
  567                                 | "private"
  568                                 | "public"

  569 $@38: %empty

  570 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  571 alias_declaration: "typedef" single_alias "end of expression"

  572 optional_public_or_private_enum: %empty
  573                                | "private"
  574                                | "public"

  575 enum_name: "name"

  576 optional_enum_basic_type_declaration: %empty
  577                                     | ':' enum_basic_type_declaration

  578 $@39: %empty

  579 $@40: %empty

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma $@40 "end of code block"

  581 optional_structure_parent: %empty
  582                          | ':' name_in_namespace

  583 optional_sealed: %empty
  584                | "sealed"

  585 structure_name: optional_sealed "name" optional_structure_parent

  586 class_or_struct: "class"
  587                | "struct"

  588 optional_public_or_private_structure: %empty
  589                                     | "private"
  590                                     | "public"

  591 optional_struct_variable_declaration_list: %empty
  592                                          | "begin of code block" struct_variable_declaration_list "end of code block"

  593 $@41: %empty

  594 $@42: %empty

  595 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 optional_struct_variable_declaration_list

  596 variable_name_with_pos_list: "name"
  597                            | "$i" '(' expr ')'
  598                            | "name" "aka" "name"
  599                            | variable_name_with_pos_list ',' "name"
  600                            | variable_name_with_pos_list ',' "name" "aka" "name"

  601 basic_type_declaration: "bool"
  602                       | "string"
  603                       | "int"
  604                       | "int8"
  605                       | "int16"
  606                       | "int64"
  607                       | "int2"
  608                       | "int3"
  609                       | "int4"
  610                       | "uint"
  611                       | "uint8"
  612                       | "uint16"
  613                       | "uint64"
  614                       | "uint2"
  615                       | "uint3"
  616                       | "uint4"
  617                       | "float"
  618                       | "float2"
  619                       | "float3"
  620                       | "float4"
  621                       | "void"
  622                       | "range"
  623                       | "urange"
  624                       | "range64"
  625                       | "urange64"
  626                       | "double"
  627                       | "bitfield"

  628 enum_basic_type_declaration: "int"
  629                            | "int8"
  630                            | "int16"
  631                            | "uint"
  632                            | "uint8"
  633                            | "uint16"
  634                            | "int64"
  635                            | "uint64"

  636 structure_type_declaration: name_in_namespace

  637 auto_type_declaration: "auto"
  638                      | "auto" '(' "name" ')'
  639                      | "$t" '(' expr ')'

  640 bitfield_bits: "name"
  641              | bitfield_bits "end of expression" "name"

  642 bitfield_alias_bits: %empty
  643                    | "name"
  644                    | bitfield_alias_bits ',' "name"

  645 $@43: %empty

  646 $@44: %empty

  647 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44

  648 c_or_s: ','
  649       | "end of expression"

  650 table_type_pair: type_declaration
  651                | type_declaration c_or_s type_declaration

  652 dim_list: '[' expr ']'
  653         | '[' ']'
  654         | dim_list '[' expr ']'
  655         | dim_list '[' ']'

  656 type_declaration_no_options: type_declaration_no_options_no_dim
  657                            | type_declaration_no_options_no_dim dim_list

  658 type_declaration_no_options_no_dim: basic_type_declaration
  659                                   | auto_type_declaration
  660                                   | bitfield_type_declaration
  661                                   | structure_type_declaration

  662 $@45: %empty

  663 $@46: %empty

  664 type_declaration_no_options_no_dim: "type" '<' $@45 type_declaration '>' $@46
  665                                   | "typedecl" '(' expr ')'
  666                                   | '$' name_in_namespace '(' optional_expr_list ')'

  667 $@47: %empty

  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@47 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  669                                   | type_declaration_no_options_no_dim '-' '[' ']'
  670                                   | type_declaration_no_options_no_dim "explicit"
  671                                   | type_declaration_no_options_no_dim "const"
  672                                   | type_declaration_no_options_no_dim '-' "const"
  673                                   | type_declaration_no_options_no_dim '&'
  674                                   | type_declaration_no_options_no_dim '-' '&'
  675                                   | type_declaration_no_options_no_dim '#'
  676                                   | type_declaration_no_options_no_dim "implicit"
  677                                   | type_declaration_no_options_no_dim '-' '#'
  678                                   | type_declaration_no_options_no_dim "==" "const"
  679                                   | type_declaration_no_options_no_dim "==" '&'
  680                                   | type_declaration_no_options_no_dim '?'

  681 $@48: %empty

  682 $@49: %empty

  683 type_declaration_no_options_no_dim: "smart_ptr" '<' $@48 type_declaration '>' $@49
  684                                   | type_declaration_no_options_no_dim "??"

  685 $@50: %empty

  686 $@51: %empty

  687 type_declaration_no_options_no_dim: "array" '<' $@50 type_declaration '>' $@51

  688 $@52: %empty

  689 $@53: %empty

  690 type_declaration_no_options_no_dim: "table" '<' $@52 table_type_pair '>' $@53

  691 $@54: %empty

  692 $@55: %empty

  693 type_declaration_no_options_no_dim: "iterator" '<' $@54 type_declaration '>' $@55
  694                                   | "block"

  695 $@56: %empty

  696 $@57: %empty

  697 type_declaration_no_options_no_dim: "block" '<' $@56 type_declaration '>' $@57

  698 $@58: %empty

  699 $@59: %empty

  700 type_declaration_no_options_no_dim: "block" '<' $@58 optional_function_argument_list optional_function_type '>' $@59
  701                                   | "function"

  702 $@60: %empty

  703 $@61: %empty

  704 type_declaration_no_options_no_dim: "function" '<' $@60 type_declaration '>' $@61

  705 $@62: %empty

  706 $@63: %empty

  707 type_declaration_no_options_no_dim: "function" '<' $@62 optional_function_argument_list optional_function_type '>' $@63
  708                                   | "lambda"

  709 $@64: %empty

  710 $@65: %empty

  711 type_declaration_no_options_no_dim: "lambda" '<' $@64 type_declaration '>' $@65

  712 $@66: %empty

  713 $@67: %empty

  714 type_declaration_no_options_no_dim: "lambda" '<' $@66 optional_function_argument_list optional_function_type '>' $@67

  715 $@68: %empty

  716 $@69: %empty

  717 type_declaration_no_options_no_dim: "tuple" '<' $@68 tuple_type_list '>' $@69

  718 $@70: %empty

  719 $@71: %empty

  720 type_declaration_no_options_no_dim: "variant" '<' $@70 variant_type_list '>' $@71

  721 type_declaration: type_declaration_no_options
  722                 | type_declaration '|' type_declaration_no_options
  723                 | type_declaration '|' '#'

  724 $@72: %empty

  725 $@73: %empty

  726 $@74: %empty

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@72 "begin of code block" $@73 tuple_alias_type_list $@74 "end of code block"

  728 $@75: %empty

  729 $@76: %empty

  730 $@77: %empty

  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@75 "begin of code block" $@76 variant_alias_type_list $@77 "end of code block"

  732 $@78: %empty

  733 $@79: %empty

  734 $@80: %empty

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 "begin of code block" $@79 bitfield_alias_bits optional_comma $@80 "end of code block"

  736 make_decl: make_struct_decl
  737          | make_dim_decl
  738          | make_table_decl
  739          | array_comprehension
  740          | make_tuple_call

  741 make_struct_fields: "name" copy_or_move expr
  742                   | "name" ":=" expr
  743                   | make_struct_fields ',' "name" copy_or_move expr
  744                   | make_struct_fields ',' "name" ":=" expr
  745                   | "$f" '(' expr ')' copy_or_move expr
  746                   | "$f" '(' expr ')' ":=" expr
  747                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  749 make_variant_dim: make_struct_fields

  750 make_struct_single: make_struct_fields

  751 make_struct_dim_list: '(' make_struct_fields ')'
  752                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  753 make_struct_dim_decl: make_struct_fields
  754                     | make_struct_dim_list optional_comma

  755 optional_make_struct_dim_decl: make_struct_dim_decl
  756                              | %empty

  757 use_initializer: %empty
  758                | "uninitialized"

  759 $@81: %empty

  760 $@82: %empty

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

  762 $@83: %empty

  763 $@84: %empty

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

  765 $@85: %empty

  766 $@86: %empty

  767 make_struct_decl: "variant" '<' $@85 type_declaration_no_options '>' $@86 '(' make_variant_dim ')'

  768 $@87: %empty

  769 $@88: %empty

  770 make_struct_decl: "default" '<' $@87 type_declaration_no_options '>' $@88 use_initializer

  771 make_map_tuple: expr "=>" expr
  772               | expr

  773 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  774 $@89: %empty

  775 $@90: %empty

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  777 make_dim_decl: '[' expr_list optional_comma ']'

  778 $@91: %empty

  779 $@92: %empty

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  781 $@93: %empty

  782 $@94: %empty

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

  784 $@95: %empty

  785 $@96: %empty

  786 make_dim_decl: "array" "variant" '<' $@95 type_declaration_no_options '>' $@96 '(' make_variant_dim ')'
  787              | "array" '(' expr_list optional_comma ')'

  788 $@97: %empty

  789 $@98: %empty

  790 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' optional_expr_list ')'
  791              | "fixed_array" '(' expr_list optional_comma ')'

  792 $@99: %empty

  793 $@100: %empty

  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

  795 expr_map_tuple_list: make_map_tuple
  796                    | expr_map_tuple_list ',' make_map_tuple

  797 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block"
  798                | "table" '(' expr_map_tuple_list optional_comma ')'
  799                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  800                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  801 array_comprehension_where: %empty
  802                          | "end of expression" "where" expr

  803 optional_comma: %empty
  804               | ','

  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  806                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  807                    | "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 113 129 393
    '#' (35) 675 677 723
    '$' (36) 20 313 666 668
    '%' (37) 36 40 149 405
    '&' (38) 157 316 412 524 532 673 674 679
    '(' (40) 59 74 75 77 80 82 102 111 117 124 125 266 267 268 269 288 289 305 306 307 320 324 354 355 356 357 359 369 370 371 372 376 377 378 379 380 381 382 423 433 434 464 465 466 468 469 470 471 472 474 475 476 477 478 479 480 481 482 483 505 534 597 638 639 665 666 668 745 746 747 748 751 752 761 764 767 773 776 780 783 786 787 790 791 794 798 799 800 805 806 807
    ')' (41) 59 74 75 77 80 82 102 111 117 124 125 266 267 268 269 288 289 305 306 307 320 324 354 355 356 357 359 369 370 371 372 376 377 378 379 380 381 382 423 433 434 464 465 466 468 469 470 471 472 474 475 476 477 478 479 480 481 482 483 505 534 597 638 639 665 666 668 745 746 747 748 751 752 761 764 767 773 776 780 783 786 787 790 791 794 798 799 800 805 806 807
    '*' (42) 147 403 432
    '+' (43) 145 395 401
    ',' (44) 49 91 104 120 287 309 322 355 536 537 539 565 599 600 644 648 743 744 747 748 752 796 804
    '-' (45) 146 396 402 669 672 674 677
    '.' (46) 41 174 176 177 367 368 369 370 371 372 375 425 427 429 476 478 479
    '/' (47) 42 148 404
    ':' (58) 51 52 127 288 437 509 515 525 526 543 544 546 547 577 582
    "end of expression" (59) 8 9 15 16 69 70 75 228 229 230 235 237 238 239 240 244 245 246 288 289 499 501 507 541 543 544 545 546 547 548 555 571 641 649 802 805 806 807
    '<' (60) 150 263 295 298 301 304 306 307 363 366 406 440 446 451 465 466 467 647 664 668 683 687 690 693 697 700 704 707 711 714 717 720 761 764 767 770 776 780 783 786 790 794 799 800
    '=' (61) 83 95 96 97 98 99 100 102 317 336 521 528 562 570
    '>' (62) 151 263 295 298 301 304 306 307 363 366 407 440 446 451 465 466 467 647 664 668 683 687 690 693 697 700 704 707 711 714 717 720 761 764 767 770 776 780 783 786 790 794 799 800
    '?' (63) 186 187 437 448 451 452 481 680
    '@' (64) 105 106 314 315 360 363 366 483
    '[' (91) 122 172 354 355 424 425 652 653 654 655 669 777 805 806
    ']' (93) 122 172 173 354 355 424 425 426 427 652 653 654 655 669 777 805 806
    '^' (94) 159 414
    "begin of code block" (123) 223 226 292 327 558 580 592 727 731 735 797 807
    '|' (124) 158 413 722 723
    "end of code block" (125) 223 226 292 327 558 580 592 727 731 735 797 807
    '~' (126) 130 394
    error (256) 249 375
    "lexer error" (258)
    "capture" (259) 324
    "struct" (260) 587 761 780
    "class" (261) 586 764
    "let" (262) 279 282
    "def" (263) 213 501 503
    "while" (264) 80
    "if" (265) 60 75
    "static_if" (266) 61
    "else" (267) 58 63
    "for" (268) 77 805 806 807
    "recover" (269) 278
    "true" (270) 88 99 389
    "false" (271) 89 100 390
    "new" (272) 265 266 267 268 269 270
    "typeinfo" (273) 305 306 307
    "type" (274) 93 304 440 446 451 664
    "in" (275) 77 94 805 806 807
    "is" (276) 182 184 440 441 442 482
    "as" (277) 44 183 185 186 187 443 446 447 448 451 452 480 481
    "elif" (278) 55
    "static_elif" (279) 56
    "array" (280) 687 780 783 786 787 790
    "return" (281) 273 274 275
    "null" (282) 383
    "break" (283) 271
    "try" (284) 278
    "options" (285) 37
    "table" (286) 690 798 799 800
    "expect" (287) 47
    "const" (288) 490 671 672 678
    "require" (289) 38 108
    "operator" (290) 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    "enum" (291) 580
    "finally" (292) 223
    "delete" (293) 180 259 260
    "deref" (294) 433
    "typedef" (295) 571
    "typedecl" (296) 665
    "with" (297) 82
    "aka" (298) 535 537 598 600
    "assume" (299) 83
    "cast" (300) 295
    "override" (301) 487
    "abstract" (302) 501
    "upcast" (303) 298
    "iterator" (304) 693 806
    "var" (305) 280 283
    "addr" (306) 434
    "continue" (307) 272
    "where" (308) 802
    "pass" (309) 246
    "reinterpret" (310) 301
    "module" (311) 22
    "public" (312) 18 46 216 492 553 568 574 590
    "label" (313) 52 53
    "goto" (314) 53 54
    "implicit" (315) 676
    "explicit" (316) 260 670
    "shared" (317) 550
    "private" (318) 19 109 215 493 552 567 573 589
    "smart_ptr" (319) 683
    "unsafe" (320) 78 464
    "inscope" (321) 284
    "static" (322) 495
    "fixed_array" (323) 791 794
    "default" (324) 770
    "uninitialized" (325) 269 377 379 758
    "bool" (326) 188 601
    "void" (327) 621
    "string" (328) 189 602
    "auto" (329) 637 638
    "int" (330) 190 603 628
    "int2" (331) 191 607
    "int3" (332) 192 608
    "int4" (333) 193 609
    "uint" (334) 194 610 631
    "bitfield" (335) 627 647 735
    "uint2" (336) 195 614
    "uint3" (337) 196 615
    "uint4" (338) 197 616
    "float" (339) 198 617
    "float2" (340) 199 618
    "float3" (341) 200 619
    "float4" (342) 201 620
    "range" (343) 202 622
    "urange" (344) 203 623
    "range64" (345) 204 624
    "urange64" (346) 205 625
    "block" (347) 694 697 700
    "int64" (348) 206 606 634
    "uint64" (349) 207 613 635
    "double" (350) 208 626
    "function" (351) 701 704 707
    "lambda" (352) 708 711 714
    "int8" (353) 209 604 629
    "uint8" (354) 210 611 632
    "int16" (355) 211 605 630
    "uint16" (356) 212 612 633
    "tuple" (357) 717 727 773 776 783
    "variant" (358) 720 731 767 786
    "generator" (359) 465 466 467
    "yield" (360) 276 277
    "sealed" (361) 488 584
    "+=" (362) 131 345
    "-=" (363) 132 346
    "/=" (364) 134 348
    "*=" (365) 133 347
    "%=" (366) 135 349
    "&=" (367) 136 339
    "|=" (368) 137 340
    "^=" (369) 138 341
    "<<" (370) 164 397
    ">>" (371) 165 398
    "++" (372) 160 162 419 421
    "--" (373) 161 163 420 422
    "<=" (374) 155 410
    "<<=" (375) 166 350
    ">>=" (376) 167 351
    ">=" (377) 156 411
    "==" (378) 153 408 678 679
    "!=" (379) 154 409
    "->" (380) 356 357
    "<-" (381) 275 277 312 318 337 522 529
    "??" (382) 181 436 684
    "?." (383) 175 178 428 429 477 479
    "?[" (384) 173 426 427
    "<|" (385) 460
    "|>" (386) 118 461 462
    ":=" (387) 177 179 319 338 530 742 744 746 748
    "<<<" (388) 168 399
    ">>>" (389) 169 400
    "<<<=" (390) 170 352
    ">>>=" (391) 171 353
    "=>" (392) 311 312 771
    "::" (393) 257 258
    "&&" (394) 114 142 415
    "||" (395) 115 143 416
    "^^" (396) 116 144 417
    "&&=" (397) 139 342
    "||=" (398) 140 343
    "^^=" (399) 141 344
    ".." (400) 152 418
    "$$" (401) 468
    "$i" (402) 359 469 534 597
    "$v" (403) 470
    "$b" (404) 471
    "$a" (405) 472 505
    "$t" (406) 639
    "$c" (407) 474 475 483
    "$f" (408) 476 477 478 479 480 481 482 745 746 747 748
    "..." (409) 473
    "integer constant" <i> (410) 50 51 52 53 86 97 328
    "long integer constant" <i64> (411) 330
    "unsigned integer constant" <ui> (412) 329
    "unsigned long integer constant" <ui64> (413) 331
    "unsigned int8 constant" <ui> (414) 332
    "floating point constant" <fd> (415) 87 98 333
    "double constant" <d> (416) 334
    "name" <s> (417) 21 39 41 42 44 83 85 92 96 128 176 177 178 184 185 187 256 257 258 286 287 306 307 316 317 318 319 320 356 357 367 368 369 370 428 429 442 443 448 509 515 533 535 536 537 538 539 561 562 570 575 585 596 598 599 600 638 640 641 643 644 727 731 735 741 742 743 744
    "start of the string" (418) 27 28 32
    STRING_CHARACTER <ch> (419) 23 25 33 34
    STRING_CHARACTER_ESC (420) 24 26
    "end of the string" (421) 27 28 32
    "{" (422) 31
    "}" (423) 31
    "end of failed eader macro" (424)
    UNARY_MINUS (425)
    UNARY_PLUS (426)
    PRE_INC (427)
    PRE_DEC (428)
    LLPIPE (429)
    POST_INC (430)
    POST_DEC (431)
    DEREF (432)


Nonterminals, with rules where they appear

    $accept (205)
        on left: 0
    program (206)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (207)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (208)
        on left: 17 18 19
        on right: 22
    module_name <s> (209)
        on left: 20 21
        on right: 22
    module_declaration (210)
        on left: 22
        on right: 2
    character_sequence <s> (211)
        on left: 23 24 25 26
        on right: 25 26 27 30
    string_constant <s> (212)
        on left: 27 28
        on right: 84 95
    string_builder_body <pExpression> (213)
        on left: 29 30 31
        on right: 30 31 32
    string_builder <pExpression> (214)
        on left: 32
        on right: 387
    reader_character_sequence (215)
        on left: 33 34
        on right: 34 36
    expr_reader <pExpression> (216)
        on left: 36
        on right: 16 386
    $@1 (217)
        on left: 35
        on right: 36
    options_declaration (218)
        on left: 37
        on right: 9
    require_declaration (219)
        on left: 38
        on right: 8
    require_module_name <s> (220)
        on left: 39 40 41 42
        on right: 40 41 42 43 44
    require_module (221)
        on left: 43 44
        on right: 38
    is_public_module <b> (222)
        on left: 45 46
        on right: 43 44
    expect_declaration (223)
        on left: 47
        on right: 7
    expect_list (224)
        on left: 48 49
        on right: 47 49
    expect_error (225)
        on left: 50 51
        on right: 48 49
    expression_label <pExpression> (226)
        on left: 52
        on right: 244
    expression_goto <pExpression> (227)
        on left: 53 54
        on right: 245
    elif_or_static_elif <b> (228)
        on left: 55 56
        on right: 59
    expression_else <pExpression> (229)
        on left: 57 58 59
        on right: 59 74
    if_or_static_if <b> (230)
        on left: 60 61
        on right: 74
    expression_else_one_liner <pExpression> (231)
        on left: 62 63
        on right: 75
    expression_if_one_liner <pExpression> (232)
        on left: 64 65 66 67 68
        on right: 63 75
    optional_semi_list (233)
        on left: 69 70
        on right: 70 72
    optional_semis (234)
        on left: 71 72
        on right: 58 59 74 77 78 80 82 325 326 467
    expression_if_then_else <pExpression> (235)
        on left: 74
        on right: 241
    $@2 (236)
        on left: 73
        on right: 74
    expression_if_then_else_oneliner <pExpression> (237)
        on left: 75
        on right: 242
    expression_for_loop <pExpression> (238)
        on left: 77
        on right: 236
    $@3 (239)
        on left: 76
        on right: 77
    expression_unsafe <pExpression> (240)
        on left: 78
        on right: 233
    expression_while_loop <pExpression> (241)
        on left: 80
        on right: 232
    $@4 (242)
        on left: 79
        on right: 80
    expression_with <pExpression> (243)
        on left: 82
        on right: 234
    $@5 (244)
        on left: 81
        on right: 82
    expression_with_alias <pExpression> (245)
        on left: 83
        on right: 235
    annotation_argument_value <aa> (246)
        on left: 84 85 86 87 88 89
        on right: 90 91
    annotation_argument_value_list <aaList> (247)
        on left: 90 91
        on right: 91 102
    annotation_argument_name <s> (248)
        on left: 92 93 94
        on right: 95 96 97 98 99 100 101 102
    annotation_argument <aa> (249)
        on left: 95 96 97 98 99 100 101 102
        on right: 103 104 105 106
    annotation_argument_list <aaList> (250)
        on left: 103 104
        on right: 37 104 111
    metadata_argument_list <aaList> (251)
        on left: 105 106
        on right: 106 485
    annotation_declaration_name <s> (252)
        on left: 107 108 109
        on right: 110 111
    annotation_declaration_basic <fa> (253)
        on left: 110 111
        on right: 112
    annotation_declaration <fa> (254)
        on left: 112 113 114 115 116 117 118
        on right: 113 114 115 116 117 118 119 120
    annotation_list <faList> (255)
        on left: 119 120
        on right: 120 122
    optional_annotation_list <faList> (256)
        on left: 121 122
        on right: 213 325 326 501 503 580 595
    optional_function_argument_list <pVarDeclList> (257)
        on left: 123 124 125
        on right: 217 325 326 366 700 707 714
    optional_function_type <pTypeDecl> (258)
        on left: 126 127
        on right: 217 325 326 366 700 707 714
    function_name <s> (259)
        on left: 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212
        on right: 217
    global_function_declaration (260)
        on left: 213
        on right: 6
    optional_public_or_private_function <b> (261)
        on left: 214 215 216
        on right: 219
    function_declaration_header <pFuncDecl> (262)
        on left: 217
        on right: 219 501 503
    function_declaration <pFuncDecl> (263)
        on left: 219
        on right: 213
    $@6 (264)
        on left: 218
        on right: 219
    expression_block_finally <pExpression> (265)
        on left: 220 223
        on right: 226
    $@7 (266)
        on left: 221
        on right: 223
    $@8 (267)
        on left: 222
        on right: 223
    expression_block <pExpression> (268)
        on left: 226
        on right: 58 59 74 77 78 80 82 219 278 310 326 467 503
    $@9 (269)
        on left: 224
        on right: 226
    $@10 (270)
        on left: 225
        on right: 226
    expr_call_pipe <pExpression> (271)
        on left: 227
        on right: 463
    expression_any <pExpression> (272)
        on left: 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246
        on right: 248
    expressions <pExpression> (273)
        on left: 247 248 249
        on right: 223 226 248 249 327
    optional_expr_list <pExpression> (274)
        on left: 250 251
        on right: 666 668 790
    optional_expr_map_tuple_list <pExpression> (275)
        on left: 252 253
        on right: 799 800
    type_declaration_no_options_list <pTypeDeclList> (276)
        on left: 254 255
        on right: 255 668
    name_in_namespace <s> (277)
        on left: 256 257 258
        on right: 36 107 305 306 307 354 355 358 376 377 378 379 380 384 582 636 666 668
    expression_delete <pExpression> (278)
        on left: 259 260
        on right: 230
    new_type_declaration <pTypeDecl> (279)
        on left: 263 264
        on right: 265 266 267 268 269
    $@11 (280)
        on left: 261
        on right: 263
    $@12 (281)
        on left: 262
        on right: 263
    expr_new <pExpression> (282)
        on left: 265 266 267 268 269 270
        on right: 456
    expression_break <pExpression> (283)
        on left: 271
        on right: 67 237
    expression_continue <pExpression> (284)
        on left: 272
        on right: 68 238
    expression_return <pExpression> (285)
        on left: 273 274 275
        on right: 65 239
    expression_yield <pExpression> (286)
        on left: 276 277
        on right: 66 240
    expression_try_catch <pExpression> (287)
        on left: 278
        on right: 243
    kwd_let_var_or_nothing <b> (288)
        on left: 279 280 281
        on right: 504
    kwd_let <b> (289)
        on left: 282 283
        on right: 290 291 292 558 560
    optional_in_scope <b> (290)
        on left: 284 285
        on right: 290 291 292
    tuple_expansion <pNameList> (291)
        on left: 286 287
        on right: 287 288 289
    tuple_expansion_variable_declaration <pVarDecl> (292)
        on left: 288 289
        on right: 291
    expression_let <pExpression> (293)
        on left: 290 291 292
        on right: 231
    expr_cast <pExpression> (294)
        on left: 295 298 301
        on right: 455
    $@13 (295)
        on left: 293
        on right: 295
    $@14 (296)
        on left: 294
        on right: 295
    $@15 (297)
        on left: 296
        on right: 298
    $@16 (298)
        on left: 297
        on right: 298
    $@17 (299)
        on left: 299
        on right: 301
    $@18 (300)
        on left: 300
        on right: 301
    expr_type_decl <pExpression> (301)
        on left: 304
        on right: 454
    $@19 (302)
        on left: 302
        on right: 304
    $@20 (303)
        on left: 303
        on right: 304
    expr_type_info <pExpression> (304)
        on left: 305 306 307
        on right: 453
    expr_list <pExpression> (305)
        on left: 308 309
        on right: 77 251 267 309 355 357 370 372 380 382 423 475 773 777 787 791 794 805 806 807
    block_or_simple_block <pExpression> (306)
        on left: 310 311 312
        on right: 325
    block_or_lambda <i> (307)
        on left: 313 314 315
        on right: 325 326
    capture_entry <pCapt> (308)
        on left: 316 317 318 319 320
        on right: 321 322
    capture_list <pCaptList> (309)
        on left: 321 322
        on right: 322 324
    optional_capture_list <pCaptList> (310)
        on left: 323 324
        on right: 325 326 465 466 467
    expr_full_block <pExpression> (311)
        on left: 325
        on right: 459
    expr_full_block_assumed_piped <pExpression> (312)
        on left: 326 327
        on right: 227
    expr_numeric_const <pExpression> (313)
        on left: 328 329 330 331 332 333 334
        on right: 385
    expr_assign <pExpression> (314)
        on left: 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353
        on right: 229
    expr_named_call <pExpression> (315)
        on left: 354 355
        on right: 458
    expr_method_call <pExpression> (316)
        on left: 356 357
        on right: 457
    func_addr_name <pExpression> (317)
        on left: 358 359
        on right: 360 363 366
    func_addr_expr <pExpression> (318)
        on left: 360 363 366
        on right: 430
    $@21 (319)
        on left: 361
        on right: 363
    $@22 (320)
        on left: 362
        on right: 363
    $@23 (321)
        on left: 364
        on right: 366
    $@24 (322)
        on left: 365
        on right: 366
    expr_field <pExpression> (323)
        on left: 367 368 369 370 371 372 375
        on right: 391
    $@25 (324)
        on left: 373
        on right: 375
    $@26 (325)
        on left: 374
        on right: 375
    expr_call <pExpression> (326)
        on left: 376 377 378 379 380 381 382
        on right: 227 431
    expr <pExpression> (327)
        on left: 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 440 441 442 443 446 447 448 451 452 453 454 455 456 457 458 459 460 461 462 463 464
        on right
    $@27 (328)
        on left: 438
        on right: 440
    $@28 (329)
        on left: 439
        on right: 440
    $@29 (330)
        on left: 444
        on right: 446
    $@30 (331)
        on left: 445
        on right: 446
    $@31 (332)
        on left: 449
        on right: 451
    $@32 (333)
        on left: 450
        on right: 451
    expr_generator <pExpression> (334)
        on left: 465 466 467
        on right: 435
    expr_mtag <pExpression> (335)
        on left: 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483
        on right: 392
    optional_field_annotation <aaList> (336)
        on left: 484 485
        on right: 496 504 557 560
    optional_override <i> (337)
        on left: 486 487 488
        on right: 496 503
    optional_constant <b> (338)
        on left: 489 490
        on right: 501 503
    optional_public_or_private_member_variable <b> (339)
        on left: 491 492 493
        on right: 496 501 503
    optional_static_member_variable <b> (340)
        on left: 494 495
        on right: 496 503
    structure_variable_declaration <pVarDecl> (341)
        on left: 496
        on right: 499
    struct_variable_declaration_list <pVarDeclList> (342)
        on left: 497 499 501 503
        on right: 499 501 503 592
    $@33 (343)
        on left: 498
        on right: 499
    $@34 (344)
        on left: 500
        on right: 501
    $@35 (345)
        on left: 502
        on right: 503
    function_argument_declaration <pVarDecl> (346)
        on left: 504 505
        on right: 506 507
    function_argument_list <pVarDeclList> (347)
        on left: 506 507
        on right: 125 507
    tuple_type <pVarDecl> (348)
        on left: 508 509
        on right: 510 511 514
    tuple_type_list <pVarDeclList> (349)
        on left: 510 511
        on right: 511 717
    tuple_alias_type_list <pVarDeclList> (350)
        on left: 512 513 514
        on right: 513 514 727
    variant_type <pVarDecl> (351)
        on left: 515
        on right: 516 517 520
    variant_type_list <pVarDeclList> (352)
        on left: 516 517
        on right: 517 720
    variant_alias_type_list <pVarDeclList> (353)
        on left: 518 519 520
        on right: 519 520 731
    copy_or_move <b> (354)
        on left: 521 522
        on right: 526 527 741 743 745 747
    variable_declaration <pVarDecl> (355)
        on left: 523 524 525 526 527
        on right: 496 504
    copy_or_move_or_clone <i> (356)
        on left: 528 529 530
        on right: 288 289 544 545 547 548
    optional_ref <b> (357)
        on left: 531 532
        on right: 289 545 548
    let_variable_name_with_pos_list <pNameWithPosList> (358)
        on left: 533 534 535 536 537
        on right: 536 537 543 544 545
    global_let_variable_name_with_pos_list <pNameWithPosList> (359)
        on left: 538 539
        on right: 539 546 547 548
    variable_declaration_list <pVarDeclList> (360)
        on left: 540 541 542
        on right: 292 541 542
    let_variable_declaration <pVarDecl> (361)
        on left: 543 544 545
        on right: 290 542 557
    global_let_variable_declaration <pVarDecl> (362)
        on left: 546 547 548
        on right: 560
    optional_shared <b> (363)
        on left: 549 550
        on right: 22 558 560
    optional_public_or_private_variable <b> (364)
        on left: 551 552 553
        on right: 558 560
    global_variable_declaration_list <pVarDeclList> (365)
        on left: 554 555 557
        on right: 555 557 558
    $@36 (366)
        on left: 556
        on right: 557
    global_let (367)
        on left: 558 560
        on right: 5
    $@37 (368)
        on left: 559
        on right: 560
    enum_expression <pEnumPair> (369)
        on left: 561 562
        on right: 564 565
    enum_list <pEnum> (370)
        on left: 563 564 565
        on right: 565 580
    optional_public_or_private_alias <b> (371)
        on left: 566 567 568
        on right: 570 727 731 735
    single_alias (372)
        on left: 570
        on right: 571
    $@38 (373)
        on left: 569
        on right: 570
    alias_declaration (374)
        on left: 571
        on right: 10
    optional_public_or_private_enum <b> (375)
        on left: 572 573 574
        on right: 580
    enum_name <pEnum> (376)
        on left: 575
        on right: 580
    optional_enum_basic_type_declaration <type> (377)
        on left: 576 577
        on right: 580
    enum_declaration (378)
        on left: 580
        on right: 4
    $@39 (379)
        on left: 578
        on right: 580
    $@40 (380)
        on left: 579
        on right: 580
    optional_structure_parent <s> (381)
        on left: 581 582
        on right: 585
    optional_sealed <b> (382)
        on left: 583 584
        on right: 585
    structure_name <pStructure> (383)
        on left: 585
        on right: 595
    class_or_struct <b> (384)
        on left: 586 587
        on right: 595
    optional_public_or_private_structure <b> (385)
        on left: 588 589 590
        on right: 595
    optional_struct_variable_declaration_list <pVarDeclList> (386)
        on left: 591 592
        on right: 595
    structure_declaration (387)
        on left: 595
        on right: 3
    $@41 (388)
        on left: 593
        on right: 595
    $@42 (389)
        on left: 594
        on right: 595
    variable_name_with_pos_list <pNameWithPosList> (390)
        on left: 596 597 598 599 600
        on right: 77 523 524 525 526 527 599 600 805 806 807
    basic_type_declaration <type> (391)
        on left: 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627
        on right: 371 372 381 382 441 447 452 462 658
    enum_basic_type_declaration <type> (392)
        on left: 628 629 630 631 632 633 634 635
        on right: 577
    structure_type_declaration <pTypeDecl> (393)
        on left: 636
        on right: 264 661
    auto_type_declaration <pTypeDecl> (394)
        on left: 637 638 639
        on right: 659
    bitfield_bits <pNameList> (395)
        on left: 640 641
        on right: 641 647
    bitfield_alias_bits <pNameList> (396)
        on left: 642 643 644
        on right: 644 735
    bitfield_type_declaration <pTypeDecl> (397)
        on left: 647
        on right: 660
    $@43 (398)
        on left: 645
        on right: 647
    $@44 (399)
        on left: 646
        on right: 647
    c_or_s (400)
        on left: 648 649
        on right: 255 307 511 513 514 517 519 520 651 800
    table_type_pair <aTypePair> (401)
        on left: 650 651
        on right: 690
    dim_list <pTypeDecl> (402)
        on left: 652 653 654 655
        on right: 654 655 657
    type_declaration_no_options <pTypeDecl> (403)
        on left: 656 657
        on right: 288 295 298 301 363 440 465 466 467 543 544 546 547 721 722 761 764 767 770 776 780 783 786 790 794 799 800
    type_declaration_no_options_no_dim <pTypeDecl> (404)
        on left: 658 659 660 661 664 665 666 668 669 670 671 672 673 674 675 676 677 678 679 680 683 684 687 690 693 694 697 700 701 704 707 708 711 714 717 720
        on right: 656 657 669 670 671 672 673 674 675 676 677 678 679 680 684
    $@45 (405)
        on left: 662
        on right: 664
    $@46 (406)
        on left: 663
        on right: 664
    $@47 (407)
        on left: 667
        on right: 668
    $@48 (408)
        on left: 681
        on right: 683
    $@49 (409)
        on left: 682
        on right: 683
    $@50 (410)
        on left: 685
        on right: 687
    $@51 (411)
        on left: 686
        on right: 687
    $@52 (412)
        on left: 688
        on right: 690
    $@53 (413)
        on left: 689
        on right: 690
    $@54 (414)
        on left: 691
        on right: 693
    $@55 (415)
        on left: 692
        on right: 693
    $@56 (416)
        on left: 695
        on right: 697
    $@57 (417)
        on left: 696
        on right: 697
    $@58 (418)
        on left: 698
        on right: 700
    $@59 (419)
        on left: 699
        on right: 700
    $@60 (420)
        on left: 702
        on right: 704
    $@61 (421)
        on left: 703
        on right: 704
    $@62 (422)
        on left: 705
        on right: 707
    $@63 (423)
        on left: 706
        on right: 707
    $@64 (424)
        on left: 709
        on right: 711
    $@65 (425)
        on left: 710
        on right: 711
    $@66 (426)
        on left: 712
        on right: 714
    $@67 (427)
        on left: 713
        on right: 714
    $@68 (428)
        on left: 715
        on right: 717
    $@69 (429)
        on left: 716
        on right: 717
    $@70 (430)
        on left: 718
        on right: 720
    $@71 (431)
        on left: 719
        on right: 720
    type_declaration <pTypeDecl> (432)
        on left: 721 722 723
        on right: 127 254 255 263 304 446 451 508 509 515 525 526 570 650 651 664 683 687 693 697 704 711 722 723
    tuple_alias_declaration (433)
        on left: 727
        on right: 12
    $@72 (434)
        on left: 724
        on right: 727
    $@73 (435)
        on left: 725
        on right: 727
    $@74 (436)
        on left: 726
        on right: 727
    variant_alias_declaration (437)
        on left: 731
        on right: 11
    $@75 (438)
        on left: 728
        on right: 731
    $@76 (439)
        on left: 729
        on right: 731
    $@77 (440)
        on left: 730
        on right: 731
    bitfield_alias_declaration (441)
        on left: 735
        on right: 13
    $@78 (442)
        on left: 732
        on right: 735
    $@79 (443)
        on left: 733
        on right: 735
    $@80 (444)
        on left: 734
        on right: 735
    make_decl <pExpression> (445)
        on left: 736 737 738 739 740
        on right: 270 388
    make_struct_fields <pMakeStruct> (446)
        on left: 741 742 743 744 745 746 747 748
        on right: 354 355 743 744 747 748 749 750 751 752 753
    make_variant_dim <pExpression> (447)
        on left: 749
        on right: 767 786
    make_struct_single <pExpression> (448)
        on left: 750
        on right: 268 269 378 379
    make_struct_dim_list <pExpression> (449)
        on left: 751 752
        on right: 752 754
    make_struct_dim_decl <pExpression> (450)
        on left: 753 754
        on right: 755
    optional_make_struct_dim_decl <pExpression> (451)
        on left: 755 756
        on right: 761 764 776 780 783
    use_initializer <b> (452)
        on left: 757 758
        on right: 266 761 764 770 776 780 783
    make_struct_decl <pExpression> (453)
        on left: 761 764 767 770
        on right: 736
    $@81 (454)
        on left: 759
        on right: 761
    $@82 (455)
        on left: 760
        on right: 761
    $@83 (456)
        on left: 762
        on right: 764
    $@84 (457)
        on left: 763
        on right: 764
    $@85 (458)
        on left: 765
        on right: 767
    $@86 (459)
        on left: 766
        on right: 767
    $@87 (460)
        on left: 768
        on right: 770
    $@88 (461)
        on left: 769
        on right: 770
    make_map_tuple <pExpression> (462)
        on left: 771 772
        on right: 795 796 807
    make_tuple_call <pExpression> (463)
        on left: 773 776
        on right: 740
    $@89 (464)
        on left: 774
        on right: 776
    $@90 (465)
        on left: 775
        on right: 776
    make_dim_decl <pExpression> (466)
        on left: 777 780 783 786 787 790 791 794
        on right: 737
    $@91 (467)
        on left: 778
        on right: 780
    $@92 (468)
        on left: 779
        on right: 780
    $@93 (469)
        on left: 781
        on right: 783
    $@94 (470)
        on left: 782
        on right: 783
    $@95 (471)
        on left: 784
        on right: 786
    $@96 (472)
        on left: 785
        on right: 786
    $@97 (473)
        on left: 788
        on right: 790
    $@98 (474)
        on left: 789
        on right: 790
    $@99 (475)
        on left: 792
        on right: 794
    $@100 (476)
        on left: 793
        on right: 794
    expr_map_tuple_list <pExpression> (477)
        on left: 795 796
        on right: 253 796 797 798
    make_table_decl <pExpression> (478)
        on left: 797 798 799 800
        on right: 738
    array_comprehension_where <pExpression> (479)
        on left: 801 802
        on right: 805 806 807
    optional_comma <b> (480)
        on left: 803 804
        on right: 251 253 423 580 735 754 773 777 787 791 794 797 798
    array_comprehension <pExpression> (481)
        on left: 805 806 807
        on right: 739


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration "end of expression"
    9        | program . options_declaration "end of expression"
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . "end of expression"

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of expression"  shift, and go to state 13
    '%'                  shift, and go to state 14
    '['                  shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  282 kwd_let: "let" .

    $default  reduce using rule 282 (kwd_let)


State 4

   37 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   47 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   38 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  571 alias_declaration: "typedef" . single_alias "end of expression"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 566 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  283 kwd_let: "var" .

    $default  reduce using rule 283 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  735 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias "name" $@78 "begin of code block" $@79 bitfield_alias_bits optional_comma $@80 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 566 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 52


State 11

  727 tuple_alias_declaration: "tuple" . optional_public_or_private_alias "name" $@72 "begin of code block" $@73 tuple_alias_type_list $@74 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 566 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 53


State 12

  731 variant_alias_declaration: "variant" . optional_public_or_private_alias "name" $@75 "begin of code block" $@76 variant_alias_type_list $@77 "end of code block"

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 566 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 54


State 13

   15 program: program "end of expression" .

    $default  reduce using rule 15 (program)


State 14

   36 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 15

  122 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   16 top_level_reader_macro: expr_reader . "end of expression"

    "end of expression"  shift, and go to state 68


State 19

    9 program: program options_declaration . "end of expression"

    "end of expression"  shift, and go to state 69


State 20

    8 program: program require_declaration . "end of expression"

    "end of expression"  shift, and go to state 70


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  213 global_function_declaration: optional_annotation_list . "def" function_declaration
  580 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma $@40 "end of code block"
  595 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@41 structure_name $@42 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 71
    "class"   shift, and go to state 72
    "def"     shift, and go to state 73
    "enum"    shift, and go to state 74

    class_or_struct  go to state 75


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  558 global_let: kwd_let . optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  560           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 76

    $default  reduce using rule 549 (optional_shared)

    optional_shared  go to state 77


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

   93 annotation_argument_name: "type" .

    $default  reduce using rule 93 (annotation_argument_name)


State 33

   94 annotation_argument_name: "in" .

    $default  reduce using rule 94 (annotation_argument_name)


State 34

   92 annotation_argument_name: "name" .

    $default  reduce using rule 92 (annotation_argument_name)


State 35

   95 annotation_argument: annotation_argument_name . '=' string_constant
   96                    | annotation_argument_name . '=' "name"
   97                    | annotation_argument_name . '=' "integer constant"
   98                    | annotation_argument_name . '=' "floating point constant"
   99                    | annotation_argument_name . '=' "true"
  100                    | annotation_argument_name . '=' "false"
  101                    | annotation_argument_name .
  102                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 78

    $default  reduce using rule 101 (annotation_argument)


State 36

  103 annotation_argument_list: annotation_argument .

    $default  reduce using rule 103 (annotation_argument_list)


State 37

   37 options_declaration: "options" annotation_argument_list .
  104 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 79

    $default  reduce using rule 37 (options_declaration)


State 38

   50 expect_error: "integer constant" .
   51             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 80

    $default  reduce using rule 50 (expect_error)


State 39

   47 expect_declaration: "expect" expect_list .
   49 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 81

    $default  reduce using rule 47 (expect_declaration)


State 40

   48 expect_list: expect_error .

    $default  reduce using rule 48 (expect_list)


State 41

   39 require_module_name: "name" .

    $default  reduce using rule 39 (require_module_name)


State 42

   40 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 82


State 43

   41 require_module_name: require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"
   43 require_module: require_module_name . is_public_module
   44               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 83
    "public"  shift, and go to state 84
    '/'       shift, and go to state 85
    '.'       shift, and go to state 86

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 87


State 44

   38 require_declaration: "require" require_module .

    $default  reduce using rule 38 (require_declaration)


State 45

  568 optional_public_or_private_alias: "public" .

    $default  reduce using rule 568 (optional_public_or_private_alias)


State 46

  567 optional_public_or_private_alias: "private" .

    $default  reduce using rule 567 (optional_public_or_private_alias)


State 47

  570 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 88


State 48

  571 alias_declaration: "typedef" single_alias . "end of expression"

    "end of expression"  shift, and go to state 89


State 49

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 50

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 51

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 76

    $default  reduce using rule 549 (optional_shared)

    optional_shared  go to state 90


State 52

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . "name" $@78 "begin of code block" $@79 bitfield_alias_bits optional_comma $@80 "end of code block"

    "name"  shift, and go to state 91


State 53

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias . "name" $@72 "begin of code block" $@73 tuple_alias_type_list $@74 "end of code block"

    "name"  shift, and go to state 92


State 54

  731 variant_alias_declaration: "variant" optional_public_or_private_alias . "name" $@75 "begin of code block" $@76 variant_alias_type_list $@77 "end of code block"

    "name"  shift, and go to state 93


State 55

  258 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 94


State 56

  256 name_in_namespace: "name" .
  257                  | "name" . "::" "name"

    "::"  shift, and go to state 95

    $default  reduce using rule 256 (name_in_namespace)


State 57

   36 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 35 ($@1)

    $@1  go to state 96


State 58

  108 annotation_declaration_name: "require" .

    $default  reduce using rule 108 (annotation_declaration_name)


State 59

  109 annotation_declaration_name: "private" .

    $default  reduce using rule 109 (annotation_declaration_name)


State 60

  118 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 61

  113 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 98
    name_in_namespace             go to state 67


State 62

  117 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 99
    name_in_namespace             go to state 67


State 63

  110 annotation_declaration_basic: annotation_declaration_name .
  111                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 100

    $default  reduce using rule 110 (annotation_declaration_basic)


State 64

  112 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 112 (annotation_declaration)


State 65

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  119 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 119 (annotation_list)


State 66

  120 annotation_list: annotation_list . ',' annotation_declaration
  122 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 104
    ']'  shift, and go to state 105


State 67

  107 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 107 (annotation_declaration_name)


State 68

   16 top_level_reader_macro: expr_reader "end of expression" .

    $default  reduce using rule 16 (top_level_reader_macro)


State 69

    9 program: program options_declaration "end of expression" .

    $default  reduce using rule 9 (program)


State 70

    8 program: program require_declaration "end of expression" .

    $default  reduce using rule 8 (program)


State 71

  587 class_or_struct: "struct" .

    $default  reduce using rule 587 (class_or_struct)


State 72

  586 class_or_struct: "class" .

    $default  reduce using rule 586 (class_or_struct)


State 73

  213 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 106
    "private"  shift, and go to state 107

    $default  reduce using rule 214 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 108
    function_declaration                 go to state 109


State 74

  580 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma $@40 "end of code block"

    "public"   shift, and go to state 110
    "private"  shift, and go to state 111

    $default  reduce using rule 572 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 112


State 75

  595 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@41 structure_name $@42 optional_struct_variable_declaration_list

    "public"   shift, and go to state 113
    "private"  shift, and go to state 114

    $default  reduce using rule 588 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 115


State 76

  550 optional_shared: "shared" .

    $default  reduce using rule 550 (optional_shared)


State 77

  558 global_let: kwd_let optional_shared . optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block"
  560           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 116
    "private"  shift, and go to state 117

    $default  reduce using rule 551 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 118


State 78

   95 annotation_argument: annotation_argument_name '=' . string_constant
   96                    | annotation_argument_name '=' . "name"
   97                    | annotation_argument_name '=' . "integer constant"
   98                    | annotation_argument_name '=' . "floating point constant"
   99                    | annotation_argument_name '=' . "true"
  100                    | annotation_argument_name '=' . "false"
  102                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 119
    "false"                    shift, and go to state 120
    "integer constant"         shift, and go to state 121
    "floating point constant"  shift, and go to state 122
    "name"                     shift, and go to state 123
    "start of the string"      shift, and go to state 124
    '('                        shift, and go to state 125

    string_constant  go to state 126


State 79

  104 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 127


State 80

   51 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 128


State 81

   49 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 129


State 82

   40 require_module_name: '%' require_module_name .
   41                    | require_module_name . '.' "name"
   42                    | require_module_name . '/' "name"

    '.'  shift, and go to state 86

    $default  reduce using rule 40 (require_module_name)


State 83

   44 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 130


State 84

   46 is_public_module: "public" .

    $default  reduce using rule 46 (is_public_module)


State 85

   42 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 131


State 86

   41 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 132


State 87

   43 require_module: require_module_name is_public_module .

    $default  reduce using rule 43 (require_module)


State 88

  570 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 569 ($@38)

    $@38  go to state 133


State 89

  571 alias_declaration: "typedef" single_alias "end of expression" .

    $default  reduce using rule 571 (alias_declaration)


State 90

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 134
    "private"  shift, and go to state 135

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 136


State 91

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" . $@78 "begin of code block" $@79 bitfield_alias_bits optional_comma $@80 "end of code block"

    $default  reduce using rule 732 ($@78)

    $@78  go to state 137


State 92

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" . $@72 "begin of code block" $@73 tuple_alias_type_list $@74 "end of code block"

    $default  reduce using rule 724 ($@72)

    $@72  go to state 138


State 93

  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" . $@75 "begin of code block" $@76 variant_alias_type_list $@77 "end of code block"

    $default  reduce using rule 728 ($@75)

    $@75  go to state 139


State 94

  258 name_in_namespace: "::" "name" .

    $default  reduce using rule 258 (name_in_namespace)


State 95

  257 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 140


State 96

   36 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 141

    reader_character_sequence  go to state 142


State 97

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  118                       | "|>" annotation_declaration .

    $default  reduce using rule 118 (annotation_declaration)


State 98

  113 annotation_declaration: '!' annotation_declaration .
  114                       | annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 113 (annotation_declaration)


State 99

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  117                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103
    ')'   shift, and go to state 143


State 100

  111 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 144


State 101

  114 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 145
    name_in_namespace             go to state 67


State 102

  115 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 146
    name_in_namespace             go to state 67


State 103

  116 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 147
    name_in_namespace             go to state 67


State 104

  120 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 148
    name_in_namespace             go to state 67


State 105

  122 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 122 (optional_annotation_list)


State 106

  216 optional_public_or_private_function: "public" .

    $default  reduce using rule 216 (optional_public_or_private_function)


State 107

  215 optional_public_or_private_function: "private" .

    $default  reduce using rule 215 (optional_public_or_private_function)


State 108

  219 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 218 ($@6)

    $@6  go to state 149


State 109

  213 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 213 (global_function_declaration)


State 110

  574 optional_public_or_private_enum: "public" .

    $default  reduce using rule 574 (optional_public_or_private_enum)


State 111

  573 optional_public_or_private_enum: "private" .

    $default  reduce using rule 573 (optional_public_or_private_enum)


State 112

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma $@40 "end of code block"

    "name"  shift, and go to state 150

    enum_name  go to state 151


State 113

  590 optional_public_or_private_structure: "public" .

    $default  reduce using rule 590 (optional_public_or_private_structure)


State 114

  589 optional_public_or_private_structure: "private" .

    $default  reduce using rule 589 (optional_public_or_private_structure)


State 115

  595 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@41 structure_name $@42 optional_struct_variable_declaration_list

    $default  reduce using rule 593 ($@41)

    $@41  go to state 152


State 116

  553 optional_public_or_private_variable: "public" .

    $default  reduce using rule 553 (optional_public_or_private_variable)


State 117

  552 optional_public_or_private_variable: "private" .

    $default  reduce using rule 552 (optional_public_or_private_variable)


State 118

  558 global_let: kwd_let optional_shared optional_public_or_private_variable . "begin of code block" global_variable_declaration_list "end of code block"
  560           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation global_let_variable_declaration

    "begin of code block"  shift, and go to state 153

    $default  reduce using rule 559 ($@37)

    $@37  go to state 154


State 119

   99 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 99 (annotation_argument)


State 120

  100 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 100 (annotation_argument)


State 121

   97 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 97 (annotation_argument)


State 122

   98 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 98 (annotation_argument)


State 123

   96 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 96 (annotation_argument)


State 124

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 155
    STRING_CHARACTER_ESC  shift, and go to state 156
    "end of the string"   shift, and go to state 157

    character_sequence  go to state 158


State 125

  102 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 124

    string_constant                 go to state 164
    annotation_argument_value       go to state 165
    annotation_argument_value_list  go to state 166


State 126

   95 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 95 (annotation_argument)


State 127

  104 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 104 (annotation_argument_list)


State 128

   51 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 51 (expect_error)


State 129

   49 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 49 (expect_list)


State 130

   44 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 84

    $default  reduce using rule 45 (is_public_module)

    is_public_module  go to state 167


State 131

   42 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 42 (require_module_name)


State 132

   41 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 41 (require_module_name)


State 133

  570 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 168


State 134

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 135

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 136

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 137

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 . "begin of code block" $@79 bitfield_alias_bits optional_comma $@80 "end of code block"

    "begin of code block"  shift, and go to state 169


State 138

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@72 . "begin of code block" $@73 tuple_alias_type_list $@74 "end of code block"

    "begin of code block"  shift, and go to state 170


State 139

  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@75 . "begin of code block" $@76 variant_alias_type_list $@77 "end of code block"

    "begin of code block"  shift, and go to state 171


State 140

  257 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 257 (name_in_namespace)


State 141

   33 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 33 (reader_character_sequence)


State 142

   34 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   36 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 172

    $default  reduce using rule 36 (expr_reader)


State 143

  117 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 117 (annotation_declaration)


State 144

  104 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  111 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 79
    ')'  shift, and go to state 173


State 145

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  114                       | annotation_declaration "&&" annotation_declaration .
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 114 (annotation_declaration)


State 146

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  115                       | annotation_declaration "||" annotation_declaration .
  116                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 101
    "^^"  shift, and go to state 103

    $default  reduce using rule 115 (annotation_declaration)


State 147

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  116                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 101

    $default  reduce using rule 116 (annotation_declaration)


State 148

  114 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  115                       | annotation_declaration . "||" annotation_declaration
  116                       | annotation_declaration . "^^" annotation_declaration
  120 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 101
    "||"  shift, and go to state 102
    "^^"  shift, and go to state 103

    $default  reduce using rule 120 (annotation_list)


State 149

  219 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 204


State 150

  575 enum_name: "name" .

    $default  reduce using rule 575 (enum_name)


State 151

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma $@40 "end of code block"

    ':'  shift, and go to state 205

    $default  reduce using rule 576 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 206


State 152

  595 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 . structure_name $@42 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 207

    $default  reduce using rule 583 (optional_sealed)

    optional_sealed  go to state 208
    structure_name   go to state 209


State 153

  558 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" . global_variable_declaration_list "end of code block"

    $default  reduce using rule 554 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 210


State 154

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 213


State 155

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 156

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 157

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 158

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215
    "end of the string"   shift, and go to state 216


State 159

   88 annotation_argument_value: "true" .

    $default  reduce using rule 88 (annotation_argument_value)


State 160

   89 annotation_argument_value: "false" .

    $default  reduce using rule 89 (annotation_argument_value)


State 161

   86 annotation_argument_value: "integer constant" .

    $default  reduce using rule 86 (annotation_argument_value)


State 162

   87 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 87 (annotation_argument_value)


State 163

   85 annotation_argument_value: "name" .

    $default  reduce using rule 85 (annotation_argument_value)


State 164

   84 annotation_argument_value: string_constant .

    $default  reduce using rule 84 (annotation_argument_value)


State 165

   90 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 90 (annotation_argument_value_list)


State 166

   91 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  102 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 217
    ')'  shift, and go to state 218


State 167

   44 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 44 (require_module)


State 168

  570 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 267


State 169

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 "begin of code block" . $@79 bitfield_alias_bits optional_comma $@80 "end of code block"

    $default  reduce using rule 733 ($@79)

    $@79  go to state 268


State 170

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@72 "begin of code block" . $@73 tuple_alias_type_list $@74 "end of code block"

    $default  reduce using rule 725 ($@73)

    $@73  go to state 269


State 171

  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@75 "begin of code block" . $@76 variant_alias_type_list $@77 "end of code block"

    $default  reduce using rule 729 ($@76)

    $@76  go to state 270


State 172

   34 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 34 (reader_character_sequence)


State 173

  111 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 111 (annotation_declaration_basic)


State 174

  129 function_name: "operator" . '!'
  130              | "operator" . '~'
  131              | "operator" . "+="
  132              | "operator" . "-="
  133              | "operator" . "*="
  134              | "operator" . "/="
  135              | "operator" . "%="
  136              | "operator" . "&="
  137              | "operator" . "|="
  138              | "operator" . "^="
  139              | "operator" . "&&="
  140              | "operator" . "||="
  141              | "operator" . "^^="
  142              | "operator" . "&&"
  143              | "operator" . "||"
  144              | "operator" . "^^"
  145              | "operator" . '+'
  146              | "operator" . '-'
  147              | "operator" . '*'
  148              | "operator" . '/'
  149              | "operator" . '%'
  150              | "operator" . '<'
  151              | "operator" . '>'
  152              | "operator" . ".."
  153              | "operator" . "=="
  154              | "operator" . "!="
  155              | "operator" . "<="
  156              | "operator" . ">="
  157              | "operator" . '&'
  158              | "operator" . '|'
  159              | "operator" . '^'
  162              | "operator" . "++"
  163              | "operator" . "--"
  164              | "operator" . "<<"
  165              | "operator" . ">>"
  166              | "operator" . "<<="
  167              | "operator" . ">>="
  168              | "operator" . "<<<"
  169              | "operator" . ">>>"
  170              | "operator" . "<<<="
  171              | "operator" . ">>>="
  172              | "operator" . '[' ']'
  173              | "operator" . "?[" ']'
  174              | "operator" . '.'
  175              | "operator" . "?."
  176              | "operator" . '.' "name"
  177              | "operator" . '.' "name" ":="
  178              | "operator" . "?." "name"
  179              | "operator" . ":="
  180              | "operator" . "delete"
  181              | "operator" . "??"
  182              | "operator" . "is"
  183              | "operator" . "as"
  184              | "operator" . "is" "name"
  185              | "operator" . "as" "name"
  186              | "operator" . '?' "as"
  187              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 271
    "as"      shift, and go to state 272
    "delete"  shift, and go to state 273
    "+="      shift, and go to state 274
    "-="      shift, and go to state 275
    "/="      shift, and go to state 276
    "*="      shift, and go to state 277
    "%="      shift, and go to state 278
    "&="      shift, and go to state 279
    "|="      shift, and go to state 280
    "^="      shift, and go to state 281
    "<<"      shift, and go to state 282
    ">>"      shift, and go to state 283
    "++"      shift, and go to state 284
    "--"      shift, and go to state 285
    "<="      shift, and go to state 286
    "<<="     shift, and go to state 287
    ">>="     shift, and go to state 288
    ">="      shift, and go to state 289
    "=="      shift, and go to state 290
    "!="      shift, and go to state 291
    "??"      shift, and go to state 292
    "?."      shift, and go to state 293
    "?["      shift, and go to state 294
    ":="      shift, and go to state 295
    "<<<"     shift, and go to state 296
    ">>>"     shift, and go to state 297
    "<<<="    shift, and go to state 298
    ">>>="    shift, and go to state 299
    "&&"      shift, and go to state 300
    "||"      shift, and go to state 301
    "^^"      shift, and go to state 302
    "&&="     shift, and go to state 303
    "||="     shift, and go to state 304
    "^^="     shift, and go to state 305
    ".."      shift, and go to state 306
    '?'       shift, and go to state 307
    '|'       shift, and go to state 308
    '^'       shift, and go to state 309
    '&'       shift, and go to state 310
    '<'       shift, and go to state 311
    '>'       shift, and go to state 312
    '-'       shift, and go to state 313
    '+'       shift, and go to state 314
    '*'       shift, and go to state 315
    '/'       shift, and go to state 316
    '%'       shift, and go to state 317
    '~'       shift, and go to state 318
    '!'       shift, and go to state 319
    '.'       shift, and go to state 320
    '['       shift, and go to state 321


State 175

  188 function_name: "bool" .

    $default  reduce using rule 188 (function_name)


State 176

  189 function_name: "string" .

    $default  reduce using rule 189 (function_name)


State 177

  190 function_name: "int" .

    $default  reduce using rule 190 (function_name)


State 178

  191 function_name: "int2" .

    $default  reduce using rule 191 (function_name)


State 179

  192 function_name: "int3" .

    $default  reduce using rule 192 (function_name)


State 180

  193 function_name: "int4" .

    $default  reduce using rule 193 (function_name)


State 181

  194 function_name: "uint" .

    $default  reduce using rule 194 (function_name)


State 182

  195 function_name: "uint2" .

    $default  reduce using rule 195 (function_name)


State 183

  196 function_name: "uint3" .

    $default  reduce using rule 196 (function_name)


State 184

  197 function_name: "uint4" .

    $default  reduce using rule 197 (function_name)


State 185

  198 function_name: "float" .

    $default  reduce using rule 198 (function_name)


State 186

  199 function_name: "float2" .

    $default  reduce using rule 199 (function_name)


State 187

  200 function_name: "float3" .

    $default  reduce using rule 200 (function_name)


State 188

  201 function_name: "float4" .

    $default  reduce using rule 201 (function_name)


State 189

  202 function_name: "range" .

    $default  reduce using rule 202 (function_name)


State 190

  203 function_name: "urange" .

    $default  reduce using rule 203 (function_name)


State 191

  204 function_name: "range64" .

    $default  reduce using rule 204 (function_name)


State 192

  205 function_name: "urange64" .

    $default  reduce using rule 205 (function_name)


State 193

  206 function_name: "int64" .

    $default  reduce using rule 206 (function_name)


State 194

  207 function_name: "uint64" .

    $default  reduce using rule 207 (function_name)


State 195

  208 function_name: "double" .

    $default  reduce using rule 208 (function_name)


State 196

  209 function_name: "int8" .

    $default  reduce using rule 209 (function_name)


State 197

  210 function_name: "uint8" .

    $default  reduce using rule 210 (function_name)


State 198

  211 function_name: "int16" .

    $default  reduce using rule 211 (function_name)


State 199

  212 function_name: "uint16" .

    $default  reduce using rule 212 (function_name)


State 200

  160 function_name: "++" . "operator"

    "operator"  shift, and go to state 322


State 201

  161 function_name: "--" . "operator"

    "operator"  shift, and go to state 323


State 202

  128 function_name: "name" .

    $default  reduce using rule 128 (function_name)


State 203

  217 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 324

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 325


State 204

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 326
    $@9               go to state 327


State 205

  577 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 328
    "uint"    shift, and go to state 329
    "int64"   shift, and go to state 330
    "uint64"  shift, and go to state 331
    "int8"    shift, and go to state 332
    "uint8"   shift, and go to state 333
    "int16"   shift, and go to state 334
    "uint16"  shift, and go to state 335

    enum_basic_type_declaration  go to state 336


State 206

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . "begin of code block" $@39 enum_list optional_comma $@40 "end of code block"

    "begin of code block"  shift, and go to state 337


State 207

  584 optional_sealed: "sealed" .

    $default  reduce using rule 584 (optional_sealed)


State 208

  585 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 338


State 209

  595 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name . $@42 optional_struct_variable_declaration_list

    $default  reduce using rule 594 ($@42)

    $@42  go to state 339


State 210

  555 global_variable_declaration_list: global_variable_declaration_list . "end of expression"
  557                                 | global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  558 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 340
    "end of expression"  shift, and go to state 341

    $default  reduce using rule 556 ($@36)

    $@36  go to state 342


State 211

  105 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 343


State 212

  106 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  485 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 344

    $default  reduce using rule 485 (optional_field_annotation)


State 213

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 345

    global_let_variable_name_with_pos_list  go to state 346
    global_let_variable_declaration         go to state 347


State 214

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 215

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 216

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 217

   91 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 159
    "false"                    shift, and go to state 160
    "integer constant"         shift, and go to state 161
    "floating point constant"  shift, and go to state 162
    "name"                     shift, and go to state 163
    "start of the string"      shift, and go to state 124

    string_constant            go to state 164
    annotation_argument_value  go to state 348


State 218

  102 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 102 (annotation_argument)


State 219

  664 type_declaration_no_options_no_dim: "type" . '<' $@45 type_declaration '>' $@46

    '<'  shift, and go to state 349


State 220

  687 type_declaration_no_options_no_dim: "array" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 350


State 221

  690 type_declaration_no_options_no_dim: "table" . '<' $@52 table_type_pair '>' $@53

    '<'  shift, and go to state 351


State 222

  665 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 352


State 223

  693 type_declaration_no_options_no_dim: "iterator" . '<' $@54 type_declaration '>' $@55

    '<'  shift, and go to state 353


State 224

  683 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@48 type_declaration '>' $@49

    '<'  shift, and go to state 354


State 225

  601 basic_type_declaration: "bool" .

    $default  reduce using rule 601 (basic_type_declaration)


State 226

  621 basic_type_declaration: "void" .

    $default  reduce using rule 621 (basic_type_declaration)


State 227

  602 basic_type_declaration: "string" .

    $default  reduce using rule 602 (basic_type_declaration)


State 228

  637 auto_type_declaration: "auto" .
  638                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 355

    $default  reduce using rule 637 (auto_type_declaration)


State 229

  603 basic_type_declaration: "int" .

    $default  reduce using rule 603 (basic_type_declaration)


State 230

  607 basic_type_declaration: "int2" .

    $default  reduce using rule 607 (basic_type_declaration)


State 231

  608 basic_type_declaration: "int3" .

    $default  reduce using rule 608 (basic_type_declaration)


State 232

  609 basic_type_declaration: "int4" .

    $default  reduce using rule 609 (basic_type_declaration)


State 233

  610 basic_type_declaration: "uint" .

    $default  reduce using rule 610 (basic_type_declaration)


State 234

  627 basic_type_declaration: "bitfield" .
  647 bitfield_type_declaration: "bitfield" . '<' $@43 bitfield_bits '>' $@44

    '<'  shift, and go to state 356

    $default  reduce using rule 627 (basic_type_declaration)


State 235

  614 basic_type_declaration: "uint2" .

    $default  reduce using rule 614 (basic_type_declaration)


State 236

  615 basic_type_declaration: "uint3" .

    $default  reduce using rule 615 (basic_type_declaration)


State 237

  616 basic_type_declaration: "uint4" .

    $default  reduce using rule 616 (basic_type_declaration)


State 238

  617 basic_type_declaration: "float" .

    $default  reduce using rule 617 (basic_type_declaration)


State 239

  618 basic_type_declaration: "float2" .

    $default  reduce using rule 618 (basic_type_declaration)


State 240

  619 basic_type_declaration: "float3" .

    $default  reduce using rule 619 (basic_type_declaration)


State 241

  620 basic_type_declaration: "float4" .

    $default  reduce using rule 620 (basic_type_declaration)


State 242

  622 basic_type_declaration: "range" .

    $default  reduce using rule 622 (basic_type_declaration)


State 243

  623 basic_type_declaration: "urange" .

    $default  reduce using rule 623 (basic_type_declaration)


State 244

  624 basic_type_declaration: "range64" .

    $default  reduce using rule 624 (basic_type_declaration)


State 245

  625 basic_type_declaration: "urange64" .

    $default  reduce using rule 625 (basic_type_declaration)


State 246

  694 type_declaration_no_options_no_dim: "block" .
  697                                   | "block" . '<' $@56 type_declaration '>' $@57
  700                                   | "block" . '<' $@58 optional_function_argument_list optional_function_type '>' $@59

    '<'  shift, and go to state 357

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 247

  606 basic_type_declaration: "int64" .

    $default  reduce using rule 606 (basic_type_declaration)


State 248

  613 basic_type_declaration: "uint64" .

    $default  reduce using rule 613 (basic_type_declaration)


State 249

  626 basic_type_declaration: "double" .

    $default  reduce using rule 626 (basic_type_declaration)


State 250

  701 type_declaration_no_options_no_dim: "function" .
  704                                   | "function" . '<' $@60 type_declaration '>' $@61
  707                                   | "function" . '<' $@62 optional_function_argument_list optional_function_type '>' $@63

    '<'  shift, and go to state 358

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 251

  708 type_declaration_no_options_no_dim: "lambda" .
  711                                   | "lambda" . '<' $@64 type_declaration '>' $@65
  714                                   | "lambda" . '<' $@66 optional_function_argument_list optional_function_type '>' $@67

    '<'  shift, and go to state 359

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 252

  604 basic_type_declaration: "int8" .

    $default  reduce using rule 604 (basic_type_declaration)


State 253

  611 basic_type_declaration: "uint8" .

    $default  reduce using rule 611 (basic_type_declaration)


State 254

  605 basic_type_declaration: "int16" .

    $default  reduce using rule 605 (basic_type_declaration)


State 255

  612 basic_type_declaration: "uint16" .

    $default  reduce using rule 612 (basic_type_declaration)


State 256

  717 type_declaration_no_options_no_dim: "tuple" . '<' $@68 tuple_type_list '>' $@69

    '<'  shift, and go to state 360


State 257

  720 type_declaration_no_options_no_dim: "variant" . '<' $@70 variant_type_list '>' $@71

    '<'  shift, and go to state 361


State 258

  639 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 362


State 259

  666 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  668                                   | '$' . name_in_namespace '<' $@47 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 363


State 260

  636 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 636 (structure_type_declaration)


State 261

  658 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 658 (type_declaration_no_options_no_dim)


State 262

  661 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 661 (type_declaration_no_options_no_dim)


State 263

  659 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 659 (type_declaration_no_options_no_dim)


State 264

  660 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 660 (type_declaration_no_options_no_dim)


State 265

  721 type_declaration: type_declaration_no_options .

    $default  reduce using rule 721 (type_declaration)


State 266

  656 type_declaration_no_options: type_declaration_no_options_no_dim .
  657                            | type_declaration_no_options_no_dim . dim_list
  669 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  670                                   | type_declaration_no_options_no_dim . "explicit"
  671                                   | type_declaration_no_options_no_dim . "const"
  672                                   | type_declaration_no_options_no_dim . '-' "const"
  673                                   | type_declaration_no_options_no_dim . '&'
  674                                   | type_declaration_no_options_no_dim . '-' '&'
  675                                   | type_declaration_no_options_no_dim . '#'
  676                                   | type_declaration_no_options_no_dim . "implicit"
  677                                   | type_declaration_no_options_no_dim . '-' '#'
  678                                   | type_declaration_no_options_no_dim . "==" "const"
  679                                   | type_declaration_no_options_no_dim . "==" '&'
  680                                   | type_declaration_no_options_no_dim . '?'
  684                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 364
    "implicit"  shift, and go to state 365
    "explicit"  shift, and go to state 366
    "=="        shift, and go to state 367
    "??"        shift, and go to state 368
    '?'         shift, and go to state 369
    '&'         shift, and go to state 370
    '-'         shift, and go to state 371
    '['         shift, and go to state 372
    '#'         shift, and go to state 373

    $default  reduce using rule 656 (type_declaration_no_options)

    dim_list  go to state 374


State 267

  570 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 570 (single_alias)


State 268

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 "begin of code block" $@79 . bitfield_alias_bits optional_comma $@80 "end of code block"

    "name"  shift, and go to state 376

    $default  reduce using rule 642 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 377


State 269

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@72 "begin of code block" $@73 . tuple_alias_type_list $@74 "end of code block"

    $default  reduce using rule 512 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 378


State 270

  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@75 "begin of code block" $@76 . variant_alias_type_list $@77 "end of code block"

    $default  reduce using rule 518 (variant_alias_type_list)

    variant_alias_type_list  go to state 379


State 271

  182 function_name: "operator" "is" .
  184              | "operator" "is" . "name"

    "name"  shift, and go to state 380

    $default  reduce using rule 182 (function_name)


State 272

  183 function_name: "operator" "as" .
  185              | "operator" "as" . "name"

    "name"  shift, and go to state 381

    $default  reduce using rule 183 (function_name)


State 273

  180 function_name: "operator" "delete" .

    $default  reduce using rule 180 (function_name)


State 274

  131 function_name: "operator" "+=" .

    $default  reduce using rule 131 (function_name)


State 275

  132 function_name: "operator" "-=" .

    $default  reduce using rule 132 (function_name)


State 276

  134 function_name: "operator" "/=" .

    $default  reduce using rule 134 (function_name)


State 277

  133 function_name: "operator" "*=" .

    $default  reduce using rule 133 (function_name)


State 278

  135 function_name: "operator" "%=" .

    $default  reduce using rule 135 (function_name)


State 279

  136 function_name: "operator" "&=" .

    $default  reduce using rule 136 (function_name)


State 280

  137 function_name: "operator" "|=" .

    $default  reduce using rule 137 (function_name)


State 281

  138 function_name: "operator" "^=" .

    $default  reduce using rule 138 (function_name)


State 282

  164 function_name: "operator" "<<" .

    $default  reduce using rule 164 (function_name)


State 283

  165 function_name: "operator" ">>" .

    $default  reduce using rule 165 (function_name)


State 284

  162 function_name: "operator" "++" .

    $default  reduce using rule 162 (function_name)


State 285

  163 function_name: "operator" "--" .

    $default  reduce using rule 163 (function_name)


State 286

  155 function_name: "operator" "<=" .

    $default  reduce using rule 155 (function_name)


State 287

  166 function_name: "operator" "<<=" .

    $default  reduce using rule 166 (function_name)


State 288

  167 function_name: "operator" ">>=" .

    $default  reduce using rule 167 (function_name)


State 289

  156 function_name: "operator" ">=" .

    $default  reduce using rule 156 (function_name)


State 290

  153 function_name: "operator" "==" .

    $default  reduce using rule 153 (function_name)


State 291

  154 function_name: "operator" "!=" .

    $default  reduce using rule 154 (function_name)


State 292

  181 function_name: "operator" "??" .

    $default  reduce using rule 181 (function_name)


State 293

  175 function_name: "operator" "?." .
  178              | "operator" "?." . "name"

    "name"  shift, and go to state 382

    $default  reduce using rule 175 (function_name)


State 294

  173 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 383


State 295

  179 function_name: "operator" ":=" .

    $default  reduce using rule 179 (function_name)


State 296

  168 function_name: "operator" "<<<" .

    $default  reduce using rule 168 (function_name)


State 297

  169 function_name: "operator" ">>>" .

    $default  reduce using rule 169 (function_name)


State 298

  170 function_name: "operator" "<<<=" .

    $default  reduce using rule 170 (function_name)


State 299

  171 function_name: "operator" ">>>=" .

    $default  reduce using rule 171 (function_name)


State 300

  142 function_name: "operator" "&&" .

    $default  reduce using rule 142 (function_name)


State 301

  143 function_name: "operator" "||" .

    $default  reduce using rule 143 (function_name)


State 302

  144 function_name: "operator" "^^" .

    $default  reduce using rule 144 (function_name)


State 303

  139 function_name: "operator" "&&=" .

    $default  reduce using rule 139 (function_name)


State 304

  140 function_name: "operator" "||=" .

    $default  reduce using rule 140 (function_name)


State 305

  141 function_name: "operator" "^^=" .

    $default  reduce using rule 141 (function_name)


State 306

  152 function_name: "operator" ".." .

    $default  reduce using rule 152 (function_name)


State 307

  186 function_name: "operator" '?' . "as"
  187              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 384


State 308

  158 function_name: "operator" '|' .

    $default  reduce using rule 158 (function_name)


State 309

  159 function_name: "operator" '^' .

    $default  reduce using rule 159 (function_name)


State 310

  157 function_name: "operator" '&' .

    $default  reduce using rule 157 (function_name)


State 311

  150 function_name: "operator" '<' .

    $default  reduce using rule 150 (function_name)


State 312

  151 function_name: "operator" '>' .

    $default  reduce using rule 151 (function_name)


State 313

  146 function_name: "operator" '-' .

    $default  reduce using rule 146 (function_name)


State 314

  145 function_name: "operator" '+' .

    $default  reduce using rule 145 (function_name)


State 315

  147 function_name: "operator" '*' .

    $default  reduce using rule 147 (function_name)


State 316

  148 function_name: "operator" '/' .

    $default  reduce using rule 148 (function_name)


State 317

  149 function_name: "operator" '%' .

    $default  reduce using rule 149 (function_name)


State 318

  130 function_name: "operator" '~' .

    $default  reduce using rule 130 (function_name)


State 319

  129 function_name: "operator" '!' .

    $default  reduce using rule 129 (function_name)


State 320

  174 function_name: "operator" '.' .
  176              | "operator" '.' . "name"
  177              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 385

    $default  reduce using rule 174 (function_name)


State 321

  172 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 386


State 322

  160 function_name: "++" "operator" .

    $default  reduce using rule 160 (function_name)


State 323

  161 function_name: "--" "operator" .

    $default  reduce using rule 161 (function_name)


State 324

  124 optional_function_argument_list: '(' . ')'
  125                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 387
    ')'   shift, and go to state 388
    '@'   shift, and go to state 211

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 389
    function_argument_declaration  go to state 390
    function_argument_list         go to state 391


State 325

  217 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 392

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 393


State 326

  219 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 219 (function_declaration)


State 327

  226 expression_block: $@9 . "begin of code block" expressions $@10 "end of code block" expression_block_finally

    "begin of code block"  shift, and go to state 394


State 328

  628 enum_basic_type_declaration: "int" .

    $default  reduce using rule 628 (enum_basic_type_declaration)


State 329

  631 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 631 (enum_basic_type_declaration)


State 330

  634 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 634 (enum_basic_type_declaration)


State 331

  635 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 635 (enum_basic_type_declaration)


State 332

  629 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 629 (enum_basic_type_declaration)


State 333

  632 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 632 (enum_basic_type_declaration)


State 334

  630 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 630 (enum_basic_type_declaration)


State 335

  633 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 633 (enum_basic_type_declaration)


State 336

  577 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 577 (optional_enum_basic_type_declaration)


State 337

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" . $@39 enum_list optional_comma $@40 "end of code block"

    $default  reduce using rule 578 ($@39)

    $@39  go to state 395


State 338

  585 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 396

    $default  reduce using rule 581 (optional_structure_parent)

    optional_structure_parent  go to state 397


State 339

  595 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 . optional_struct_variable_declaration_list

    "begin of code block"  shift, and go to state 398

    $default  reduce using rule 591 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 399


State 340

  558 global_let: kwd_let optional_shared optional_public_or_private_variable "begin of code block" global_variable_declaration_list "end of code block" .

    $default  reduce using rule 558 (global_let)


State 341

  555 global_variable_declaration_list: global_variable_declaration_list "end of expression" .

    $default  reduce using rule 555 (global_variable_declaration_list)


State 342

  557 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 211

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list     go to state 212
    optional_field_annotation  go to state 400


State 343

  105 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 105 (metadata_argument_list)


State 344

  106 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 401


State 345

  538 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 538 (global_let_variable_name_with_pos_list)


State 346

  539 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  546 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  547                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  548                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 402
    ':'  shift, and go to state 403
    '&'  shift, and go to state 404

    $default  reduce using rule 531 (optional_ref)

    optional_ref  go to state 405


State 347

  560 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 560 (global_let)


State 348

   91 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 91 (annotation_argument_value_list)


State 349

  664 type_declaration_no_options_no_dim: "type" '<' . $@45 type_declaration '>' $@46

    $default  reduce using rule 662 ($@45)

    $@45  go to state 406


State 350

  687 type_declaration_no_options_no_dim: "array" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 685 ($@50)

    $@50  go to state 407


State 351

  690 type_declaration_no_options_no_dim: "table" '<' . $@52 table_type_pair '>' $@53

    $default  reduce using rule 688 ($@52)

    $@52  go to state 408


State 352

  665 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 474
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 353

  693 type_declaration_no_options_no_dim: "iterator" '<' . $@54 type_declaration '>' $@55

    $default  reduce using rule 691 ($@54)

    $@54  go to state 484


State 354

  683 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@48 type_declaration '>' $@49

    $default  reduce using rule 681 ($@48)

    $@48  go to state 485


State 355

  638 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 486


State 356

  647 bitfield_type_declaration: "bitfield" '<' . $@43 bitfield_bits '>' $@44

    $default  reduce using rule 645 ($@43)

    $@43  go to state 487


State 357

  697 type_declaration_no_options_no_dim: "block" '<' . $@56 type_declaration '>' $@57
  700                                   | "block" '<' . $@58 optional_function_argument_list optional_function_type '>' $@59

    ':'       reduce using rule 698 ($@58)
    '>'       reduce using rule 698 ($@58)
    '('       reduce using rule 698 ($@58)
    $default  reduce using rule 695 ($@56)

    $@56  go to state 488
    $@58  go to state 489


State 358

  704 type_declaration_no_options_no_dim: "function" '<' . $@60 type_declaration '>' $@61
  707                                   | "function" '<' . $@62 optional_function_argument_list optional_function_type '>' $@63

    ':'       reduce using rule 705 ($@62)
    '>'       reduce using rule 705 ($@62)
    '('       reduce using rule 705 ($@62)
    $default  reduce using rule 702 ($@60)

    $@60  go to state 490
    $@62  go to state 491


State 359

  711 type_declaration_no_options_no_dim: "lambda" '<' . $@64 type_declaration '>' $@65
  714                                   | "lambda" '<' . $@66 optional_function_argument_list optional_function_type '>' $@67

    ':'       reduce using rule 712 ($@66)
    '>'       reduce using rule 712 ($@66)
    '('       reduce using rule 712 ($@66)
    $default  reduce using rule 709 ($@64)

    $@64  go to state 492
    $@66  go to state 493


State 360

  717 type_declaration_no_options_no_dim: "tuple" '<' . $@68 tuple_type_list '>' $@69

    $default  reduce using rule 715 ($@68)

    $@68  go to state 494


State 361

  720 type_declaration_no_options_no_dim: "variant" '<' . $@70 variant_type_list '>' $@71

    $default  reduce using rule 718 ($@70)

    $@70  go to state 495


State 362

  639 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 496
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 363

  666 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  668                                   | '$' name_in_namespace . '<' $@47 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 497
    '('  shift, and go to state 498


State 364

  671 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 671 (type_declaration_no_options_no_dim)


State 365

  676 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 676 (type_declaration_no_options_no_dim)


State 366

  670 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 670 (type_declaration_no_options_no_dim)


State 367

  678 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  679                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 499
    '&'      shift, and go to state 500


State 368

  684 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 684 (type_declaration_no_options_no_dim)


State 369

  680 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 680 (type_declaration_no_options_no_dim)


State 370

  673 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 673 (type_declaration_no_options_no_dim)


State 371

  669 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  672                                   | type_declaration_no_options_no_dim '-' . "const"
  674                                   | type_declaration_no_options_no_dim '-' . '&'
  677                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 501
    '&'      shift, and go to state 502
    '['      shift, and go to state 503
    '#'      shift, and go to state 504


State 372

  652 dim_list: '[' . expr ']'
  653         | '[' . ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    ']'                               shift, and go to state 505
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 506
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 373

  675 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 675 (type_declaration_no_options_no_dim)


State 374

  654 dim_list: dim_list . '[' expr ']'
  655         | dim_list . '[' ']'
  657 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 507

    $default  reduce using rule 657 (type_declaration_no_options)


State 375

  722 type_declaration: type_declaration '|' . type_declaration_no_options
  723                 | type_declaration '|' . '#'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259
    '#'          shift, and go to state 508

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 509
    type_declaration_no_options_no_dim  go to state 266


State 376

  643 bitfield_alias_bits: "name" .

    $default  reduce using rule 643 (bitfield_alias_bits)


State 377

  644 bitfield_alias_bits: bitfield_alias_bits . ',' "name"
  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 "begin of code block" $@79 bitfield_alias_bits . optional_comma $@80 "end of code block"

    ','  shift, and go to state 510

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 511


State 378

  513 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  514                      | tuple_alias_type_list . tuple_type c_or_s
  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@72 "begin of code block" $@73 tuple_alias_type_list . $@74 "end of code block"

    "type"               shift, and go to state 219
    "array"              shift, and go to state 220
    "table"              shift, and go to state 221
    "typedecl"           shift, and go to state 222
    "iterator"           shift, and go to state 223
    "smart_ptr"          shift, and go to state 224
    "bool"               shift, and go to state 225
    "void"               shift, and go to state 226
    "string"             shift, and go to state 227
    "auto"               shift, and go to state 228
    "int"                shift, and go to state 229
    "int2"               shift, and go to state 230
    "int3"               shift, and go to state 231
    "int4"               shift, and go to state 232
    "uint"               shift, and go to state 233
    "bitfield"           shift, and go to state 234
    "uint2"              shift, and go to state 235
    "uint3"              shift, and go to state 236
    "uint4"              shift, and go to state 237
    "float"              shift, and go to state 238
    "float2"             shift, and go to state 239
    "float3"             shift, and go to state 240
    "float4"             shift, and go to state 241
    "range"              shift, and go to state 242
    "urange"             shift, and go to state 243
    "range64"            shift, and go to state 244
    "urange64"           shift, and go to state 245
    "block"              shift, and go to state 246
    "int64"              shift, and go to state 247
    "uint64"             shift, and go to state 248
    "double"             shift, and go to state 249
    "function"           shift, and go to state 250
    "lambda"             shift, and go to state 251
    "int8"               shift, and go to state 252
    "uint8"              shift, and go to state 253
    "int16"              shift, and go to state 254
    "uint16"             shift, and go to state 255
    "tuple"              shift, and go to state 256
    "variant"            shift, and go to state 257
    "::"                 shift, and go to state 55
    "$t"                 shift, and go to state 258
    "name"               shift, and go to state 512
    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514
    '$'                  shift, and go to state 259

    $default  reduce using rule 726 ($@74)

    name_in_namespace                   go to state 260
    tuple_type                          go to state 515
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    c_or_s                              go to state 516
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 517
    $@74                                go to state 518


State 379

  519 variant_alias_type_list: variant_alias_type_list . c_or_s
  520                        | variant_alias_type_list . variant_type c_or_s
  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@75 "begin of code block" $@76 variant_alias_type_list . $@77 "end of code block"

    "name"               shift, and go to state 519
    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514

    $default  reduce using rule 730 ($@77)

    variant_type  go to state 520
    c_or_s        go to state 521
    $@77          go to state 522


State 380

  184 function_name: "operator" "is" "name" .

    $default  reduce using rule 184 (function_name)


State 381

  185 function_name: "operator" "as" "name" .

    $default  reduce using rule 185 (function_name)


State 382

  178 function_name: "operator" "?." "name" .

    $default  reduce using rule 178 (function_name)


State 383

  173 function_name: "operator" "?[" ']' .

    $default  reduce using rule 173 (function_name)


State 384

  186 function_name: "operator" '?' "as" .
  187              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 523

    $default  reduce using rule 186 (function_name)


State 385

  176 function_name: "operator" '.' "name" .
  177              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 524

    $default  reduce using rule 176 (function_name)


State 386

  172 function_name: "operator" '[' ']' .

    $default  reduce using rule 172 (function_name)


State 387

  505 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 525


State 388

  124 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 124 (optional_function_argument_list)


State 389

  504 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 526
    "var"  shift, and go to state 527

    $default  reduce using rule 281 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 528


State 390

  506 function_argument_list: function_argument_declaration .

    $default  reduce using rule 506 (function_argument_list)


State 391

  125 optional_function_argument_list: '(' function_argument_list . ')'
  507 function_argument_list: function_argument_list . "end of expression" function_argument_declaration

    "end of expression"  shift, and go to state 529
    ')'                  shift, and go to state 530


State 392

  127 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 531


State 393

  217 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 217 (function_declaration_header)


State 394

  226 expression_block: $@9 "begin of code block" . expressions $@10 "end of code block" expression_block_finally

    $default  reduce using rule 247 (expressions)

    expressions  go to state 532


State 395

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 . enum_list optional_comma $@40 "end of code block"

    "name"  shift, and go to state 533

    $default  reduce using rule 563 (enum_list)

    enum_expression  go to state 534
    enum_list        go to state 535


State 396

  582 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 536


State 397

  585 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 585 (structure_name)


State 398

  592 optional_struct_variable_declaration_list: "begin of code block" . struct_variable_declaration_list "end of code block"

    $default  reduce using rule 497 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 537


State 399

  595 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@41 structure_name $@42 optional_struct_variable_declaration_list .

    $default  reduce using rule 595 (structure_declaration)


State 400

  557 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 538
    "name"  shift, and go to state 539

    let_variable_name_with_pos_list  go to state 540
    let_variable_declaration         go to state 541


State 401

  106 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 106 (metadata_argument_list)


State 402

  539 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 542


State 403

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  547                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 543
    type_declaration_no_options_no_dim  go to state 266


State 404

  532 optional_ref: '&' .

    $default  reduce using rule 532 (optional_ref)


State 405

  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 547


State 406

  664 type_declaration_no_options_no_dim: "type" '<' $@45 . type_declaration '>' $@46

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 548


State 407

  687 type_declaration_no_options_no_dim: "array" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 549


State 408

  690 type_declaration_no_options_no_dim: "table" '<' $@52 . table_type_pair '>' $@53

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    table_type_pair                     go to state 550
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 551


State 409

  761 make_struct_decl: "struct" . '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 552


State 410

  764 make_struct_decl: "class" . '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 553


State 411

  389 expr: "true" .

    $default  reduce using rule 389 (expr)


State 412

  390 expr: "false" .

    $default  reduce using rule 390 (expr)


State 413

  265 expr_new: "new" . new_type_declaration
  266         | "new" . new_type_declaration '(' use_initializer ')'
  267         | "new" . new_type_declaration '(' expr_list ')'
  268         | "new" . new_type_declaration '(' make_struct_single ')'
  269         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  270         | "new" . make_decl

    "struct"               shift, and go to state 409
    "class"                shift, and go to state 410
    "array"                shift, and go to state 416
    "table"                shift, and go to state 418
    "fixed_array"          shift, and go to state 425
    "default"              shift, and go to state 426
    "tuple"                shift, and go to state 428
    "variant"              shift, and go to state 429
    "::"                   shift, and go to state 55
    "name"                 shift, and go to state 56
    "begin of code block"  shift, and go to state 448
    '<'                    shift, and go to state 554
    '['                    shift, and go to state 454

    name_in_namespace           go to state 260
    new_type_declaration        go to state 555
    structure_type_declaration  go to state 556
    make_decl                   go to state 557
    make_struct_decl            go to state 479
    make_tuple_call             go to state 480
    make_dim_decl               go to state 481
    make_table_decl             go to state 482
    array_comprehension         go to state 483


State 414

  305 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  306               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  307               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 558


State 415

  304 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 559


State 416

  780 make_dim_decl: "array" . "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'
  783              | "array" . "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'
  786              | "array" . "variant" '<' $@95 type_declaration_no_options '>' $@96 '(' make_variant_dim ')'
  787              | "array" . '(' expr_list optional_comma ')'
  790              | "array" . '<' $@97 type_declaration_no_options '>' $@98 '(' optional_expr_list ')'

    "struct"   shift, and go to state 560
    "tuple"    shift, and go to state 561
    "variant"  shift, and go to state 562
    '<'        shift, and go to state 563
    '('        shift, and go to state 564


State 417

  383 expr: "null" .

    $default  reduce using rule 383 (expr)


State 418

  798 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  799                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  800                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 565
    '('  shift, and go to state 566


State 419

  433 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 567


State 420

  295 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 568


State 421

  298 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 569


State 422

  434 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 570


State 423

  301 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 571


State 424

  464 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 572


State 425

  791 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  794              | "fixed_array" . '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 573
    '('  shift, and go to state 574


State 426

  770 make_struct_decl: "default" . '<' $@87 type_declaration_no_options '>' $@88 use_initializer

    '<'  shift, and go to state 575


State 427

  627 basic_type_declaration: "bitfield" .

    $default  reduce using rule 627 (basic_type_declaration)


State 428

  773 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  776                | "tuple" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 576
    '('  shift, and go to state 577


State 429

  767 make_struct_decl: "variant" . '<' $@85 type_declaration_no_options '>' $@86 '(' make_variant_dim ')'

    '<'  shift, and go to state 578


State 430

  465 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  466               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  467               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_semis expression_block

    '<'  shift, and go to state 579


State 431

  419 expr: "++" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 580
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 432

  420 expr: "--" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 581
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 433

  468 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 582


State 434

  469 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 583


State 435

  470 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 584


State 436

  471 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 585


State 437

  472 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 586


State 438

  474 expr_mtag: "$c" . '(' expr ')' '(' ')'
  475          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 587


State 439

  473 expr_mtag: "..." .

    $default  reduce using rule 473 (expr_mtag)


State 440

  328 expr_numeric_const: "integer constant" .

    $default  reduce using rule 328 (expr_numeric_const)


State 441

  330 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 330 (expr_numeric_const)


State 442

  329 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 329 (expr_numeric_const)


State 443

  331 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 331 (expr_numeric_const)


State 444

  332 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 332 (expr_numeric_const)


State 445

  333 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 333 (expr_numeric_const)


State 446

  334 expr_numeric_const: "double constant" .

    $default  reduce using rule 334 (expr_numeric_const)


State 447

   32 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 29 (string_builder_body)

    string_builder_body  go to state 588


State 448

  797 make_table_decl: "begin of code block" . expr_map_tuple_list optional_comma "end of code block"
  807 array_comprehension: "begin of code block" . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 589
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 590
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_map_tuple          go to state 591
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    expr_map_tuple_list     go to state 592
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 449

  396 expr: '-' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 593
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 450

  395 expr: '+' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 594
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 451

  432 expr: '*' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 595
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 452

  394 expr: '~' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 596
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 453

  393 expr: '!' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 597
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 454

  777 make_dim_decl: '[' . expr_list optional_comma ']'
  805 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  806                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 598
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 599
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 600
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 455

  423 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 602
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 456

  313 block_or_lambda: '$' .

    $default  reduce using rule 313 (block_or_lambda)


State 457

  314 block_or_lambda: '@' .
  315                | '@' . '@'
  360 func_addr_expr: '@' . '@' func_addr_name
  363               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  366               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  483 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 603

    $default  reduce using rule 314 (block_or_lambda)


State 458

  387 expr: string_builder .

    $default  reduce using rule 387 (expr)


State 459

  386 expr: expr_reader .

    $default  reduce using rule 386 (expr)


State 460

  463 expr: expr_call_pipe .

    $default  reduce using rule 463 (expr)


State 461

  354 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  355                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  376 expr_call: name_in_namespace . '(' ')'
  377          | name_in_namespace . '(' "uninitialized" ')'
  378          | name_in_namespace . '(' make_struct_single ')'
  379          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  380          | name_in_namespace . '(' expr_list ')'
  384 expr: name_in_namespace .

    '('  shift, and go to state 604

    $default  reduce using rule 384 (expr)


State 462

  456 expr: expr_new .

    $default  reduce using rule 456 (expr)


State 463

  455 expr: expr_cast .

    $default  reduce using rule 455 (expr)


State 464

  454 expr: expr_type_decl .

    $default  reduce using rule 454 (expr)


State 465

  453 expr: expr_type_info .

    $default  reduce using rule 453 (expr)


State 466

  325 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block

    '['  shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    optional_annotation_list  go to state 605


State 467

  459 expr: expr_full_block .

    $default  reduce using rule 459 (expr)


State 468

  385 expr: expr_numeric_const .

    $default  reduce using rule 385 (expr)


State 469

  458 expr: expr_named_call .

    $default  reduce using rule 458 (expr)


State 470

  457 expr: expr_method_call .

    $default  reduce using rule 457 (expr)


State 471

  430 expr: func_addr_expr .

    $default  reduce using rule 430 (expr)


State 472

  391 expr: expr_field .

    $default  reduce using rule 391 (expr)


State 473

  227 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  431 expr: expr_call .

    "begin of code block"  shift, and go to state 606
    '$'                    shift, and go to state 456
    '@'                    shift, and go to state 607

    $default  reduce using rule 431 (expr)

    block_or_lambda                go to state 608
    expr_full_block_assumed_piped  go to state 609


State 474

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  665 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 645


State 475

  435 expr: expr_generator .

    $default  reduce using rule 435 (expr)


State 476

  392 expr: expr_mtag .

    $default  reduce using rule 392 (expr)


State 477

  381 expr_call: basic_type_declaration . '(' ')'
  382          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 646


State 478

  388 expr: make_decl .

    $default  reduce using rule 388 (expr)


State 479

  736 make_decl: make_struct_decl .

    $default  reduce using rule 736 (make_decl)


State 480

  740 make_decl: make_tuple_call .

    $default  reduce using rule 740 (make_decl)


State 481

  737 make_decl: make_dim_decl .

    $default  reduce using rule 737 (make_decl)


State 482

  738 make_decl: make_table_decl .

    $default  reduce using rule 738 (make_decl)


State 483

  739 make_decl: array_comprehension .

    $default  reduce using rule 739 (make_decl)


State 484

  693 type_declaration_no_options_no_dim: "iterator" '<' $@54 . type_declaration '>' $@55

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 647


State 485

  683 type_declaration_no_options_no_dim: "smart_ptr" '<' $@48 . type_declaration '>' $@49

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 648


State 486

  638 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 649


State 487

  647 bitfield_type_declaration: "bitfield" '<' $@43 . bitfield_bits '>' $@44

    "name"  shift, and go to state 650

    bitfield_bits  go to state 651


State 488

  697 type_declaration_no_options_no_dim: "block" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 652


State 489

  700 type_declaration_no_options_no_dim: "block" '<' $@58 . optional_function_argument_list optional_function_type '>' $@59

    '('  shift, and go to state 324

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 653


State 490

  704 type_declaration_no_options_no_dim: "function" '<' $@60 . type_declaration '>' $@61

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 654


State 491

  707 type_declaration_no_options_no_dim: "function" '<' $@62 . optional_function_argument_list optional_function_type '>' $@63

    '('  shift, and go to state 324

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 655


State 492

  711 type_declaration_no_options_no_dim: "lambda" '<' $@64 . type_declaration '>' $@65

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 656


State 493

  714 type_declaration_no_options_no_dim: "lambda" '<' $@66 . optional_function_argument_list optional_function_type '>' $@67

    '('  shift, and go to state 324

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 657


State 494

  717 type_declaration_no_options_no_dim: "tuple" '<' $@68 . tuple_type_list '>' $@69

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 512
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    tuple_type                          go to state 658
    tuple_type_list                     go to state 659
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 517


State 495

  720 type_declaration_no_options_no_dim: "variant" '<' $@70 . variant_type_list '>' $@71

    "name"  shift, and go to state 519

    variant_type       go to state 660
    variant_type_list  go to state 661


State 496

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  639 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 662


State 497

  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@47 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 667 ($@47)

    $@47  go to state 663


State 498

  666 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 664
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 665
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 499

  678 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 678 (type_declaration_no_options_no_dim)


State 500

  679 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 679 (type_declaration_no_options_no_dim)


State 501

  672 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 672 (type_declaration_no_options_no_dim)


State 502

  674 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 674 (type_declaration_no_options_no_dim)


State 503

  669 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 666


State 504

  677 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 677 (type_declaration_no_options_no_dim)


State 505

  653 dim_list: '[' ']' .

    $default  reduce using rule 653 (dim_list)


State 506

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  652 dim_list: '[' expr . ']'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ']'    shift, and go to state 667


State 507

  654 dim_list: dim_list '[' . expr ']'
  655         | dim_list '[' . ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    ']'                               shift, and go to state 668
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 669
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 508

  723 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 723 (type_declaration)


State 509

  722 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 722 (type_declaration)


State 510

  644 bitfield_alias_bits: bitfield_alias_bits ',' . "name"
  804 optional_comma: ',' .

    "name"  shift, and go to state 670

    $default  reduce using rule 804 (optional_comma)


State 511

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 "begin of code block" $@79 bitfield_alias_bits optional_comma . $@80 "end of code block"

    $default  reduce using rule 734 ($@80)

    $@80  go to state 671


State 512

  256 name_in_namespace: "name" .
  257                  | "name" . "::" "name"
  509 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 95
    ':'   shift, and go to state 672

    $default  reduce using rule 256 (name_in_namespace)


State 513

  649 c_or_s: "end of expression" .

    $default  reduce using rule 649 (c_or_s)


State 514

  648 c_or_s: ',' .

    $default  reduce using rule 648 (c_or_s)


State 515

  514 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514

    c_or_s  go to state 673


State 516

  513 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 513 (tuple_alias_type_list)


State 517

  508 tuple_type: type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 508 (tuple_type)


State 518

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@72 "begin of code block" $@73 tuple_alias_type_list $@74 . "end of code block"

    "end of code block"  shift, and go to state 674


State 519

  515 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 675


State 520

  520 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514

    c_or_s  go to state 676


State 521

  519 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 519 (variant_alias_type_list)


State 522

  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@75 "begin of code block" $@76 variant_alias_type_list $@77 . "end of code block"

    "end of code block"  shift, and go to state 677


State 523

  187 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 187 (function_name)


State 524

  177 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 177 (function_name)


State 525

  505 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 678
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 526

  279 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 279 (kwd_let_var_or_nothing)


State 527

  280 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 280 (kwd_let_var_or_nothing)


State 528

  504 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_declaration         go to state 681
    variable_name_with_pos_list  go to state 682


State 529

  507 function_argument_list: function_argument_list "end of expression" . function_argument_declaration

    "$a"  shift, and go to state 387
    '@'   shift, and go to state 211

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list         go to state 212
    optional_field_annotation      go to state 389
    function_argument_declaration  go to state 683


State 530

  125 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 125 (optional_function_argument_list)


State 531

  127 optional_function_type: ':' type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 127 (optional_function_type)


State 532

  226 expression_block: $@9 "begin of code block" expressions . $@10 "end of code block" expression_block_finally
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 684
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 685
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 686
    "try"                             shift, and go to state 687
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 688
    "deref"                           shift, and go to state 419
    "assume"                          shift, and go to state 689
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 690
    "pass"                            shift, and go to state 691
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 692
    "goto"                            shift, and go to state 693
    "unsafe"                          shift, and go to state 694
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 695
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of expression"               shift, and go to state 696
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    "while"              reduce using rule 79 ($@4)
    "if"                 reduce using rule 73 ($@2)
    "static_if"          reduce using rule 73 ($@2)
    "for"                reduce using rule 76 ($@3)
    "with"               reduce using rule 81 ($@5)
    "end of code block"  reduce using rule 225 ($@10)

    string_builder                    go to state 458
    expr_reader                       go to state 459
    expression_label                  go to state 697
    expression_goto                   go to state 698
    expression_if_one_liner           go to state 699
    expression_if_then_else           go to state 700
    $@2                               go to state 701
    expression_if_then_else_oneliner  go to state 702
    expression_for_loop               go to state 703
    $@3                               go to state 704
    expression_unsafe                 go to state 705
    expression_while_loop             go to state 706
    $@4                               go to state 707
    expression_with                   go to state 708
    $@5                               go to state 709
    expression_with_alias             go to state 710
    $@10                              go to state 711
    expr_call_pipe                    go to state 460
    expression_any                    go to state 712
    name_in_namespace                 go to state 461
    expression_delete                 go to state 713
    expr_new                          go to state 462
    expression_break                  go to state 714
    expression_continue               go to state 715
    expression_return                 go to state 716
    expression_yield                  go to state 717
    expression_try_catch              go to state 718
    kwd_let                           go to state 719
    expression_let                    go to state 720
    expr_cast                         go to state 463
    expr_type_decl                    go to state 464
    expr_type_info                    go to state 465
    block_or_lambda                   go to state 466
    expr_full_block                   go to state 467
    expr_numeric_const                go to state 468
    expr_assign                       go to state 721
    expr_named_call                   go to state 469
    expr_method_call                  go to state 470
    func_addr_expr                    go to state 471
    expr_field                        go to state 472
    expr_call                         go to state 473
    expr                              go to state 722
    expr_generator                    go to state 475
    expr_mtag                         go to state 476
    basic_type_declaration            go to state 477
    make_decl                         go to state 478
    make_struct_decl                  go to state 479
    make_tuple_call                   go to state 480
    make_dim_decl                     go to state 481
    make_table_decl                   go to state 482
    array_comprehension               go to state 483


State 533

  561 enum_expression: "name" .
  562                | "name" . '=' expr

    '='  shift, and go to state 723

    $default  reduce using rule 561 (enum_expression)


State 534

  564 enum_list: enum_expression .

    $default  reduce using rule 564 (enum_list)


State 535

  565 enum_list: enum_list . ',' enum_expression
  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list . optional_comma $@40 "end of code block"

    ','  shift, and go to state 724

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 725


State 536

  582 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 582 (optional_structure_parent)


State 537

  499 struct_variable_declaration_list: struct_variable_declaration_list . $@33 structure_variable_declaration "end of expression"
  501                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header "end of expression"
  503                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block
  592 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list . "end of code block"

    "end of code block"  shift, and go to state 726
    '['                  shift, and go to state 15

    "def"     reduce using rule 121 (optional_annotation_list)
    $default  reduce using rule 498 ($@33)

    optional_annotation_list  go to state 727
    $@33                      go to state 728


State 538

  534 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 729


State 539

  533 let_variable_name_with_pos_list: "name" .
  535                                | "name" . "aka" "name"

    "aka"  shift, and go to state 730

    $default  reduce using rule 533 (let_variable_name_with_pos_list)


State 540

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  537                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  543 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options "end of expression"
  544                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  545                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 731
    ':'  shift, and go to state 732
    '&'  shift, and go to state 404

    $default  reduce using rule 531 (optional_ref)

    optional_ref  go to state 733


State 541

  557 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 557 (global_variable_declaration_list)


State 542

  539 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 539 (global_let_variable_name_with_pos_list)


State 543

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  547                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 544
    ":="                 shift, and go to state 545
    "end of expression"  shift, and go to state 734
    '='                  shift, and go to state 546

    copy_or_move_or_clone  go to state 735


State 544

  529 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 529 (copy_or_move_or_clone)


State 545

  530 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 530 (copy_or_move_or_clone)


State 546

  528 copy_or_move_or_clone: '=' .

    $default  reduce using rule 528 (copy_or_move_or_clone)


State 547

  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 736
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 548

  664 type_declaration_no_options_no_dim: "type" '<' $@45 type_declaration . '>' $@46
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 737


State 549

  687 type_declaration_no_options_no_dim: "array" '<' $@50 type_declaration . '>' $@51
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 738


State 550

  690 type_declaration_no_options_no_dim: "table" '<' $@52 table_type_pair . '>' $@53

    '>'  shift, and go to state 739


State 551

  650 table_type_pair: type_declaration .
  651                | type_declaration . c_or_s type_declaration
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514
    '|'                  shift, and go to state 375

    $default  reduce using rule 650 (table_type_pair)

    c_or_s  go to state 740


State 552

  761 make_struct_decl: "struct" '<' . $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 759 ($@81)

    $@81  go to state 741


State 553

  764 make_struct_decl: "class" '<' . $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 762 ($@83)

    $@83  go to state 742


State 554

  263 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 261 ($@11)

    $@11  go to state 743


State 555

  265 expr_new: "new" new_type_declaration .
  266         | "new" new_type_declaration . '(' use_initializer ')'
  267         | "new" new_type_declaration . '(' expr_list ')'
  268         | "new" new_type_declaration . '(' make_struct_single ')'
  269         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 744

    $default  reduce using rule 265 (expr_new)


State 556

  264 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 264 (new_type_declaration)


State 557

  270 expr_new: "new" make_decl .

    $default  reduce using rule 270 (expr_new)


State 558

  305 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  306               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 745
    '('  shift, and go to state 746


State 559

  304 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 302 ($@19)

    $@19  go to state 747


State 560

  780 make_dim_decl: "array" "struct" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 748


State 561

  783 make_dim_decl: "array" "tuple" . '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 749


State 562

  786 make_dim_decl: "array" "variant" . '<' $@95 type_declaration_no_options '>' $@96 '(' make_variant_dim ')'

    '<'  shift, and go to state 750


State 563

  790 make_dim_decl: "array" '<' . $@97 type_declaration_no_options '>' $@98 '(' optional_expr_list ')'

    $default  reduce using rule 788 ($@97)

    $@97  go to state 751


State 564

  787 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 752
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 565

  799 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  800                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 753
    type_declaration_no_options_no_dim  go to state 266


State 566

  798 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 590
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_map_tuple          go to state 591
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    expr_map_tuple_list     go to state 754
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 567

  433 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 755
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 568

  295 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 293 ($@13)

    $@13  go to state 756


State 569

  298 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 296 ($@15)

    $@15  go to state 757


State 570

  434 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 758
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 571

  301 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 299 ($@17)

    $@17  go to state 759


State 572

  464 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 760
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 573

  794 make_dim_decl: "fixed_array" '<' . $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

    $default  reduce using rule 792 ($@99)

    $@99  go to state 761


State 574

  791 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 762
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 575

  770 make_struct_decl: "default" '<' . $@87 type_declaration_no_options '>' $@88 use_initializer

    $default  reduce using rule 768 ($@87)

    $@87  go to state 763


State 576

  776 make_tuple_call: "tuple" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 774 ($@89)

    $@89  go to state 764


State 577

  773 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 765
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 578

  767 make_struct_decl: "variant" '<' . $@85 type_declaration_no_options '>' $@86 '(' make_variant_dim ')'

    $default  reduce using rule 765 ($@85)

    $@85  go to state 766


State 579

  465 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  466               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  467               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_semis expression_block

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 767
    type_declaration_no_options_no_dim  go to state 266


State 580

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  419     | "++" expr .
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 419 (expr)


State 581

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  420     | "--" expr .
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 420 (expr)


State 582

  468 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 768
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 583

  469 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 769
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 584

  470 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 770
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 585

  471 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 771
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 586

  472 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 772
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 587

  474 expr_mtag: "$c" '(' . expr ')' '(' ')'
  475          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 773
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 588

   30 string_builder_body: string_builder_body . character_sequence
   31                    | string_builder_body . "{" expr "}"
   32 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 155
    STRING_CHARACTER_ESC  shift, and go to state 156
    "end of the string"   shift, and go to state 774
    "{"                   shift, and go to state 775

    character_sequence  go to state 776


State 589

  807 array_comprehension: "begin of code block" "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    '('  shift, and go to state 777


State 590

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  771 make_map_tuple: expr . "=>" expr
  772               | expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "=>"   shift, and go to state 778
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 772 (make_map_tuple)


State 591

  795 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 795 (expr_map_tuple_list)


State 592

  796 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  797 make_table_decl: "begin of code block" expr_map_tuple_list . optional_comma "end of code block"

    ','  shift, and go to state 779

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 780


State 593

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  396 expr: '-' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 396 (expr)


State 594

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  395 expr: '+' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 395 (expr)


State 595

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  432     | '*' expr .
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 432 (expr)


State 596

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  394 expr: '~' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 394 (expr)


State 597

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  393 expr: '!' expr .
  397     | expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 393 (expr)


State 598

  805 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    '('  shift, and go to state 781


State 599

  806 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 782


State 600

  309 expr_list: expr_list . ',' expr
  777 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 783

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 784


State 601

  308 expr_list: expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 308 (expr_list)


State 602

  309 expr_list: expr_list . ',' expr
  423 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 785


State 603

  315 block_or_lambda: '@' '@' .
  360 func_addr_expr: '@' '@' . func_addr_name
  363               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  366               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  483 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 786
    "$c"    shift, and go to state 787
    "name"  shift, and go to state 56
    '<'     shift, and go to state 788

    $default  reduce using rule 315 (block_or_lambda)

    name_in_namespace  go to state 789
    func_addr_name     go to state 790


State 604

  354 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  355                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  376 expr_call: name_in_namespace '(' . ')'
  377          | name_in_namespace '(' . "uninitialized" ')'
  378          | name_in_namespace '(' . make_struct_single ')'
  379          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  380          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "uninitialized"                   shift, and go to state 791
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 794
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 795
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 796
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_fields      go to state 797
    make_struct_single      go to state 798
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 605

  325 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block

    "capture"  shift, and go to state 799

    $default  reduce using rule 323 (optional_capture_list)

    optional_capture_list  go to state 800


State 606

  327 expr_full_block_assumed_piped: "begin of code block" . expressions "end of code block"

    $default  reduce using rule 247 (expressions)

    expressions  go to state 801


State 607

  314 block_or_lambda: '@' .
  315                | '@' . '@'

    '@'  shift, and go to state 802

    $default  reduce using rule 314 (block_or_lambda)


State 608

  326 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block

    '['  shift, and go to state 15

    $default  reduce using rule 121 (optional_annotation_list)

    optional_annotation_list  go to state 803


State 609

  227 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 227 (expr_call_pipe)


State 610

  440 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr "is" . basic_type_declaration
  442     | expr "is" . "name"
  482 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 804
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 805
    "name"      shift, and go to state 806

    basic_type_declaration  go to state 807


State 611

  443 expr: expr "as" . "name"
  446     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  447     | expr "as" . basic_type_declaration
  480 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 808
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 809
    "name"      shift, and go to state 810

    basic_type_declaration  go to state 811


State 612

  397 expr: expr "<<" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 812
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 613

  398 expr: expr ">>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 813
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 614

  421 expr: expr "++" .

    $default  reduce using rule 421 (expr)


State 615

  422 expr: expr "--" .

    $default  reduce using rule 422 (expr)


State 616

  410 expr: expr "<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 814
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 617

  411 expr: expr ">=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 815
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 618

  408 expr: expr "==" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 816
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 619

  409 expr: expr "!=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 817
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 620

  356 expr_method_call: expr "->" . "name" '(' ')'
  357                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 818


State 621

  436 expr: expr "??" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 819
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 622

  428 expr: expr "?." . "name"
  477 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 820
    "name"  shift, and go to state 821


State 623

  426 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 822
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 624

  460 expr: expr "<|" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 823
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 625

  461 expr: expr "|>" . expr
  462     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 824
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 825
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 626

  399 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 826
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 627

  400 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 827
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 628

  415 expr: expr "&&" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 828
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 629

  416 expr: expr "||" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 829
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 630

  417 expr: expr "^^" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 830
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 631

  418 expr: expr ".." . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 831
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 632

  437 expr: expr '?' . expr ':' expr
  448     | expr '?' . "as" "name"
  451     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' . "as" basic_type_declaration
  481 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "as"                              shift, and go to state 832
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 833
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 633

  413 expr: expr '|' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 834
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 634

  414 expr: expr '^' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 835
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 635

  412 expr: expr '&' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 836
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 636

  406 expr: expr '<' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 837
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 637

  407 expr: expr '>' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 838
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 638

  402 expr: expr '-' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 839
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 639

  401 expr: expr '+' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 840
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 640

  403 expr: expr '*' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 841
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 641

  404 expr: expr '/' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 842
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 642

  405 expr: expr '%' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 843
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 643

  367 expr_field: expr '.' . "name"
  368           | expr '.' . '.' "name"
  369           | expr '.' . "name" '(' ')'
  370           | expr '.' . "name" '(' expr_list ')'
  371           | expr '.' . basic_type_declaration '(' ')'
  372           | expr '.' . basic_type_declaration '(' expr_list ')'
  375           | expr '.' . $@25 error $@26
  425 expr: expr '.' . '[' expr ']'
  427     | expr '.' . "?[" expr ']'
  429     | expr '.' . "?." "name"
  476 expr_mtag: expr '.' . "$f" '(' expr ')'
  478          | expr '.' . '.' "$f" '(' expr ')'
  479          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "?."        shift, and go to state 844
    "?["        shift, and go to state 845
    "$f"        shift, and go to state 846
    "name"      shift, and go to state 847
    '.'         shift, and go to state 848
    '['         shift, and go to state 849

    $default  reduce using rule 373 ($@25)

    $@25                    go to state 850
    basic_type_declaration  go to state 851


State 644

  424 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 852
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 645

  665 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 665 (type_declaration_no_options_no_dim)


State 646

  381 expr_call: basic_type_declaration '(' . ')'
  382          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 853
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 854
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 647

  693 type_declaration_no_options_no_dim: "iterator" '<' $@54 type_declaration . '>' $@55
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 855


State 648

  683 type_declaration_no_options_no_dim: "smart_ptr" '<' $@48 type_declaration . '>' $@49
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 856


State 649

  638 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 638 (auto_type_declaration)


State 650

  640 bitfield_bits: "name" .

    $default  reduce using rule 640 (bitfield_bits)


State 651

  641 bitfield_bits: bitfield_bits . "end of expression" "name"
  647 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits . '>' $@44

    "end of expression"  shift, and go to state 857
    '>'                  shift, and go to state 858


State 652

  697 type_declaration_no_options_no_dim: "block" '<' $@56 type_declaration . '>' $@57
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 859


State 653

  700 type_declaration_no_options_no_dim: "block" '<' $@58 optional_function_argument_list . optional_function_type '>' $@59

    ':'  shift, and go to state 392

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 860


State 654

  704 type_declaration_no_options_no_dim: "function" '<' $@60 type_declaration . '>' $@61
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 861


State 655

  707 type_declaration_no_options_no_dim: "function" '<' $@62 optional_function_argument_list . optional_function_type '>' $@63

    ':'  shift, and go to state 392

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 862


State 656

  711 type_declaration_no_options_no_dim: "lambda" '<' $@64 type_declaration . '>' $@65
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 863


State 657

  714 type_declaration_no_options_no_dim: "lambda" '<' $@66 optional_function_argument_list . optional_function_type '>' $@67

    ':'  shift, and go to state 392

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 864


State 658

  510 tuple_type_list: tuple_type .

    $default  reduce using rule 510 (tuple_type_list)


State 659

  511 tuple_type_list: tuple_type_list . c_or_s tuple_type
  717 type_declaration_no_options_no_dim: "tuple" '<' $@68 tuple_type_list . '>' $@69

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514
    '>'                  shift, and go to state 865

    c_or_s  go to state 866


State 660

  516 variant_type_list: variant_type .

    $default  reduce using rule 516 (variant_type_list)


State 661

  517 variant_type_list: variant_type_list . c_or_s variant_type
  720 type_declaration_no_options_no_dim: "variant" '<' $@70 variant_type_list . '>' $@71

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514
    '>'                  shift, and go to state 867

    c_or_s  go to state 868


State 662

  639 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 639 (auto_type_declaration)


State 663

  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@47 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    type_declaration_no_options_list    go to state 869
    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 870


State 664

  666 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 871


State 665

  251 optional_expr_list: expr_list . optional_comma
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 783

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 872


State 666

  669 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 669 (type_declaration_no_options_no_dim)


State 667

  652 dim_list: '[' expr ']' .

    $default  reduce using rule 652 (dim_list)


State 668

  655 dim_list: dim_list '[' ']' .

    $default  reduce using rule 655 (dim_list)


State 669

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  654 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ']'    shift, and go to state 873


State 670

  644 bitfield_alias_bits: bitfield_alias_bits ',' "name" .

    $default  reduce using rule 644 (bitfield_alias_bits)


State 671

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 "begin of code block" $@79 bitfield_alias_bits optional_comma $@80 . "end of code block"

    "end of code block"  shift, and go to state 874


State 672

  509 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 875


State 673

  514 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 514 (tuple_alias_type_list)


State 674

  727 tuple_alias_declaration: "tuple" optional_public_or_private_alias "name" $@72 "begin of code block" $@73 tuple_alias_type_list $@74 "end of code block" .

    $default  reduce using rule 727 (tuple_alias_declaration)


State 675

  515 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 876


State 676

  520 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 520 (variant_alias_type_list)


State 677

  731 variant_alias_declaration: "variant" optional_public_or_private_alias "name" $@75 "begin of code block" $@76 variant_alias_type_list $@77 "end of code block" .

    $default  reduce using rule 731 (variant_alias_declaration)


State 678

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  505 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 877


State 679

  597 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 878


State 680

  596 variable_name_with_pos_list: "name" .
  598                            | "name" . "aka" "name"

    "aka"  shift, and go to state 879

    $default  reduce using rule 596 (variable_name_with_pos_list)


State 681

  504 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 504 (function_argument_declaration)


State 682

  523 variable_declaration: variable_name_with_pos_list .
  524                     | variable_name_with_pos_list . '&'
  525                     | variable_name_with_pos_list . ':' type_declaration
  526                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  527                     | variable_name_with_pos_list . copy_or_move expr
  599 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  600                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 880
    ','   shift, and go to state 881
    '='   shift, and go to state 882
    ':'   shift, and go to state 883
    '&'   shift, and go to state 884

    $default  reduce using rule 523 (variable_declaration)

    copy_or_move  go to state 885


State 683

  507 function_argument_list: function_argument_list "end of expression" function_argument_declaration .

    $default  reduce using rule 507 (function_argument_list)


State 684

  249 expressions: expressions error .

    $default  reduce using rule 249 (expressions)


State 685

  273 expression_return: "return" .
  274                  | "return" . expr
  275                  | "return" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 886
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 273 (expression_return)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 887
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 686

  271 expression_break: "break" .

    $default  reduce using rule 271 (expression_break)


State 687

  278 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 888
    $@9               go to state 327


State 688

  259 expression_delete: "delete" . expr
  260                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "explicit"                        shift, and go to state 889
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 890
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 689

   83 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 891


State 690

  272 expression_continue: "continue" .

    $default  reduce using rule 272 (expression_continue)


State 691

  246 expression_any: "pass" . "end of expression"

    "end of expression"  shift, and go to state 892


State 692

   52 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 893


State 693

   53 expression_goto: "goto" . "label" "integer constant"
   54                | "goto" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 894
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 895
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 694

   78 expression_unsafe: "unsafe" . optional_semis expression_block
  464 expr: "unsafe" . '(' expr ')'

    "end of expression"  shift, and go to state 896
    '('                  shift, and go to state 572

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 898


State 695

  276 expression_yield: "yield" . expr
  277                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 899
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 900
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 696

  228 expression_any: "end of expression" .

    $default  reduce using rule 228 (expression_any)


State 697

  244 expression_any: expression_label . "end of expression"

    "end of expression"  shift, and go to state 901


State 698

  245 expression_any: expression_goto . "end of expression"

    "end of expression"  shift, and go to state 902


State 699

   75 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner "end of expression"

    "if"  shift, and go to state 903


State 700

  241 expression_any: expression_if_then_else .

    $default  reduce using rule 241 (expression_any)


State 701

   74 expression_if_then_else: $@2 . if_or_static_if '(' expr ')' optional_semis expression_block expression_else

    "if"         shift, and go to state 904
    "static_if"  shift, and go to state 905

    if_or_static_if  go to state 906


State 702

  242 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 242 (expression_any)


State 703

  236 expression_any: expression_for_loop .

    $default  reduce using rule 236 (expression_any)


State 704

   77 expression_for_loop: $@3 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

    "for"  shift, and go to state 907


State 705

  233 expression_any: expression_unsafe .

    $default  reduce using rule 233 (expression_any)


State 706

  232 expression_any: expression_while_loop .

    $default  reduce using rule 232 (expression_any)


State 707

   80 expression_while_loop: $@4 . "while" '(' expr ')' optional_semis expression_block

    "while"  shift, and go to state 908


State 708

  234 expression_any: expression_with .

    $default  reduce using rule 234 (expression_any)


State 709

   82 expression_with: $@5 . "with" '(' expr ')' optional_semis expression_block

    "with"  shift, and go to state 909


State 710

  235 expression_any: expression_with_alias . "end of expression"

    "end of expression"  shift, and go to state 910


State 711

  226 expression_block: $@9 "begin of code block" expressions $@10 . "end of code block" expression_block_finally

    "end of code block"  shift, and go to state 911


State 712

  248 expressions: expressions expression_any .

    $default  reduce using rule 248 (expressions)


State 713

  230 expression_any: expression_delete . "end of expression"

    "end of expression"  shift, and go to state 912


State 714

   67 expression_if_one_liner: expression_break .
  237 expression_any: expression_break . "end of expression"

    "end of expression"  shift, and go to state 913

    $default  reduce using rule 67 (expression_if_one_liner)


State 715

   68 expression_if_one_liner: expression_continue .
  238 expression_any: expression_continue . "end of expression"

    "end of expression"  shift, and go to state 914

    $default  reduce using rule 68 (expression_if_one_liner)


State 716

   65 expression_if_one_liner: expression_return .
  239 expression_any: expression_return . "end of expression"

    "end of expression"  shift, and go to state 915

    $default  reduce using rule 65 (expression_if_one_liner)


State 717

   66 expression_if_one_liner: expression_yield .
  240 expression_any: expression_yield . "end of expression"

    "end of expression"  shift, and go to state 916

    $default  reduce using rule 66 (expression_if_one_liner)


State 718

  243 expression_any: expression_try_catch .

    $default  reduce using rule 243 (expression_any)


State 719

  290 expression_let: kwd_let . optional_in_scope let_variable_declaration
  291               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  292               | kwd_let . optional_in_scope "begin of code block" variable_declaration_list "end of code block"

    "inscope"  shift, and go to state 917

    $default  reduce using rule 285 (optional_in_scope)

    optional_in_scope  go to state 918


State 720

  231 expression_any: expression_let .

    $default  reduce using rule 231 (expression_any)


State 721

  229 expression_any: expr_assign . "end of expression"

    "end of expression"  shift, and go to state 919


State 722

   64 expression_if_one_liner: expr .
  335 expr_assign: expr .
  336            | expr . '=' expr
  337            | expr . "<-" expr
  338            | expr . ":=" expr
  339            | expr . "&=" expr
  340            | expr . "|=" expr
  341            | expr . "^=" expr
  342            | expr . "&&=" expr
  343            | expr . "||=" expr
  344            | expr . "^^=" expr
  345            | expr . "+=" expr
  346            | expr . "-=" expr
  347            | expr . "*=" expr
  348            | expr . "/=" expr
  349            | expr . "%=" expr
  350            | expr . "<<=" expr
  351            | expr . ">>=" expr
  352            | expr . "<<<=" expr
  353            | expr . ">>>=" expr
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 610
    "as"    shift, and go to state 611
    "+="    shift, and go to state 920
    "-="    shift, and go to state 921
    "/="    shift, and go to state 922
    "*="    shift, and go to state 923
    "%="    shift, and go to state 924
    "&="    shift, and go to state 925
    "|="    shift, and go to state 926
    "^="    shift, and go to state 927
    "<<"    shift, and go to state 612
    ">>"    shift, and go to state 613
    "++"    shift, and go to state 614
    "--"    shift, and go to state 615
    "<="    shift, and go to state 616
    "<<="   shift, and go to state 928
    ">>="   shift, and go to state 929
    ">="    shift, and go to state 617
    "=="    shift, and go to state 618
    "!="    shift, and go to state 619
    "->"    shift, and go to state 620
    "<-"    shift, and go to state 930
    "??"    shift, and go to state 621
    "?."    shift, and go to state 622
    "?["    shift, and go to state 623
    "<|"    shift, and go to state 624
    "|>"    shift, and go to state 625
    ":="    shift, and go to state 931
    "<<<"   shift, and go to state 626
    ">>>"   shift, and go to state 627
    "<<<="  shift, and go to state 932
    ">>>="  shift, and go to state 933
    "&&"    shift, and go to state 628
    "||"    shift, and go to state 629
    "^^"    shift, and go to state 630
    "&&="   shift, and go to state 934
    "||="   shift, and go to state 935
    "^^="   shift, and go to state 936
    ".."    shift, and go to state 631
    '='     shift, and go to state 937
    '?'     shift, and go to state 632
    '|'     shift, and go to state 633
    '^'     shift, and go to state 634
    '&'     shift, and go to state 635
    '<'     shift, and go to state 636
    '>'     shift, and go to state 637
    '-'     shift, and go to state 638
    '+'     shift, and go to state 639
    '*'     shift, and go to state 640
    '/'     shift, and go to state 641
    '%'     shift, and go to state 642
    '.'     shift, and go to state 643
    '['     shift, and go to state 644

    "end of expression"  reduce using rule 335 (expr_assign)
    $default             reduce using rule 64 (expression_if_one_liner)


State 723

  562 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 938
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 724

  565 enum_list: enum_list ',' . enum_expression
  804 optional_comma: ',' .

    "name"  shift, and go to state 533

    $default  reduce using rule 804 (optional_comma)

    enum_expression  go to state 939


State 725

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma . $@40 "end of code block"

    $default  reduce using rule 579 ($@40)

    $@40  go to state 940


State 726

  592 optional_struct_variable_declaration_list: "begin of code block" struct_variable_declaration_list "end of code block" .

    $default  reduce using rule 592 (optional_struct_variable_declaration_list)


State 727

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header "end of expression"
  503                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "def"  shift, and go to state 941


State 728

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration "end of expression"

    '@'  shift, and go to state 211

    $default  reduce using rule 484 (optional_field_annotation)

    metadata_argument_list          go to state 212
    optional_field_annotation       go to state 942
    structure_variable_declaration  go to state 943


State 729

  534 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 944
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 730

  535 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 945


State 731

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  537                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 946


State 732

  543 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options "end of expression"
  544                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 947
    type_declaration_no_options_no_dim  go to state 266


State 733

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 948


State 734

  546 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 546 (global_let_variable_declaration)


State 735

  547 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 949
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 736

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 950
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644


State 737

  664 type_declaration_no_options_no_dim: "type" '<' $@45 type_declaration '>' . $@46

    $default  reduce using rule 663 ($@46)

    $@46  go to state 951


State 738

  687 type_declaration_no_options_no_dim: "array" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 686 ($@51)

    $@51  go to state 952


State 739

  690 type_declaration_no_options_no_dim: "table" '<' $@52 table_type_pair '>' . $@53

    $default  reduce using rule 689 ($@53)

    $@53  go to state 953


State 740

  651 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 954


State 741

  761 make_struct_decl: "struct" '<' $@81 . type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 955
    type_declaration_no_options_no_dim  go to state 266


State 742

  764 make_struct_decl: "class" '<' $@83 . type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 956
    type_declaration_no_options_no_dim  go to state 266


State 743

  263 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 957


State 744

  266 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  267         | "new" new_type_declaration '(' . expr_list ')'
  268         | "new" new_type_declaration '(' . make_struct_single ')'
  269         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "uninitialized"                   shift, and go to state 958
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 757 (use_initializer)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 959
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_fields      go to state 797
    make_struct_single      go to state 960
    use_initializer         go to state 961
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 745

  306 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 962


State 746

  305 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 963
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 747

  304 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 964


State 748

  780 make_dim_decl: "array" "struct" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 778 ($@91)

    $@91  go to state 965


State 749

  783 make_dim_decl: "array" "tuple" '<' . $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 781 ($@93)

    $@93  go to state 966


State 750

  786 make_dim_decl: "array" "variant" '<' . $@95 type_declaration_no_options '>' $@96 '(' make_variant_dim ')'

    $default  reduce using rule 784 ($@95)

    $@95  go to state 967


State 751

  790 make_dim_decl: "array" '<' $@97 . type_declaration_no_options '>' $@98 '(' optional_expr_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 968
    type_declaration_no_options_no_dim  go to state 266


State 752

  309 expr_list: expr_list . ',' expr
  787 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 969


State 753

  799 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  800                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514
    '>'                  shift, and go to state 970

    c_or_s  go to state 971


State 754

  796 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  798 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 779

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 972


State 755

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  433     | "deref" '(' expr . ')'
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 973


State 756

  295 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 974
    type_declaration_no_options_no_dim  go to state 266


State 757

  298 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 975
    type_declaration_no_options_no_dim  go to state 266


State 758

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  434     | "addr" '(' expr . ')'
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 976


State 759

  301 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 977
    type_declaration_no_options_no_dim  go to state 266


State 760

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  464     | "unsafe" '(' expr . ')'
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 978


State 761

  794 make_dim_decl: "fixed_array" '<' $@99 . type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 979
    type_declaration_no_options_no_dim  go to state 266


State 762

  309 expr_list: expr_list . ',' expr
  791 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 980


State 763

  770 make_struct_decl: "default" '<' $@87 . type_declaration_no_options '>' $@88 use_initializer

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 981
    type_declaration_no_options_no_dim  go to state 266


State 764

  776 make_tuple_call: "tuple" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 982
    type_declaration_no_options_no_dim  go to state 266


State 765

  309 expr_list: expr_list . ',' expr
  773 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 983


State 766

  767 make_struct_decl: "variant" '<' $@85 . type_declaration_no_options '>' $@86 '(' make_variant_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 984
    type_declaration_no_options_no_dim  go to state 266


State 767

  465 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  466               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  467               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_semis expression_block

    '>'  shift, and go to state 985


State 768

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  468 expr_mtag: "$$" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 986


State 769

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  469 expr_mtag: "$i" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 987


State 770

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  470 expr_mtag: "$v" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 988


State 771

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  471 expr_mtag: "$b" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 989


State 772

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  472 expr_mtag: "$a" '(' expr . ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 990


State 773

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  474 expr_mtag: "$c" '(' expr . ')' '(' ')'
  475          | "$c" '(' expr . ')' '(' expr_list ')'
  476          | expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 991


State 774

   32 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 32 (string_builder)


State 775

   31 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 992
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 776

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   30 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 214
    STRING_CHARACTER_ESC  shift, and go to state 215

    $default  reduce using rule 30 (string_builder_body)


State 777

  807 array_comprehension: "begin of code block" "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 993


State 778

  771 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 994
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 779

  796 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  804 optional_comma: ',' .

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 804 (optional_comma)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 590
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_map_tuple          go to state 995
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 780

  797 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma . "end of code block"

    "end of code block"  shift, and go to state 996


State 781

  805 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 997


State 782

  806 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    '('  shift, and go to state 998


State 783

  309 expr_list: expr_list ',' . expr
  804 optional_comma: ',' .

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 804 (optional_comma)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 999
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 784

  777 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 1000


State 785

  423 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1001


State 786

  359 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1002


State 787

  483 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1003


State 788

  363 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  366               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 364 ($@23)
    '>'       reduce using rule 364 ($@23)
    '('       reduce using rule 364 ($@23)
    $default  reduce using rule 361 ($@21)

    $@21  go to state 1004
    $@23  go to state 1005


State 789

  358 func_addr_name: name_in_namespace .

    $default  reduce using rule 358 (func_addr_name)


State 790

  360 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 360 (func_addr_expr)


State 791

  377 expr_call: name_in_namespace '(' "uninitialized" . ')'
  379          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006
    ')'     shift, and go to state 1007

    make_struct_fields  go to state 797
    make_struct_single  go to state 1008


State 792

  745 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  746                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1009


State 793

  256 name_in_namespace: "name" .
  257                  | "name" . "::" "name"
  741 make_struct_fields: "name" . copy_or_move expr
  742                   | "name" . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1010
    "::"  shift, and go to state 95
    '='   shift, and go to state 882

    $default  reduce using rule 256 (name_in_namespace)

    copy_or_move  go to state 1011


State 794

  354 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  777 make_dim_decl: '[' . expr_list optional_comma ']'
  805 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  806                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 598
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 599
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 600
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_fields      go to state 1012
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 795

  376 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 376 (expr_call)


State 796

  309 expr_list: expr_list . ',' expr
  355 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  380 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1013
    ')'  shift, and go to state 1014


State 797

  743 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  744                   | make_struct_fields . ',' "name" ":=" expr
  747                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  750 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1015

    $default  reduce using rule 750 (make_struct_single)


State 798

  378 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1016


State 799

  324 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1017


State 800

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_semis block_or_simple_block

    '('  shift, and go to state 324

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1018


State 801

  248 expressions: expressions . expression_any
  249            | expressions . error
  327 expr_full_block_assumed_piped: "begin of code block" expressions . "end of code block"

    error                             shift, and go to state 684
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 685
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 686
    "try"                             shift, and go to state 687
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 688
    "deref"                           shift, and go to state 419
    "assume"                          shift, and go to state 689
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 690
    "pass"                            shift, and go to state 691
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 692
    "goto"                            shift, and go to state 693
    "unsafe"                          shift, and go to state 694
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 695
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of code block"               shift, and go to state 1019
    "end of expression"               shift, and go to state 696
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    "while"      reduce using rule 79 ($@4)
    "if"         reduce using rule 73 ($@2)
    "static_if"  reduce using rule 73 ($@2)
    "for"        reduce using rule 76 ($@3)
    "with"       reduce using rule 81 ($@5)

    string_builder                    go to state 458
    expr_reader                       go to state 459
    expression_label                  go to state 697
    expression_goto                   go to state 698
    expression_if_one_liner           go to state 699
    expression_if_then_else           go to state 700
    $@2                               go to state 701
    expression_if_then_else_oneliner  go to state 702
    expression_for_loop               go to state 703
    $@3                               go to state 704
    expression_unsafe                 go to state 705
    expression_while_loop             go to state 706
    $@4                               go to state 707
    expression_with                   go to state 708
    $@5                               go to state 709
    expression_with_alias             go to state 710
    expr_call_pipe                    go to state 460
    expression_any                    go to state 712
    name_in_namespace                 go to state 461
    expression_delete                 go to state 713
    expr_new                          go to state 462
    expression_break                  go to state 714
    expression_continue               go to state 715
    expression_return                 go to state 716
    expression_yield                  go to state 717
    expression_try_catch              go to state 718
    kwd_let                           go to state 719
    expression_let                    go to state 720
    expr_cast                         go to state 463
    expr_type_decl                    go to state 464
    expr_type_info                    go to state 465
    block_or_lambda                   go to state 466
    expr_full_block                   go to state 467
    expr_numeric_const                go to state 468
    expr_assign                       go to state 721
    expr_named_call                   go to state 469
    expr_method_call                  go to state 470
    func_addr_expr                    go to state 471
    expr_field                        go to state 472
    expr_call                         go to state 473
    expr                              go to state 722
    expr_generator                    go to state 475
    expr_mtag                         go to state 476
    basic_type_declaration            go to state 477
    make_decl                         go to state 478
    make_struct_decl                  go to state 479
    make_tuple_call                   go to state 480
    make_dim_decl                     go to state 481
    make_table_decl                   go to state 482
    array_comprehension               go to state 483


State 802

  315 block_or_lambda: '@' '@' .

    $default  reduce using rule 315 (block_or_lambda)


State 803

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block

    "capture"  shift, and go to state 799

    $default  reduce using rule 323 (optional_capture_list)

    optional_capture_list  go to state 1020


State 804

  440 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1021


State 805

  482 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1022


State 806

  442 expr: expr "is" "name" .

    $default  reduce using rule 442 (expr)


State 807

  441 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 441 (expr)


State 808

  446 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1023


State 809

  480 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1024


State 810

  443 expr: expr "as" "name" .

    $default  reduce using rule 443 (expr)


State 811

  447 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 447 (expr)


State 812

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  397     | expr "<<" expr .
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '-'   shift, and go to state 638
    '+'   shift, and go to state 639
    '*'   shift, and go to state 640
    '/'   shift, and go to state 641
    '%'   shift, and go to state 642
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 397 (expr)


State 813

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  398     | expr ">>" expr .
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '-'   shift, and go to state 638
    '+'   shift, and go to state 639
    '*'   shift, and go to state 640
    '/'   shift, and go to state 641
    '%'   shift, and go to state 642
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 398 (expr)


State 814

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  410     | expr "<=" expr .
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 410 (expr)


State 815

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  411     | expr ">=" expr .
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 411 (expr)


State 816

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  408     | expr "==" expr .
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 408 (expr)


State 817

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  409     | expr "!=" expr .
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 409 (expr)


State 818

  356 expr_method_call: expr "->" "name" . '(' ')'
  357                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1025


State 819

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  436     | expr "??" expr .
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 436 (expr)


State 820

  477 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1026


State 821

  428 expr: expr "?." "name" .

    $default  reduce using rule 428 (expr)


State 822

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  426     | expr "?[" expr . ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ']'    shift, and go to state 1027


State 823

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  460     | expr "<|" expr .
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 460 (expr)


State 824

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  461     | expr "|>" expr .
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 620
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 461 (expr)


State 825

  381 expr_call: basic_type_declaration . '(' ')'
  382          | basic_type_declaration . '(' expr_list ')'
  462 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 646

    $default  reduce using rule 462 (expr)


State 826

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  399     | expr "<<<" expr .
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '-'   shift, and go to state 638
    '+'   shift, and go to state 639
    '*'   shift, and go to state 640
    '/'   shift, and go to state 641
    '%'   shift, and go to state 642
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 399 (expr)


State 827

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  400     | expr ">>>" expr .
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '-'   shift, and go to state 638
    '+'   shift, and go to state 639
    '*'   shift, and go to state 640
    '/'   shift, and go to state 641
    '%'   shift, and go to state 642
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 400 (expr)


State 828

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  415     | expr "&&" expr .
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 415 (expr)


State 829

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  416     | expr "||" expr .
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "^^"   shift, and go to state 630
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 416 (expr)


State 830

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  417     | expr "^^" expr .
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 417 (expr)


State 831

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  418     | expr ".." expr .
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    ".."  error (nonassociative)

    $default  reduce using rule 418 (expr)


State 832

  448 expr: expr '?' "as" . "name"
  451     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  452     | expr '?' "as" . basic_type_declaration
  481 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1028
    "bool"      shift, and go to state 225
    "void"      shift, and go to state 226
    "string"    shift, and go to state 227
    "int"       shift, and go to state 229
    "int2"      shift, and go to state 230
    "int3"      shift, and go to state 231
    "int4"      shift, and go to state 232
    "uint"      shift, and go to state 233
    "bitfield"  shift, and go to state 427
    "uint2"     shift, and go to state 235
    "uint3"     shift, and go to state 236
    "uint4"     shift, and go to state 237
    "float"     shift, and go to state 238
    "float2"    shift, and go to state 239
    "float3"    shift, and go to state 240
    "float4"    shift, and go to state 241
    "range"     shift, and go to state 242
    "urange"    shift, and go to state 243
    "range64"   shift, and go to state 244
    "urange64"  shift, and go to state 245
    "int64"     shift, and go to state 247
    "uint64"    shift, and go to state 248
    "double"    shift, and go to state 249
    "int8"      shift, and go to state 252
    "uint8"     shift, and go to state 253
    "int16"     shift, and go to state 254
    "uint16"    shift, and go to state 255
    "$f"        shift, and go to state 1029
    "name"      shift, and go to state 1030

    basic_type_declaration  go to state 1031


State 833

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  437     | expr '?' expr . ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    ':'    shift, and go to state 1032
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644


State 834

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  413     | expr '|' expr .
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 413 (expr)


State 835

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  414     | expr '^' expr .
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 414 (expr)


State 836

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  412     | expr '&' expr .
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 412 (expr)


State 837

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  406     | expr '<' expr .
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 406 (expr)


State 838

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  407     | expr '>' expr .
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 407 (expr)


State 839

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  402     | expr '-' expr .
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '*'   shift, and go to state 640
    '/'   shift, and go to state 641
    '%'   shift, and go to state 642
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 402 (expr)


State 840

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  401     | expr '+' expr .
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '*'   shift, and go to state 640
    '/'   shift, and go to state 641
    '%'   shift, and go to state 642
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 401 (expr)


State 841

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  403     | expr '*' expr .
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 403 (expr)


State 842

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  404     | expr '/' expr .
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 404 (expr)


State 843

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  405     | expr '%' expr .
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 610
    "as"  shift, and go to state 611
    "++"  shift, and go to state 614
    "--"  shift, and go to state 615
    "->"  shift, and go to state 620
    "??"  shift, and go to state 621
    "?."  shift, and go to state 622
    "?["  shift, and go to state 623
    "<|"  shift, and go to state 624
    "|>"  shift, and go to state 625
    '.'   shift, and go to state 643
    '['   shift, and go to state 644

    $default  reduce using rule 405 (expr)


State 844

  429 expr: expr '.' "?." . "name"
  479 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1033
    "name"  shift, and go to state 1034


State 845

  427 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1035
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 846

  476 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1036


State 847

  367 expr_field: expr '.' "name" .
  369           | expr '.' "name" . '(' ')'
  370           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1037

    $default  reduce using rule 367 (expr_field)


State 848

  368 expr_field: expr '.' '.' . "name"
  478 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1038
    "name"  shift, and go to state 1039


State 849

  425 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1040
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 850

  375 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1041


State 851

  371 expr_field: expr '.' basic_type_declaration . '(' ')'
  372           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1042


State 852

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  424     | expr '[' expr . ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ']'    shift, and go to state 1043


State 853

  381 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 381 (expr_call)


State 854

  309 expr_list: expr_list . ',' expr
  382 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1045


State 855

  693 type_declaration_no_options_no_dim: "iterator" '<' $@54 type_declaration '>' . $@55

    $default  reduce using rule 692 ($@55)

    $@55  go to state 1046


State 856

  683 type_declaration_no_options_no_dim: "smart_ptr" '<' $@48 type_declaration '>' . $@49

    $default  reduce using rule 682 ($@49)

    $@49  go to state 1047


State 857

  641 bitfield_bits: bitfield_bits "end of expression" . "name"

    "name"  shift, and go to state 1048


State 858

  647 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' . $@44

    $default  reduce using rule 646 ($@44)

    $@44  go to state 1049


State 859

  697 type_declaration_no_options_no_dim: "block" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 696 ($@57)

    $@57  go to state 1050


State 860

  700 type_declaration_no_options_no_dim: "block" '<' $@58 optional_function_argument_list optional_function_type . '>' $@59

    '>'  shift, and go to state 1051


State 861

  704 type_declaration_no_options_no_dim: "function" '<' $@60 type_declaration '>' . $@61

    $default  reduce using rule 703 ($@61)

    $@61  go to state 1052


State 862

  707 type_declaration_no_options_no_dim: "function" '<' $@62 optional_function_argument_list optional_function_type . '>' $@63

    '>'  shift, and go to state 1053


State 863

  711 type_declaration_no_options_no_dim: "lambda" '<' $@64 type_declaration '>' . $@65

    $default  reduce using rule 710 ($@65)

    $@65  go to state 1054


State 864

  714 type_declaration_no_options_no_dim: "lambda" '<' $@66 optional_function_argument_list optional_function_type . '>' $@67

    '>'  shift, and go to state 1055


State 865

  717 type_declaration_no_options_no_dim: "tuple" '<' $@68 tuple_type_list '>' . $@69

    $default  reduce using rule 716 ($@69)

    $@69  go to state 1056


State 866

  511 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 512
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    tuple_type                          go to state 1057
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 517


State 867

  720 type_declaration_no_options_no_dim: "variant" '<' $@70 variant_type_list '>' . $@71

    $default  reduce using rule 719 ($@71)

    $@71  go to state 1058


State 868

  517 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 519

    variant_type  go to state 1059


State 869

  255 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@47 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514
    '>'                  shift, and go to state 1060

    c_or_s  go to state 1061


State 870

  254 type_declaration_no_options_list: type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 254 (type_declaration_no_options_list)


State 871

  666 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 666 (type_declaration_no_options_no_dim)


State 872

  251 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 251 (optional_expr_list)


State 873

  654 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 654 (dim_list)


State 874

  735 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias "name" $@78 "begin of code block" $@79 bitfield_alias_bits optional_comma $@80 "end of code block" .

    $default  reduce using rule 735 (bitfield_alias_declaration)


State 875

  509 tuple_type: "name" ':' type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 509 (tuple_type)


State 876

  515 variant_type: "name" ':' type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 515 (variant_type)


State 877

  505 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 505 (function_argument_declaration)


State 878

  597 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1062
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 879

  598 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1063


State 880

  522 copy_or_move: "<-" .

    $default  reduce using rule 522 (copy_or_move)


State 881

  599 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  600                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1064


State 882

  521 copy_or_move: '=' .

    $default  reduce using rule 521 (copy_or_move)


State 883

  525 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  526                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1065


State 884

  524 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 524 (variable_declaration)


State 885

  527 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1066
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 886

  275 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1067
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 887

  274 expression_return: "return" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 274 (expression_return)


State 888

  278 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1068


State 889

  260 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1069
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 890

  259 expression_delete: "delete" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 259 (expression_delete)


State 891

   83 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1070


State 892

  246 expression_any: "pass" "end of expression" .

    $default  reduce using rule 246 (expression_any)


State 893

   52 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1071


State 894

   53 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1072


State 895

   54 expression_goto: "goto" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 54 (expression_goto)


State 896

   69 optional_semi_list: "end of expression" .

    $default  reduce using rule 69 (optional_semi_list)


State 897

   70 optional_semi_list: optional_semi_list . "end of expression"
   72 optional_semis: optional_semi_list .

    "end of expression"  shift, and go to state 1073

    $default  reduce using rule 72 (optional_semis)


State 898

   78 expression_unsafe: "unsafe" optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1074
    $@9               go to state 327


State 899

  277 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1075
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 900

  276 expression_yield: "yield" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 276 (expression_yield)


State 901

  244 expression_any: expression_label "end of expression" .

    $default  reduce using rule 244 (expression_any)


State 902

  245 expression_any: expression_goto "end of expression" .

    $default  reduce using rule 245 (expression_any)


State 903

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner "end of expression"

    '('  shift, and go to state 1076


State 904

   60 if_or_static_if: "if" .

    $default  reduce using rule 60 (if_or_static_if)


State 905

   61 if_or_static_if: "static_if" .

    $default  reduce using rule 61 (if_or_static_if)


State 906

   74 expression_if_then_else: $@2 if_or_static_if . '(' expr ')' optional_semis expression_block expression_else

    '('  shift, and go to state 1077


State 907

   77 expression_for_loop: $@3 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

    '('  shift, and go to state 1078


State 908

   80 expression_while_loop: $@4 "while" . '(' expr ')' optional_semis expression_block

    '('  shift, and go to state 1079


State 909

   82 expression_with: $@5 "with" . '(' expr ')' optional_semis expression_block

    '('  shift, and go to state 1080


State 910

  235 expression_any: expression_with_alias "end of expression" .

    $default  reduce using rule 235 (expression_any)


State 911

  226 expression_block: $@9 "begin of code block" expressions $@10 "end of code block" . expression_block_finally

    "finally"  shift, and go to state 1081

    $default  reduce using rule 220 (expression_block_finally)

    expression_block_finally  go to state 1082


State 912

  230 expression_any: expression_delete "end of expression" .

    $default  reduce using rule 230 (expression_any)


State 913

  237 expression_any: expression_break "end of expression" .

    $default  reduce using rule 237 (expression_any)


State 914

  238 expression_any: expression_continue "end of expression" .

    $default  reduce using rule 238 (expression_any)


State 915

  239 expression_any: expression_return "end of expression" .

    $default  reduce using rule 239 (expression_any)


State 916

  240 expression_any: expression_yield "end of expression" .

    $default  reduce using rule 240 (expression_any)


State 917

  284 optional_in_scope: "inscope" .

    $default  reduce using rule 284 (optional_in_scope)


State 918

  290 expression_let: kwd_let optional_in_scope . let_variable_declaration
  291               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  292               | kwd_let optional_in_scope . "begin of code block" variable_declaration_list "end of code block"

    "$i"                   shift, and go to state 538
    "name"                 shift, and go to state 539
    "begin of code block"  shift, and go to state 1083
    '('                    shift, and go to state 1084

    tuple_expansion_variable_declaration  go to state 1085
    let_variable_name_with_pos_list       go to state 540
    let_variable_declaration              go to state 1086


State 919

  229 expression_any: expr_assign "end of expression" .

    $default  reduce using rule 229 (expression_any)


State 920

  345 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1087
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 921

  346 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1088
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 922

  348 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1089
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 923

  347 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1090
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 924

  349 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1091
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 925

  339 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1092
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 926

  340 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1093
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 927

  341 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1094
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 928

  350 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1095
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 929

  351 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1096
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 930

  337 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1097
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 931

  338 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1098
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 932

  352 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1099
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 933

  353 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1100
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 934

  342 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1101
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 935

  343 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1102
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 936

  344 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1103
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 937

  336 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1104
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 938

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  562 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 562 (enum_expression)


State 939

  565 enum_list: enum_list ',' enum_expression .

    $default  reduce using rule 565 (enum_list)


State 940

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma $@40 . "end of code block"

    "end of code block"  shift, and go to state 1105


State 941

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header "end of expression"
  503                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "public"   shift, and go to state 1106
    "private"  shift, and go to state 1107

    $default  reduce using rule 491 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1108


State 942

  496 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1109

    $default  reduce using rule 494 (optional_static_member_variable)

    optional_static_member_variable  go to state 1110


State 943

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . "end of expression"

    "end of expression"  shift, and go to state 1111


State 944

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  534 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1112


State 945

  535 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 535 (let_variable_name_with_pos_list)


State 946

  536 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  537                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1113

    $default  reduce using rule 536 (let_variable_name_with_pos_list)


State 947

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . "end of expression"
  544                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"                 shift, and go to state 544
    ":="                 shift, and go to state 545
    "end of expression"  shift, and go to state 1114
    '='                  shift, and go to state 546

    copy_or_move_or_clone  go to state 1115


State 948

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1116
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 949

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  547 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 1117
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644


State 950

  548 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 548 (global_let_variable_declaration)


State 951

  664 type_declaration_no_options_no_dim: "type" '<' $@45 type_declaration '>' $@46 .

    $default  reduce using rule 664 (type_declaration_no_options_no_dim)


State 952

  687 type_declaration_no_options_no_dim: "array" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 687 (type_declaration_no_options_no_dim)


State 953

  690 type_declaration_no_options_no_dim: "table" '<' $@52 table_type_pair '>' $@53 .

    $default  reduce using rule 690 (type_declaration_no_options_no_dim)


State 954

  651 table_type_pair: type_declaration c_or_s type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 651 (table_type_pair)


State 955

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options . '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1118


State 956

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options . '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1119


State 957

  263 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1120


State 958

  269 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  758 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006

    $default  reduce using rule 758 (use_initializer)

    make_struct_fields  go to state 797
    make_struct_single  go to state 1121


State 959

  267 expr_new: "new" new_type_declaration '(' expr_list . ')'
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1122


State 960

  268 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1123


State 961

  266 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1124


State 962

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  307               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 513
    ','                  shift, and go to state 514
    '>'                  shift, and go to state 1125

    c_or_s  go to state 1126


State 963

  305 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1127


State 964

  304 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1128


State 965

  780 make_dim_decl: "array" "struct" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1129
    type_declaration_no_options_no_dim  go to state 266


State 966

  783 make_dim_decl: "array" "tuple" '<' $@93 . type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1130
    type_declaration_no_options_no_dim  go to state 266


State 967

  786 make_dim_decl: "array" "variant" '<' $@95 . type_declaration_no_options '>' $@96 '(' make_variant_dim ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1131
    type_declaration_no_options_no_dim  go to state 266


State 968

  790 make_dim_decl: "array" '<' $@97 type_declaration_no_options . '>' $@98 '(' optional_expr_list ')'

    '>'  shift, and go to state 1132


State 969

  787 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1133


State 970

  799 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1134


State 971

  800 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1135
    type_declaration_no_options_no_dim  go to state 266


State 972

  798 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1136


State 973

  433 expr: "deref" '(' expr ')' .

    $default  reduce using rule 433 (expr)


State 974

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr

    '>'  shift, and go to state 1137


State 975

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr

    '>'  shift, and go to state 1138


State 976

  434 expr: "addr" '(' expr ')' .

    $default  reduce using rule 434 (expr)


State 977

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr

    '>'  shift, and go to state 1139


State 978

  464 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 464 (expr)


State 979

  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options . '>' $@100 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1140


State 980

  791 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1141


State 981

  770 make_struct_decl: "default" '<' $@87 type_declaration_no_options . '>' $@88 use_initializer

    '>'  shift, and go to state 1142


State 982

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1143


State 983

  773 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1144


State 984

  767 make_struct_decl: "variant" '<' $@85 type_declaration_no_options . '>' $@86 '(' make_variant_dim ')'

    '>'  shift, and go to state 1145


State 985

  465 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  466               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  467               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_semis expression_block

    "capture"  shift, and go to state 799

    $default  reduce using rule 323 (optional_capture_list)

    optional_capture_list  go to state 1146


State 986

  468 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 468 (expr_mtag)


State 987

  469 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 469 (expr_mtag)


State 988

  470 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 470 (expr_mtag)


State 989

  471 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 471 (expr_mtag)


State 990

  472 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 472 (expr_mtag)


State 991

  474 expr_mtag: "$c" '(' expr ')' . '(' ')'
  475          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1147


State 992

   31 string_builder_body: string_builder_body "{" expr . "}"
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    "}"    shift, and go to state 1148
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644


State 993

  599 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  600                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1149
    ','   shift, and go to state 881


State 994

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  771 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 771 (make_map_tuple)


State 995

  796 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 796 (expr_map_tuple_list)


State 996

  797 make_table_decl: "begin of code block" expr_map_tuple_list optional_comma "end of code block" .

    $default  reduce using rule 797 (make_table_decl)


State 997

  599 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  600                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1150
    ','   shift, and go to state 881


State 998

  806 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 1151


State 999

  309 expr_list: expr_list ',' expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 309 (expr_list)


State 1000

  777 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 777 (make_dim_decl)


State 1001

  423 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 423 (expr)


State 1002

  359 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1152
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1003

  483 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1153
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1004

  363 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1154
    type_declaration_no_options_no_dim  go to state 266


State 1005

  366 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 324

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1155


State 1006

  741 make_struct_fields: "name" . copy_or_move expr
  742                   | "name" . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1010
    '='   shift, and go to state 882

    copy_or_move  go to state 1011


State 1007

  377 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 377 (expr_call)


State 1008

  379 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1156


State 1009

  745 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  746                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1157
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1010

  742 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1158
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1011

  741 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1159
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1012

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  743 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  744                   | make_struct_fields . ',' "name" ":=" expr
  747                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1015
    ']'  shift, and go to state 1160


State 1013

  309 expr_list: expr_list ',' . expr
  355 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 1161
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 999
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1014

  380 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 380 (expr_call)


State 1015

  743 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  744                   | make_struct_fields ',' . "name" ":=" expr
  747                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1162
    "name"  shift, and go to state 1163


State 1016

  378 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 378 (expr_call)


State 1017

  324 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1164
    ":="    shift, and go to state 1165
    "name"  shift, and go to state 1166
    '='     shift, and go to state 1167
    '&'     shift, and go to state 1168

    capture_entry  go to state 1169
    capture_list   go to state 1170


State 1018

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_semis block_or_simple_block

    ':'  shift, and go to state 392

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1171


State 1019

  327 expr_full_block_assumed_piped: "begin of code block" expressions "end of code block" .

    $default  reduce using rule 327 (expr_full_block_assumed_piped)


State 1020

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_semis expression_block

    '('  shift, and go to state 324

    $default  reduce using rule 123 (optional_function_argument_list)

    optional_function_argument_list  go to state 1172


State 1021

  440 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 438 ($@27)

    $@27  go to state 1173


State 1022

  482 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1174
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1023

  446 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 444 ($@29)

    $@29  go to state 1175


State 1024

  480 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1176
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1025

  356 expr_method_call: expr "->" "name" '(' . ')'
  357                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1177
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1178
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1026

  477 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1179
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1027

  426 expr: expr "?[" expr ']' .

    $default  reduce using rule 426 (expr)


State 1028

  451 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1180


State 1029

  481 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1181


State 1030

  448 expr: expr '?' "as" "name" .

    $default  reduce using rule 448 (expr)


State 1031

  452 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 452 (expr)


State 1032

  437 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1182
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1033

  479 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1183


State 1034

  429 expr: expr '.' "?." "name" .

    $default  reduce using rule 429 (expr)


State 1035

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  427     | expr '.' "?[" expr . ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ']'    shift, and go to state 1184


State 1036

  476 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1185
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1037

  369 expr_field: expr '.' "name" '(' . ')'
  370           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1186
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1187
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1038

  478 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1188


State 1039

  368 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 368 (expr_field)


State 1040

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  425     | expr '.' '[' expr . ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ']'    shift, and go to state 1189


State 1041

  375 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 374 ($@26)

    $@26  go to state 1190


State 1042

  371 expr_field: expr '.' basic_type_declaration '(' . ')'
  372           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1191
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1192
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1043

  424 expr: expr '[' expr ']' .

    $default  reduce using rule 424 (expr)


State 1044

  309 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 999
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1045

  382 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 382 (expr_call)


State 1046

  693 type_declaration_no_options_no_dim: "iterator" '<' $@54 type_declaration '>' $@55 .

    $default  reduce using rule 693 (type_declaration_no_options_no_dim)


State 1047

  683 type_declaration_no_options_no_dim: "smart_ptr" '<' $@48 type_declaration '>' $@49 .

    $default  reduce using rule 683 (type_declaration_no_options_no_dim)


State 1048

  641 bitfield_bits: bitfield_bits "end of expression" "name" .

    $default  reduce using rule 641 (bitfield_bits)


State 1049

  647 bitfield_type_declaration: "bitfield" '<' $@43 bitfield_bits '>' $@44 .

    $default  reduce using rule 647 (bitfield_type_declaration)


State 1050

  697 type_declaration_no_options_no_dim: "block" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 1051

  700 type_declaration_no_options_no_dim: "block" '<' $@58 optional_function_argument_list optional_function_type '>' . $@59

    $default  reduce using rule 699 ($@59)

    $@59  go to state 1193


State 1052

  704 type_declaration_no_options_no_dim: "function" '<' $@60 type_declaration '>' $@61 .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 1053

  707 type_declaration_no_options_no_dim: "function" '<' $@62 optional_function_argument_list optional_function_type '>' . $@63

    $default  reduce using rule 706 ($@63)

    $@63  go to state 1194


State 1054

  711 type_declaration_no_options_no_dim: "lambda" '<' $@64 type_declaration '>' $@65 .

    $default  reduce using rule 711 (type_declaration_no_options_no_dim)


State 1055

  714 type_declaration_no_options_no_dim: "lambda" '<' $@66 optional_function_argument_list optional_function_type '>' . $@67

    $default  reduce using rule 713 ($@67)

    $@67  go to state 1195


State 1056

  717 type_declaration_no_options_no_dim: "tuple" '<' $@68 tuple_type_list '>' $@69 .

    $default  reduce using rule 717 (type_declaration_no_options_no_dim)


State 1057

  511 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 511 (tuple_type_list)


State 1058

  720 type_declaration_no_options_no_dim: "variant" '<' $@70 variant_type_list '>' $@71 .

    $default  reduce using rule 720 (type_declaration_no_options_no_dim)


State 1059

  517 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 517 (variant_type_list)


State 1060

  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@47 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1196


State 1061

  255 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1197


State 1062

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  597 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1198


State 1063

  598 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 598 (variable_name_with_pos_list)


State 1064

  599 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  600                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1199

    $default  reduce using rule 599 (variable_name_with_pos_list)


State 1065

  525 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  526                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 880
    '='   shift, and go to state 882
    '|'   shift, and go to state 375

    $default  reduce using rule 525 (variable_declaration)

    copy_or_move  go to state 1200


State 1066

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  527 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 527 (variable_declaration)


State 1067

  275 expression_return: "return" "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 275 (expression_return)


State 1068

  278 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1201
    $@9               go to state 327


State 1069

  260 expression_delete: "delete" "explicit" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 260 (expression_delete)


State 1070

   83 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1202
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1071

   52 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 52 (expression_label)


State 1072

   53 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 53 (expression_goto)


State 1073

   70 optional_semi_list: optional_semi_list "end of expression" .

    $default  reduce using rule 70 (optional_semi_list)


State 1074

   78 expression_unsafe: "unsafe" optional_semis expression_block .

    $default  reduce using rule 78 (expression_unsafe)


State 1075

  277 expression_yield: "yield" "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 277 (expression_yield)


State 1076

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1203
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1077

   74 expression_if_then_else: $@2 if_or_static_if '(' . expr ')' optional_semis expression_block expression_else

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1204
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1078

   77 expression_for_loop: $@3 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_name_with_pos_list  go to state 1205


State 1079

   80 expression_while_loop: $@4 "while" '(' . expr ')' optional_semis expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1206
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1080

   82 expression_with: $@5 "with" '(' . expr ')' optional_semis expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1207
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1081

  223 expression_block_finally: "finally" . $@7 "begin of code block" expressions $@8 "end of code block"

    $default  reduce using rule 221 ($@7)

    $@7  go to state 1208


State 1082

  226 expression_block: $@9 "begin of code block" expressions $@10 "end of code block" expression_block_finally .

    $default  reduce using rule 226 (expression_block)


State 1083

  292 expression_let: kwd_let optional_in_scope "begin of code block" . variable_declaration_list "end of code block"

    $default  reduce using rule 540 (variable_declaration_list)

    variable_declaration_list  go to state 1209


State 1084

  288 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  289                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression"

    "name"  shift, and go to state 1210

    tuple_expansion  go to state 1211


State 1085

  291 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 291 (expression_let)


State 1086

  290 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 290 (expression_let)


State 1087

  345 expr_assign: expr "+=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 345 (expr_assign)


State 1088

  346 expr_assign: expr "-=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 346 (expr_assign)


State 1089

  348 expr_assign: expr "/=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 348 (expr_assign)


State 1090

  347 expr_assign: expr "*=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 347 (expr_assign)


State 1091

  349 expr_assign: expr "%=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 349 (expr_assign)


State 1092

  339 expr_assign: expr "&=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 339 (expr_assign)


State 1093

  340 expr_assign: expr "|=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 340 (expr_assign)


State 1094

  341 expr_assign: expr "^=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 341 (expr_assign)


State 1095

  350 expr_assign: expr "<<=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 350 (expr_assign)


State 1096

  351 expr_assign: expr ">>=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 351 (expr_assign)


State 1097

  337 expr_assign: expr "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 337 (expr_assign)


State 1098

  338 expr_assign: expr ":=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 338 (expr_assign)


State 1099

  352 expr_assign: expr "<<<=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 352 (expr_assign)


State 1100

  353 expr_assign: expr ">>>=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 353 (expr_assign)


State 1101

  342 expr_assign: expr "&&=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 342 (expr_assign)


State 1102

  343 expr_assign: expr "||=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 343 (expr_assign)


State 1103

  344 expr_assign: expr "^^=" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 344 (expr_assign)


State 1104

  336 expr_assign: expr '=' expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 336 (expr_assign)


State 1105

  580 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name optional_enum_basic_type_declaration "begin of code block" $@39 enum_list optional_comma $@40 "end of code block" .

    $default  reduce using rule 580 (enum_declaration)


State 1106

  492 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 492 (optional_public_or_private_member_variable)


State 1107

  493 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 493 (optional_public_or_private_member_variable)


State 1108

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header "end of expression"
  503                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block

    "abstract"  shift, and go to state 1212
    "static"    shift, and go to state 1109

    $default  reduce using rule 494 (optional_static_member_variable)

    optional_static_member_variable  go to state 1213


State 1109

  495 optional_static_member_variable: "static" .

    $default  reduce using rule 495 (optional_static_member_variable)


State 1110

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1214
    "sealed"    shift, and go to state 1215

    $default  reduce using rule 486 (optional_override)

    optional_override  go to state 1216


State 1111

  499 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration "end of expression" .

    $default  reduce using rule 499 (struct_variable_declaration_list)


State 1112

  534 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 534 (let_variable_name_with_pos_list)


State 1113

  537 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1217


State 1114

  543 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options "end of expression" .

    $default  reduce using rule 543 (let_variable_declaration)


State 1115

  544 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1218
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1116

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 1219
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644


State 1117

  547 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 547 (global_let_variable_declaration)


State 1118

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options '>' . $@82 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 760 ($@82)

    $@82  go to state 1220


State 1119

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options '>' . $@84 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 763 ($@84)

    $@84  go to state 1221


State 1120

  263 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 262 ($@12)

    $@12  go to state 1222


State 1121

  269 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1223


State 1122

  267 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 267 (expr_new)


State 1123

  268 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 268 (expr_new)


State 1124

  266 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 266 (expr_new)


State 1125

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1224


State 1126

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1225


State 1127

  305 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 305 (expr_type_info)


State 1128

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 303 ($@20)

    $@20  go to state 1226


State 1129

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1227


State 1130

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options . '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1228


State 1131

  786 make_dim_decl: "array" "variant" '<' $@95 type_declaration_no_options . '>' $@96 '(' make_variant_dim ')'

    '>'  shift, and go to state 1229


State 1132

  790 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' . $@98 '(' optional_expr_list ')'

    $default  reduce using rule 789 ($@98)

    $@98  go to state 1230


State 1133

  787 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 787 (make_dim_decl)


State 1134

  799 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 252 (optional_expr_map_tuple_list)

    string_builder                go to state 458
    expr_reader                   go to state 459
    expr_call_pipe                go to state 460
    optional_expr_map_tuple_list  go to state 1231
    name_in_namespace             go to state 461
    expr_new                      go to state 462
    expr_cast                     go to state 463
    expr_type_decl                go to state 464
    expr_type_info                go to state 465
    block_or_lambda               go to state 466
    expr_full_block               go to state 467
    expr_numeric_const            go to state 468
    expr_named_call               go to state 469
    expr_method_call              go to state 470
    func_addr_expr                go to state 471
    expr_field                    go to state 472
    expr_call                     go to state 473
    expr                          go to state 590
    expr_generator                go to state 475
    expr_mtag                     go to state 476
    basic_type_declaration        go to state 477
    make_decl                     go to state 478
    make_struct_decl              go to state 479
    make_map_tuple                go to state 591
    make_tuple_call               go to state 480
    make_dim_decl                 go to state 481
    expr_map_tuple_list           go to state 1232
    make_table_decl               go to state 482
    array_comprehension           go to state 483


State 1135

  800 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1233


State 1136

  798 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 798 (make_table_decl)


State 1137

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 294 ($@14)

    $@14  go to state 1234


State 1138

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 297 ($@16)

    $@16  go to state 1235


State 1139

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 300 ($@18)

    $@18  go to state 1236


State 1140

  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' . $@100 '(' expr_list optional_comma ')'

    $default  reduce using rule 793 ($@100)

    $@100  go to state 1237


State 1141

  791 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 791 (make_dim_decl)


State 1142

  770 make_struct_decl: "default" '<' $@87 type_declaration_no_options '>' . $@88 use_initializer

    $default  reduce using rule 769 ($@88)

    $@88  go to state 1238


State 1143

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 775 ($@90)

    $@90  go to state 1239


State 1144

  773 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 773 (make_tuple_call)


State 1145

  767 make_struct_decl: "variant" '<' $@85 type_declaration_no_options '>' . $@86 '(' make_variant_dim ')'

    $default  reduce using rule 766 ($@86)

    $@86  go to state 1240


State 1146

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  466               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  467               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_semis expression_block

    "end of expression"  shift, and go to state 896
    '('                  shift, and go to state 1241

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1242


State 1147

  474 expr_mtag: "$c" '(' expr ')' '(' . ')'
  475          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1243
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1244
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1148

   31 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 31 (string_builder_body)


State 1149

  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1245
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1150

  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1246
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1151

  599 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  600                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1247
    ','   shift, and go to state 881


State 1152

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  359 func_addr_name: "$i" '(' expr . ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1248


State 1153

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  483          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1249


State 1154

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name

    '>'  shift, and go to state 1250


State 1155

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 392

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1251


State 1156

  379 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 379 (expr_call)


State 1157

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  745 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  746                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1252


State 1158

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  742 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 742 (make_struct_fields)


State 1159

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  741 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 741 (make_struct_fields)


State 1160

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1253


State 1161

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  777 make_dim_decl: '[' . expr_list optional_comma ']'
  805 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'
  806                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "for"                             shift, and go to state 598
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "iterator"                        shift, and go to state 599
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "$f"                              shift, and go to state 792
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 793
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 600
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_fields      go to state 1254
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1162

  747 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  748                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1255


State 1163

  743 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  744                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1256
    '='   shift, and go to state 882

    copy_or_move  go to state 1257


State 1164

  318 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1258


State 1165

  319 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1259


State 1166

  320 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1260


State 1167

  317 capture_entry: '=' . "name"

    "name"  shift, and go to state 1261


State 1168

  316 capture_entry: '&' . "name"

    "name"  shift, and go to state 1262


State 1169

  321 capture_list: capture_entry .

    $default  reduce using rule 321 (capture_list)


State 1170

  322 capture_list: capture_list . ',' capture_entry
  324 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1263
    ')'  shift, and go to state 1264


State 1171

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_semis block_or_simple_block

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1265


State 1172

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_semis expression_block

    ':'  shift, and go to state 392

    $default  reduce using rule 126 (optional_function_type)

    optional_function_type  go to state 1266


State 1173

  440 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1267
    type_declaration_no_options_no_dim  go to state 266


State 1174

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  482          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1268


State 1175

  446 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1269


State 1176

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  480          | expr "as" "$f" '(' expr . ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1270


State 1177

  356 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 356 (expr_method_call)


State 1178

  309 expr_list: expr_list . ',' expr
  357 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1271


State 1179

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  477          | expr "?." "$f" '(' expr . ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1272


State 1180

  451 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 449 ($@31)

    $@31  go to state 1273


State 1181

  481 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1274
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1182

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  437     | expr '?' expr ':' expr .
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 437 (expr)


State 1183

  479 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1275
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1184

  427 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 427 (expr)


State 1185

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  476          | expr '.' "$f" '(' expr . ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1276


State 1186

  369 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 369 (expr_field)


State 1187

  309 expr_list: expr_list . ',' expr
  370 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1277


State 1188

  478 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1278
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1189

  425 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 425 (expr)


State 1190

  375 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 375 (expr_field)


State 1191

  371 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 371 (expr_field)


State 1192

  309 expr_list: expr_list . ',' expr
  372 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1279


State 1193

  700 type_declaration_no_options_no_dim: "block" '<' $@58 optional_function_argument_list optional_function_type '>' $@59 .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 1194

  707 type_declaration_no_options_no_dim: "function" '<' $@62 optional_function_argument_list optional_function_type '>' $@63 .

    $default  reduce using rule 707 (type_declaration_no_options_no_dim)


State 1195

  714 type_declaration_no_options_no_dim: "lambda" '<' $@66 optional_function_argument_list optional_function_type '>' $@67 .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 1196

  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@47 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 1280
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 665
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1197

  255 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375

    $default  reduce using rule 255 (type_declaration_no_options_list)


State 1198

  597 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 597 (variable_name_with_pos_list)


State 1199

  600 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1281


State 1200

  526 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1282
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1201

  278 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 278 (expression_try_catch)


State 1202

   83 expression_with_alias: "assume" "name" '=' expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 83 (expression_with_alias)


State 1203

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner "end of expression"
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1283


State 1204

   74 expression_if_then_else: $@2 if_or_static_if '(' expr . ')' optional_semis expression_block expression_else
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1284


State 1205

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_semis expression_block
  599 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  600                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1285
    ','   shift, and go to state 881


State 1206

   80 expression_while_loop: $@4 "while" '(' expr . ')' optional_semis expression_block
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1286


State 1207

   82 expression_with: $@5 "with" '(' expr . ')' optional_semis expression_block
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1287


State 1208

  223 expression_block_finally: "finally" $@7 . "begin of code block" expressions $@8 "end of code block"

    "begin of code block"  shift, and go to state 1288


State 1209

  292 expression_let: kwd_let optional_in_scope "begin of code block" variable_declaration_list . "end of code block"
  541 variable_declaration_list: variable_declaration_list . "end of expression"
  542                          | variable_declaration_list . let_variable_declaration

    "$i"                 shift, and go to state 538
    "name"               shift, and go to state 539
    "end of code block"  shift, and go to state 1289
    "end of expression"  shift, and go to state 1290

    let_variable_name_with_pos_list  go to state 540
    let_variable_declaration         go to state 1291


State 1210

  286 tuple_expansion: "name" .

    $default  reduce using rule 286 (tuple_expansion)


State 1211

  287 tuple_expansion: tuple_expansion . ',' "name"
  288 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  289                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr "end of expression"

    ','  shift, and go to state 1292
    ')'  shift, and go to state 1293


State 1212

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header "end of expression"

    "const"  shift, and go to state 1294

    $default  reduce using rule 489 (optional_constant)

    optional_constant  go to state 1295


State 1213

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header expression_block

    "override"  shift, and go to state 1214
    "sealed"    shift, and go to state 1215

    $default  reduce using rule 486 (optional_override)

    optional_override  go to state 1296


State 1214

  487 optional_override: "override" .

    $default  reduce using rule 487 (optional_override)


State 1215

  488 optional_override: "sealed" .

    $default  reduce using rule 488 (optional_override)


State 1216

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1106
    "private"  shift, and go to state 1107

    $default  reduce using rule 491 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1297


State 1217

  537 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 537 (let_variable_name_with_pos_list)


State 1218

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  544 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 1298
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644


State 1219

  545 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 545 (let_variable_declaration)


State 1220

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options '>' $@82 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1299


State 1221

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options '>' $@84 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1300


State 1222

  263 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 263 (new_type_declaration)


State 1223

  269 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 269 (expr_new)


State 1224

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1301
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1225

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1302


State 1226

  304 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 304 (expr_type_decl)


State 1227

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 779 ($@92)

    $@92  go to state 1303


State 1228

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options '>' . $@94 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 782 ($@94)

    $@94  go to state 1304


State 1229

  786 make_dim_decl: "array" "variant" '<' $@95 type_declaration_no_options '>' . $@96 '(' make_variant_dim ')'

    $default  reduce using rule 785 ($@96)

    $@96  go to state 1305


State 1230

  790 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 . '(' optional_expr_list ')'

    '('  shift, and go to state 1306


State 1231

  799 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1307


State 1232

  253 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  796 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 779

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 1308


State 1233

  800 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1309


State 1234

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1310
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1235

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1311
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1236

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1312
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1237

  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1313


State 1238

  770 make_struct_decl: "default" '<' $@87 type_declaration_no_options '>' $@88 . use_initializer

    "uninitialized"  shift, and go to state 1314

    $default  reduce using rule 757 (use_initializer)

    use_initializer  go to state 1315


State 1239

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1316


State 1240

  767 make_struct_decl: "variant" '<' $@85 type_declaration_no_options '>' $@86 . '(' make_variant_dim ')'

    '('  shift, and go to state 1317


State 1241

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  466               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    ')'                               shift, and go to state 1318
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1319
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1242

  467 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1320
    $@9               go to state 327


State 1243

  474 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 474 (expr_mtag)


State 1244

  309 expr_list: expr_list . ',' expr
  475 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1321


State 1245

  309 expr_list: expr_list . ',' expr
  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" make_map_tuple array_comprehension_where "end of code block"

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1322


State 1246

  309 expr_list: expr_list . ',' expr
  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" expr array_comprehension_where ']'

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1323


State 1247

  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1324
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1248

  359 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 359 (func_addr_name)


State 1249

  483 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 483 (expr_mtag)


State 1250

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 362 ($@22)

    $@22  go to state 1325


State 1251

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1326


State 1252

  745 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  746                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1327
    '='   shift, and go to state 882

    copy_or_move  go to state 1328


State 1253

  354 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 354 (expr_named_call)


State 1254

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  743 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  744                   | make_struct_fields . ',' "name" ":=" expr
  747                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1015
    ']'  shift, and go to state 1329


State 1255

  747 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  748                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1330
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1256

  744 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1331
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1257

  743 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1332
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1258

  318 capture_entry: "<-" "name" .

    $default  reduce using rule 318 (capture_entry)


State 1259

  319 capture_entry: ":=" "name" .

    $default  reduce using rule 319 (capture_entry)


State 1260

  320 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1333


State 1261

  317 capture_entry: '=' "name" .

    $default  reduce using rule 317 (capture_entry)


State 1262

  316 capture_entry: '&' "name" .

    $default  reduce using rule 316 (capture_entry)


State 1263

  322 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1164
    ":="    shift, and go to state 1165
    "name"  shift, and go to state 1166
    '='     shift, and go to state 1167
    '&'     shift, and go to state 1168

    capture_entry  go to state 1334


State 1264

  324 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 324 (optional_capture_list)


State 1265

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis . block_or_simple_block

    "=>"  shift, and go to state 1335

    $default  reduce using rule 224 ($@9)

    expression_block       go to state 1336
    $@9                    go to state 327
    block_or_simple_block  go to state 1337


State 1266

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_semis expression_block

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1338


State 1267

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28

    '>'  shift, and go to state 1339


State 1268

  482 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 482 (expr_mtag)


State 1269

  446 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1340


State 1270

  480 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 1271

  357 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 357 (expr_method_call)


State 1272

  477 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 477 (expr_mtag)


State 1273

  451 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 265
    type_declaration_no_options_no_dim  go to state 266
    type_declaration                    go to state 1341


State 1274

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  481          | expr '?' "as" "$f" '(' expr . ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1342


State 1275

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  479          | expr '.' "?." "$f" '(' expr . ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1343


State 1276

  476 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 476 (expr_mtag)


State 1277

  370 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 370 (expr_field)


State 1278

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  478          | expr '.' '.' "$f" '(' expr . ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1344


State 1279

  372 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 372 (expr_field)


State 1280

  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@47 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1345


State 1281

  600 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 600 (variable_name_with_pos_list)


State 1282

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  526 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 526 (variable_declaration)


State 1283

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner "end of expression"

    "else"  shift, and go to state 1346

    $default  reduce using rule 62 (expression_else_one_liner)

    expression_else_one_liner  go to state 1347


State 1284

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' . optional_semis expression_block expression_else

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1348


State 1285

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_semis expression_block

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1349
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1286

   80 expression_while_loop: $@4 "while" '(' expr ')' . optional_semis expression_block

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1350


State 1287

   82 expression_with: $@5 "with" '(' expr ')' . optional_semis expression_block

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1351


State 1288

  223 expression_block_finally: "finally" $@7 "begin of code block" . expressions $@8 "end of code block"

    $default  reduce using rule 247 (expressions)

    expressions  go to state 1352


State 1289

  292 expression_let: kwd_let optional_in_scope "begin of code block" variable_declaration_list "end of code block" .

    $default  reduce using rule 292 (expression_let)


State 1290

  541 variable_declaration_list: variable_declaration_list "end of expression" .

    $default  reduce using rule 541 (variable_declaration_list)


State 1291

  542 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 542 (variable_declaration_list)


State 1292

  287 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1353


State 1293

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression"
  289                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr "end of expression"

    ':'  shift, and go to state 1354
    '&'  shift, and go to state 404

    $default  reduce using rule 531 (optional_ref)

    optional_ref  go to state 1355


State 1294

  490 optional_constant: "const" .

    $default  reduce using rule 490 (optional_constant)


State 1295

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header "end of expression"

    $default  reduce using rule 500 ($@34)

    $@34  go to state 1356


State 1296

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header expression_block

    "const"  shift, and go to state 1294

    $default  reduce using rule 489 (optional_constant)

    optional_constant  go to state 1357


State 1297

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 679
    "name"  shift, and go to state 680

    variable_declaration         go to state 1358
    variable_name_with_pos_list  go to state 682


State 1298

  544 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 544 (let_variable_declaration)


State 1299

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options '>' $@82 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1314

    $default  reduce using rule 757 (use_initializer)

    use_initializer  go to state 1359


State 1300

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options '>' $@84 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1314

    $default  reduce using rule 757 (use_initializer)

    use_initializer  go to state 1360


State 1301

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1361


State 1302

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1362


State 1303

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1363


State 1304

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options '>' $@94 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1364


State 1305

  786 make_dim_decl: "array" "variant" '<' $@95 type_declaration_no_options '>' $@96 . '(' make_variant_dim ')'

    '('  shift, and go to state 1365


State 1306

  790 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 250 (optional_expr_list)

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    optional_expr_list      go to state 1366
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 665
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1307

  799 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 799 (make_table_decl)


State 1308

  253 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 253 (optional_expr_map_tuple_list)


State 1309

  800 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    $default  reduce using rule 252 (optional_expr_map_tuple_list)

    string_builder                go to state 458
    expr_reader                   go to state 459
    expr_call_pipe                go to state 460
    optional_expr_map_tuple_list  go to state 1367
    name_in_namespace             go to state 461
    expr_new                      go to state 462
    expr_cast                     go to state 463
    expr_type_decl                go to state 464
    expr_type_info                go to state 465
    block_or_lambda               go to state 466
    expr_full_block               go to state 467
    expr_numeric_const            go to state 468
    expr_named_call               go to state 469
    expr_method_call              go to state 470
    func_addr_expr                go to state 471
    expr_field                    go to state 472
    expr_call                     go to state 473
    expr                          go to state 590
    expr_generator                go to state 475
    expr_mtag                     go to state 476
    basic_type_declaration        go to state 477
    make_decl                     go to state 478
    make_struct_decl              go to state 479
    make_map_tuple                go to state 591
    make_tuple_call               go to state 480
    make_dim_decl                 go to state 481
    expr_map_tuple_list           go to state 1232
    make_table_decl               go to state 482
    array_comprehension           go to state 483


State 1310

  295 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 295 (expr_cast)


State 1311

  298 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 298 (expr_cast)


State 1312

  301 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 301 (expr_cast)


State 1313

  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    expr_list               go to state 1368
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 601
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1314

  758 use_initializer: "uninitialized" .

    $default  reduce using rule 758 (use_initializer)


State 1315

  770 make_struct_decl: "default" '<' $@87 type_declaration_no_options '>' $@88 use_initializer .

    $default  reduce using rule 770 (make_struct_decl)


State 1316

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1314

    $default  reduce using rule 757 (use_initializer)

    use_initializer  go to state 1369


State 1317

  767 make_struct_decl: "variant" '<' $@85 type_declaration_no_options '>' $@86 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006

    make_struct_fields  go to state 1370
    make_variant_dim    go to state 1371


State 1318

  465 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 465 (expr_generator)


State 1319

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  466 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1372


State 1320

  467 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_semis expression_block .

    $default  reduce using rule 467 (expr_generator)


State 1321

  475 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 475 (expr_mtag)


State 1322

  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1373


State 1323

  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1374


State 1324

  309 expr_list: expr_list . ',' expr
  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' "end of expression" expr array_comprehension_where ']'

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1375


State 1325

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 786
    "name"  shift, and go to state 56

    name_in_namespace  go to state 789
    func_addr_name     go to state 1376


State 1326

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 365 ($@24)

    $@24  go to state 1377


State 1327

  746 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1378
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1328

  745 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1379
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1329

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1380


State 1330

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  747 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  748                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1381


State 1331

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  744 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 744 (make_struct_fields)


State 1332

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  743 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 743 (make_struct_fields)


State 1333

  320 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1382


State 1334

  322 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 322 (capture_list)


State 1335

  311 block_or_simple_block: "=>" . expr
  312                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "<-"                              shift, and go to state 1383
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1384
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1336

  310 block_or_simple_block: expression_block .

    $default  reduce using rule 310 (block_or_simple_block)


State 1337

  325 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis block_or_simple_block .

    $default  reduce using rule 325 (expr_full_block)


State 1338

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1385
    $@9               go to state 327


State 1339

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 439 ($@28)

    $@28  go to state 1386


State 1340

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 445 ($@30)

    $@30  go to state 1387


State 1341

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  722 type_declaration: type_declaration . '|' type_declaration_no_options
  723                 | type_declaration . '|' '#'

    '|'  shift, and go to state 375
    '>'  shift, and go to state 1388


State 1342

  481 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 481 (expr_mtag)


State 1343

  479 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 1344

  478 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 1345

  668 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@47 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 668 (type_declaration_no_options_no_dim)


State 1346

   63 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 685
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 686
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 690
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 695
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder           go to state 458
    expr_reader              go to state 459
    expression_if_one_liner  go to state 1389
    expr_call_pipe           go to state 460
    name_in_namespace        go to state 461
    expr_new                 go to state 462
    expression_break         go to state 1390
    expression_continue      go to state 1391
    expression_return        go to state 1392
    expression_yield         go to state 1393
    expr_cast                go to state 463
    expr_type_decl           go to state 464
    expr_type_info           go to state 465
    block_or_lambda          go to state 466
    expr_full_block          go to state 467
    expr_numeric_const       go to state 468
    expr_named_call          go to state 469
    expr_method_call         go to state 470
    func_addr_expr           go to state 471
    expr_field               go to state 472
    expr_call                go to state 473
    expr                     go to state 1394
    expr_generator           go to state 475
    expr_mtag                go to state 476
    basic_type_declaration   go to state 477
    make_decl                go to state 478
    make_struct_decl         go to state 479
    make_tuple_call          go to state 480
    make_dim_decl            go to state 481
    make_table_decl          go to state 482
    array_comprehension      go to state 483


State 1347

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . "end of expression"

    "end of expression"  shift, and go to state 1395


State 1348

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis . expression_block expression_else

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1396
    $@9               go to state 327


State 1349

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_semis expression_block
  309 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1044
    ')'  shift, and go to state 1397


State 1350

   80 expression_while_loop: $@4 "while" '(' expr ')' optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1398
    $@9               go to state 327


State 1351

   82 expression_with: $@5 "with" '(' expr ')' optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1399
    $@9               go to state 327


State 1352

  223 expression_block_finally: "finally" $@7 "begin of code block" expressions . $@8 "end of code block"
  248 expressions: expressions . expression_any
  249            | expressions . error

    error                             shift, and go to state 684
    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "return"                          shift, and go to state 685
    "null"                            shift, and go to state 417
    "break"                           shift, and go to state 686
    "try"                             shift, and go to state 687
    "table"                           shift, and go to state 418
    "delete"                          shift, and go to state 688
    "deref"                           shift, and go to state 419
    "assume"                          shift, and go to state 689
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 422
    "continue"                        shift, and go to state 690
    "pass"                            shift, and go to state 691
    "reinterpret"                     shift, and go to state 423
    "label"                           shift, and go to state 692
    "goto"                            shift, and go to state 693
    "unsafe"                          shift, and go to state 694
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "yield"                           shift, and go to state 695
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    "end of expression"               shift, and go to state 696
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    "while"              reduce using rule 79 ($@4)
    "if"                 reduce using rule 73 ($@2)
    "static_if"          reduce using rule 73 ($@2)
    "for"                reduce using rule 76 ($@3)
    "with"               reduce using rule 81 ($@5)
    "end of code block"  reduce using rule 222 ($@8)

    string_builder                    go to state 458
    expr_reader                       go to state 459
    expression_label                  go to state 697
    expression_goto                   go to state 698
    expression_if_one_liner           go to state 699
    expression_if_then_else           go to state 700
    $@2                               go to state 701
    expression_if_then_else_oneliner  go to state 702
    expression_for_loop               go to state 703
    $@3                               go to state 704
    expression_unsafe                 go to state 705
    expression_while_loop             go to state 706
    $@4                               go to state 707
    expression_with                   go to state 708
    $@5                               go to state 709
    expression_with_alias             go to state 710
    $@8                               go to state 1400
    expr_call_pipe                    go to state 460
    expression_any                    go to state 712
    name_in_namespace                 go to state 461
    expression_delete                 go to state 713
    expr_new                          go to state 462
    expression_break                  go to state 714
    expression_continue               go to state 715
    expression_return                 go to state 716
    expression_yield                  go to state 717
    expression_try_catch              go to state 718
    kwd_let                           go to state 719
    expression_let                    go to state 720
    expr_cast                         go to state 463
    expr_type_decl                    go to state 464
    expr_type_info                    go to state 465
    block_or_lambda                   go to state 466
    expr_full_block                   go to state 467
    expr_numeric_const                go to state 468
    expr_assign                       go to state 721
    expr_named_call                   go to state 469
    expr_method_call                  go to state 470
    func_addr_expr                    go to state 471
    expr_field                        go to state 472
    expr_call                         go to state 473
    expr                              go to state 722
    expr_generator                    go to state 475
    expr_mtag                         go to state 476
    basic_type_declaration            go to state 477
    make_decl                         go to state 478
    make_struct_decl                  go to state 479
    make_tuple_call                   go to state 480
    make_dim_decl                     go to state 481
    make_table_decl                   go to state 482
    array_comprehension               go to state 483


State 1353

  287 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 287 (tuple_expansion)


State 1354

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr "end of expression"

    "type"       shift, and go to state 219
    "array"      shift, and go to state 220
    "table"      shift, and go to state 221
    "typedecl"   shift, and go to state 222
    "iterator"   shift, and go to state 223
    "smart_ptr"  shift, and go to state 224
    "bool"       shift, and go to state 225
    "void"       shift, and go to state 226
    "string"     shift, and go to state 227
    "auto"       shift, and go to state 228
    "int"        shift, and go to state 229
    "int2"       shift, and go to state 230
    "int3"       shift, and go to state 231
    "int4"       shift, and go to state 232
    "uint"       shift, and go to state 233
    "bitfield"   shift, and go to state 234
    "uint2"      shift, and go to state 235
    "uint3"      shift, and go to state 236
    "uint4"      shift, and go to state 237
    "float"      shift, and go to state 238
    "float2"     shift, and go to state 239
    "float3"     shift, and go to state 240
    "float4"     shift, and go to state 241
    "range"      shift, and go to state 242
    "urange"     shift, and go to state 243
    "range64"    shift, and go to state 244
    "urange64"   shift, and go to state 245
    "block"      shift, and go to state 246
    "int64"      shift, and go to state 247
    "uint64"     shift, and go to state 248
    "double"     shift, and go to state 249
    "function"   shift, and go to state 250
    "lambda"     shift, and go to state 251
    "int8"       shift, and go to state 252
    "uint8"      shift, and go to state 253
    "int16"      shift, and go to state 254
    "uint16"     shift, and go to state 255
    "tuple"      shift, and go to state 256
    "variant"    shift, and go to state 257
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 258
    "name"       shift, and go to state 56
    '$'          shift, and go to state 259

    name_in_namespace                   go to state 260
    basic_type_declaration              go to state 261
    structure_type_declaration          go to state 262
    auto_type_declaration               go to state 263
    bitfield_type_declaration           go to state 264
    type_declaration_no_options         go to state 1401
    type_declaration_no_options_no_dim  go to state 266


State 1355

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 1402


State 1356

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header "end of expression"

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1403


State 1357

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header expression_block

    $default  reduce using rule 502 ($@35)

    $@35  go to state 1404


State 1358

  496 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 496 (structure_variable_declaration)


State 1359

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006
    '('     shift, and go to state 1405

    $default  reduce using rule 756 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1406
    make_struct_dim_list           go to state 1407
    make_struct_dim_decl           go to state 1408
    optional_make_struct_dim_decl  go to state 1409


State 1360

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006
    '('     shift, and go to state 1405

    $default  reduce using rule 756 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1406
    make_struct_dim_list           go to state 1407
    make_struct_dim_decl           go to state 1408
    optional_make_struct_dim_decl  go to state 1410


State 1361

  306 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 306 (expr_type_info)


State 1362

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1411
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1363

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1314

    $default  reduce using rule 757 (use_initializer)

    use_initializer  go to state 1412


State 1364

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1314

    $default  reduce using rule 757 (use_initializer)

    use_initializer  go to state 1413


State 1365

  786 make_dim_decl: "array" "variant" '<' $@95 type_declaration_no_options '>' $@96 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006

    make_struct_fields  go to state 1370
    make_variant_dim    go to state 1414


State 1366

  790 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1415


State 1367

  800 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1416


State 1368

  309 expr_list: expr_list . ',' expr
  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 783

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 1417


State 1369

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006
    '('     shift, and go to state 1405

    $default  reduce using rule 756 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1406
    make_struct_dim_list           go to state 1407
    make_struct_dim_decl           go to state 1408
    optional_make_struct_dim_decl  go to state 1418


State 1370

  743 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  744                   | make_struct_fields . ',' "name" ":=" expr
  747                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  749 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1015

    $default  reduce using rule 749 (make_variant_dim)


State 1371

  767 make_struct_decl: "variant" '<' $@85 type_declaration_no_options '>' $@86 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1419


State 1372

  466 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 466 (expr_generator)


State 1373

  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 590
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_map_tuple          go to state 1420
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1374

  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1421
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1375

  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1422


State 1376

  363 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 363 (func_addr_expr)


State 1377

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 786
    "name"  shift, and go to state 56

    name_in_namespace  go to state 789
    func_addr_name     go to state 1423


State 1378

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  746 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 746 (make_struct_fields)


State 1379

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  745 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 745 (make_struct_fields)


State 1380

  355 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 355 (expr_named_call)


State 1381

  747 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  748                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 880
    ":="  shift, and go to state 1424
    '='   shift, and go to state 882

    copy_or_move  go to state 1425


State 1382

  320 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 320 (capture_entry)


State 1383

  312 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1426
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1384

  311 block_or_simple_block: "=>" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    ".."  error (nonassociative)

    $default  reduce using rule 311 (block_or_simple_block)


State 1385

  326 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_semis expression_block .

    $default  reduce using rule 326 (expr_full_block_assumed_piped)


State 1386

  440 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 440 (expr)


State 1387

  446 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 446 (expr)


State 1388

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 450 ($@32)

    $@32  go to state 1427


State 1389

   63 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 63 (expression_else_one_liner)


State 1390

   67 expression_if_one_liner: expression_break .

    $default  reduce using rule 67 (expression_if_one_liner)


State 1391

   68 expression_if_one_liner: expression_continue .

    $default  reduce using rule 68 (expression_if_one_liner)


State 1392

   65 expression_if_one_liner: expression_return .

    $default  reduce using rule 65 (expression_if_one_liner)


State 1393

   66 expression_if_one_liner: expression_yield .

    $default  reduce using rule 66 (expression_if_one_liner)


State 1394

   64 expression_if_one_liner: expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 64 (expression_if_one_liner)


State 1395

   75 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner "end of expression" .

    $default  reduce using rule 75 (expression_if_then_else_oneliner)


State 1396

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis expression_block . expression_else

    "else"         shift, and go to state 1428
    "elif"         shift, and go to state 1429
    "static_elif"  shift, and go to state 1430

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1431
    expression_else      go to state 1432


State 1397

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_semis expression_block

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1433


State 1398

   80 expression_while_loop: $@4 "while" '(' expr ')' optional_semis expression_block .

    $default  reduce using rule 80 (expression_while_loop)


State 1399

   82 expression_with: $@5 "with" '(' expr ')' optional_semis expression_block .

    $default  reduce using rule 82 (expression_with)


State 1400

  223 expression_block_finally: "finally" $@7 "begin of code block" expressions $@8 . "end of code block"

    "end of code block"  shift, and go to state 1434


State 1401

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr "end of expression"

    "<-"  shift, and go to state 544
    ":="  shift, and go to state 545
    '='   shift, and go to state 546

    copy_or_move_or_clone  go to state 1435


State 1402

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1436
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1403

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . "end of expression"

    "end of expression"  shift, and go to state 1437


State 1404

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header expression_block

    "operator"  shift, and go to state 174
    "bool"      shift, and go to state 175
    "string"    shift, and go to state 176
    "int"       shift, and go to state 177
    "int2"      shift, and go to state 178
    "int3"      shift, and go to state 179
    "int4"      shift, and go to state 180
    "uint"      shift, and go to state 181
    "uint2"     shift, and go to state 182
    "uint3"     shift, and go to state 183
    "uint4"     shift, and go to state 184
    "float"     shift, and go to state 185
    "float2"    shift, and go to state 186
    "float3"    shift, and go to state 187
    "float4"    shift, and go to state 188
    "range"     shift, and go to state 189
    "urange"    shift, and go to state 190
    "range64"   shift, and go to state 191
    "urange64"  shift, and go to state 192
    "int64"     shift, and go to state 193
    "uint64"    shift, and go to state 194
    "double"    shift, and go to state 195
    "int8"      shift, and go to state 196
    "uint8"     shift, and go to state 197
    "int16"     shift, and go to state 198
    "uint16"    shift, and go to state 199
    "++"        shift, and go to state 200
    "--"        shift, and go to state 201
    "name"      shift, and go to state 202

    function_name                go to state 203
    function_declaration_header  go to state 1438


State 1405

  751 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006

    make_struct_fields  go to state 1439


State 1406

  743 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  744                   | make_struct_fields . ',' "name" ":=" expr
  747                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  753 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1015

    $default  reduce using rule 753 (make_struct_dim_decl)


State 1407

  752 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  754 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1440

    $default  reduce using rule 803 (optional_comma)

    optional_comma  go to state 1441


State 1408

  755 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 755 (optional_make_struct_dim_decl)


State 1409

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1442


State 1410

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1443


State 1411

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1444


State 1412

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006
    '('     shift, and go to state 1405

    $default  reduce using rule 756 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1406
    make_struct_dim_list           go to state 1407
    make_struct_dim_decl           go to state 1408
    optional_make_struct_dim_decl  go to state 1445


State 1413

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006
    '('     shift, and go to state 1405

    $default  reduce using rule 756 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1406
    make_struct_dim_list           go to state 1407
    make_struct_dim_decl           go to state 1408
    optional_make_struct_dim_decl  go to state 1446


State 1414

  786 make_dim_decl: "array" "variant" '<' $@95 type_declaration_no_options '>' $@96 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1447


State 1415

  790 make_dim_decl: "array" '<' $@97 type_declaration_no_options '>' $@98 '(' optional_expr_list ')' .

    $default  reduce using rule 790 (make_dim_decl)


State 1416

  800 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 800 (make_table_decl)


State 1417

  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1448


State 1418

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1449


State 1419

  767 make_struct_decl: "variant" '<' $@85 type_declaration_no_options '>' $@86 '(' make_variant_dim ')' .

    $default  reduce using rule 767 (make_struct_decl)


State 1420

  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1450

    $default  reduce using rule 801 (array_comprehension_where)

    array_comprehension_where  go to state 1451


State 1421

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 1450
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644

    $default  reduce using rule 801 (array_comprehension_where)

    array_comprehension_where  go to state 1452


State 1422

  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1453
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1423

  366 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 366 (func_addr_expr)


State 1424

  748 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1454
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1425

  747 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1455
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1426

  312 block_or_simple_block: "=>" "<-" expr .
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 312 (block_or_simple_block)


State 1427

  451 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 451 (expr)


State 1428

   58 expression_else: "else" . optional_semis expression_block

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1456


State 1429

   55 elif_or_static_elif: "elif" .

    $default  reduce using rule 55 (elif_or_static_elif)


State 1430

   56 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 56 (elif_or_static_elif)


State 1431

   59 expression_else: elif_or_static_elif . '(' expr ')' optional_semis expression_block expression_else

    '('  shift, and go to state 1457


State 1432

   74 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_semis expression_block expression_else .

    $default  reduce using rule 74 (expression_if_then_else)


State 1433

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1458
    $@9               go to state 327


State 1434

  223 expression_block_finally: "finally" $@7 "begin of code block" expressions $@8 "end of code block" .

    $default  reduce using rule 223 (expression_block_finally)


State 1435

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr "end of expression"

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1459
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1436

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . "end of expression"
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 1460
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644


State 1437

  501 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header "end of expression" .

    $default  reduce using rule 501 (struct_variable_declaration_list)


State 1438

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1461
    $@9               go to state 327


State 1439

  743 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  744                   | make_struct_fields . ',' "name" ":=" expr
  747                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  751 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1015
    ')'  shift, and go to state 1462


State 1440

  752 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  804 optional_comma: ',' .

    '('  shift, and go to state 1463

    $default  reduce using rule 804 (optional_comma)


State 1441

  754 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 754 (make_struct_dim_decl)


State 1442

  761 make_struct_decl: "struct" '<' $@81 type_declaration_no_options '>' $@82 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 761 (make_struct_decl)


State 1443

  764 make_struct_decl: "class" '<' $@83 type_declaration_no_options '>' $@84 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 764 (make_struct_decl)


State 1444

  307 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 307 (expr_type_info)


State 1445

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1464


State 1446

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1465


State 1447

  786 make_dim_decl: "array" "variant" '<' $@95 type_declaration_no_options '>' $@96 '(' make_variant_dim ')' .

    $default  reduce using rule 786 (make_dim_decl)


State 1448

  794 make_dim_decl: "fixed_array" '<' $@99 type_declaration_no_options '>' $@100 '(' expr_list optional_comma ')' .

    $default  reduce using rule 794 (make_dim_decl)


State 1449

  776 make_tuple_call: "tuple" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 776 (make_tuple_call)


State 1450

  802 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1466


State 1451

  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1467


State 1452

  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1468


State 1453

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 1450
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644

    $default  reduce using rule 801 (array_comprehension_where)

    array_comprehension_where  go to state 1469


State 1454

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  748 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 748 (make_struct_fields)


State 1455

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  747 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 747 (make_struct_fields)


State 1456

   58 expression_else: "else" optional_semis . expression_block

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1470
    $@9               go to state 327


State 1457

   59 expression_else: elif_or_static_elif '(' . expr ')' optional_semis expression_block expression_else

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1471
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1458

   77 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_semis expression_block .

    $default  reduce using rule 77 (expression_for_loop)


State 1459

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . "end of expression"
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 610
    "as"                 shift, and go to state 611
    "<<"                 shift, and go to state 612
    ">>"                 shift, and go to state 613
    "++"                 shift, and go to state 614
    "--"                 shift, and go to state 615
    "<="                 shift, and go to state 616
    ">="                 shift, and go to state 617
    "=="                 shift, and go to state 618
    "!="                 shift, and go to state 619
    "->"                 shift, and go to state 620
    "??"                 shift, and go to state 621
    "?."                 shift, and go to state 622
    "?["                 shift, and go to state 623
    "<|"                 shift, and go to state 624
    "|>"                 shift, and go to state 625
    "<<<"                shift, and go to state 626
    ">>>"                shift, and go to state 627
    "&&"                 shift, and go to state 628
    "||"                 shift, and go to state 629
    "^^"                 shift, and go to state 630
    ".."                 shift, and go to state 631
    "end of expression"  shift, and go to state 1472
    '?'                  shift, and go to state 632
    '|'                  shift, and go to state 633
    '^'                  shift, and go to state 634
    '&'                  shift, and go to state 635
    '<'                  shift, and go to state 636
    '>'                  shift, and go to state 637
    '-'                  shift, and go to state 638
    '+'                  shift, and go to state 639
    '*'                  shift, and go to state 640
    '/'                  shift, and go to state 641
    '%'                  shift, and go to state 642
    '.'                  shift, and go to state 643
    '['                  shift, and go to state 644


State 1460

  289 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 289 (tuple_expansion_variable_declaration)


State 1461

  503 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header expression_block .

    $default  reduce using rule 503 (struct_variable_declaration_list)


State 1462

  751 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 751 (make_struct_dim_list)


State 1463

  752 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 792
    "name"  shift, and go to state 1006

    make_struct_fields  go to state 1473


State 1464

  780 make_dim_decl: "array" "struct" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 780 (make_dim_decl)


State 1465

  783 make_dim_decl: "array" "tuple" '<' $@93 type_declaration_no_options '>' $@94 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 783 (make_dim_decl)


State 1466

  802 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 409
    "class"                           shift, and go to state 410
    "true"                            shift, and go to state 411
    "false"                           shift, and go to state 412
    "new"                             shift, and go to state 413
    "typeinfo"                        shift, and go to state 414
    "type"                            shift, and go to state 415
    "array"                           shift, and go to state 416
    "null"                            shift, and go to state 417
    "table"                           shift, and go to state 418
    "deref"                           shift, and go to state 419
    "cast"                            shift, and go to state 420
    "upcast"                          shift, and go to state 421
    "addr"                            shift, and go to state 422
    "reinterpret"                     shift, and go to state 423
    "unsafe"                          shift, and go to state 424
    "fixed_array"                     shift, and go to state 425
    "default"                         shift, and go to state 426
    "bool"                            shift, and go to state 225
    "void"                            shift, and go to state 226
    "string"                          shift, and go to state 227
    "int"                             shift, and go to state 229
    "int2"                            shift, and go to state 230
    "int3"                            shift, and go to state 231
    "int4"                            shift, and go to state 232
    "uint"                            shift, and go to state 233
    "bitfield"                        shift, and go to state 427
    "uint2"                           shift, and go to state 235
    "uint3"                           shift, and go to state 236
    "uint4"                           shift, and go to state 237
    "float"                           shift, and go to state 238
    "float2"                          shift, and go to state 239
    "float3"                          shift, and go to state 240
    "float4"                          shift, and go to state 241
    "range"                           shift, and go to state 242
    "urange"                          shift, and go to state 243
    "range64"                         shift, and go to state 244
    "urange64"                        shift, and go to state 245
    "int64"                           shift, and go to state 247
    "uint64"                          shift, and go to state 248
    "double"                          shift, and go to state 249
    "int8"                            shift, and go to state 252
    "uint8"                           shift, and go to state 253
    "int16"                           shift, and go to state 254
    "uint16"                          shift, and go to state 255
    "tuple"                           shift, and go to state 428
    "variant"                         shift, and go to state 429
    "generator"                       shift, and go to state 430
    "++"                              shift, and go to state 431
    "--"                              shift, and go to state 432
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 433
    "$i"                              shift, and go to state 434
    "$v"                              shift, and go to state 435
    "$b"                              shift, and go to state 436
    "$a"                              shift, and go to state 437
    "$c"                              shift, and go to state 438
    "..."                             shift, and go to state 439
    "integer constant"                shift, and go to state 440
    "long integer constant"           shift, and go to state 441
    "unsigned integer constant"       shift, and go to state 442
    "unsigned long integer constant"  shift, and go to state 443
    "unsigned int8 constant"          shift, and go to state 444
    "floating point constant"         shift, and go to state 445
    "double constant"                 shift, and go to state 446
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 447
    "begin of code block"             shift, and go to state 448
    '-'                               shift, and go to state 449
    '+'                               shift, and go to state 450
    '*'                               shift, and go to state 451
    '%'                               shift, and go to state 14
    '~'                               shift, and go to state 452
    '!'                               shift, and go to state 453
    '['                               shift, and go to state 454
    '('                               shift, and go to state 455
    '$'                               shift, and go to state 456
    '@'                               shift, and go to state 457

    string_builder          go to state 458
    expr_reader             go to state 459
    expr_call_pipe          go to state 460
    name_in_namespace       go to state 461
    expr_new                go to state 462
    expr_cast               go to state 463
    expr_type_decl          go to state 464
    expr_type_info          go to state 465
    block_or_lambda         go to state 466
    expr_full_block         go to state 467
    expr_numeric_const      go to state 468
    expr_named_call         go to state 469
    expr_method_call        go to state 470
    func_addr_expr          go to state 471
    expr_field              go to state 472
    expr_call               go to state 473
    expr                    go to state 1474
    expr_generator          go to state 475
    expr_mtag               go to state 476
    basic_type_declaration  go to state 477
    make_decl               go to state 478
    make_struct_decl        go to state 479
    make_tuple_call         go to state 480
    make_dim_decl           go to state 481
    make_table_decl         go to state 482
    array_comprehension     go to state 483


State 1467

  807 array_comprehension: "begin of code block" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 807 (array_comprehension)


State 1468

  805 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 805 (array_comprehension)


State 1469

  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1475


State 1470

   58 expression_else: "else" optional_semis expression_block .

    $default  reduce using rule 58 (expression_else)


State 1471

   59 expression_else: elif_or_static_elif '(' expr . ')' optional_semis expression_block expression_else
  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644
    ')'    shift, and go to state 1476


State 1472

  288 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr "end of expression" .

    $default  reduce using rule 288 (tuple_expansion_variable_declaration)


State 1473

  743 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  744                   | make_struct_fields . ',' "name" ":=" expr
  747                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  748                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  752 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1015
    ')'  shift, and go to state 1477


State 1474

  356 expr_method_call: expr . "->" "name" '(' ')'
  357                 | expr . "->" "name" '(' expr_list ')'
  367 expr_field: expr . '.' "name"
  368           | expr . '.' '.' "name"
  369           | expr . '.' "name" '(' ')'
  370           | expr . '.' "name" '(' expr_list ')'
  371           | expr . '.' basic_type_declaration '(' ')'
  372           | expr . '.' basic_type_declaration '(' expr_list ')'
  375           | expr . '.' $@25 error $@26
  397 expr: expr . "<<" expr
  398     | expr . ">>" expr
  399     | expr . "<<<" expr
  400     | expr . ">>>" expr
  401     | expr . '+' expr
  402     | expr . '-' expr
  403     | expr . '*' expr
  404     | expr . '/' expr
  405     | expr . '%' expr
  406     | expr . '<' expr
  407     | expr . '>' expr
  408     | expr . "==" expr
  409     | expr . "!=" expr
  410     | expr . "<=" expr
  411     | expr . ">=" expr
  412     | expr . '&' expr
  413     | expr . '|' expr
  414     | expr . '^' expr
  415     | expr . "&&" expr
  416     | expr . "||" expr
  417     | expr . "^^" expr
  418     | expr . ".." expr
  421     | expr . "++"
  422     | expr . "--"
  424     | expr . '[' expr ']'
  425     | expr . '.' '[' expr ']'
  426     | expr . "?[" expr ']'
  427     | expr . '.' "?[" expr ']'
  428     | expr . "?." "name"
  429     | expr . '.' "?." "name"
  436     | expr . "??" expr
  437     | expr . '?' expr ':' expr
  440     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  441     | expr . "is" basic_type_declaration
  442     | expr . "is" "name"
  443     | expr . "as" "name"
  446     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  447     | expr . "as" basic_type_declaration
  448     | expr . '?' "as" "name"
  451     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  452     | expr . '?' "as" basic_type_declaration
  460     | expr . "<|" expr
  461     | expr . "|>" expr
  462     | expr . "|>" basic_type_declaration
  476 expr_mtag: expr . '.' "$f" '(' expr ')'
  477          | expr . "?." "$f" '(' expr ')'
  478          | expr . '.' '.' "$f" '(' expr ')'
  479          | expr . '.' "?." "$f" '(' expr ')'
  480          | expr . "as" "$f" '(' expr ')'
  481          | expr . '?' "as" "$f" '(' expr ')'
  482          | expr . "is" "$f" '(' expr ')'
  802 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 610
    "as"   shift, and go to state 611
    "<<"   shift, and go to state 612
    ">>"   shift, and go to state 613
    "++"   shift, and go to state 614
    "--"   shift, and go to state 615
    "<="   shift, and go to state 616
    ">="   shift, and go to state 617
    "=="   shift, and go to state 618
    "!="   shift, and go to state 619
    "->"   shift, and go to state 620
    "??"   shift, and go to state 621
    "?."   shift, and go to state 622
    "?["   shift, and go to state 623
    "<|"   shift, and go to state 624
    "|>"   shift, and go to state 625
    "<<<"  shift, and go to state 626
    ">>>"  shift, and go to state 627
    "&&"   shift, and go to state 628
    "||"   shift, and go to state 629
    "^^"   shift, and go to state 630
    ".."   shift, and go to state 631
    '?'    shift, and go to state 632
    '|'    shift, and go to state 633
    '^'    shift, and go to state 634
    '&'    shift, and go to state 635
    '<'    shift, and go to state 636
    '>'    shift, and go to state 637
    '-'    shift, and go to state 638
    '+'    shift, and go to state 639
    '*'    shift, and go to state 640
    '/'    shift, and go to state 641
    '%'    shift, and go to state 642
    '.'    shift, and go to state 643
    '['    shift, and go to state 644

    $default  reduce using rule 802 (array_comprehension_where)


State 1475

  806 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 806 (array_comprehension)


State 1476

   59 expression_else: elif_or_static_elif '(' expr ')' . optional_semis expression_block expression_else

    "end of expression"  shift, and go to state 896

    $default  reduce using rule 71 (optional_semis)

    optional_semi_list  go to state 897
    optional_semis      go to state 1478


State 1477

  752 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 752 (make_struct_dim_list)


State 1478

   59 expression_else: elif_or_static_elif '(' expr ')' optional_semis . expression_block expression_else

    $default  reduce using rule 224 ($@9)

    expression_block  go to state 1479
    $@9               go to state 327


State 1479

   59 expression_else: elif_or_static_elif '(' expr ')' optional_semis expression_block . expression_else

    "else"         shift, and go to state 1428
    "elif"         shift, and go to state 1429
    "static_elif"  shift, and go to state 1430

    $default  reduce using rule 57 (expression_else)

    elif_or_static_elif  go to state 1431
    expression_else      go to state 1480


State 1480

   59 expression_else: elif_or_static_elif '(' expr ')' optional_semis expression_block expression_else .

    $default  reduce using rule 59 (expression_else)
