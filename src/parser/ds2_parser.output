Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"
    LLPIPE


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration ';'
    9        | program options_declaration ';'
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program ';'

   16 COMMA: ','
   17      | "emitted ,"

   18 SEMICOLON: ';'
   19          | "emitted ;"

   20 top_level_reader_macro: expr_reader ';'

   21 optional_public_or_private_module: %empty
   22                                  | "public"
   23                                  | "private"

   24 module_name: '$'
   25            | "name"

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   27 character_sequence: STRING_CHARACTER
   28                   | STRING_CHARACTER_ESC
   29                   | character_sequence STRING_CHARACTER
   30                   | character_sequence STRING_CHARACTER_ESC

   31 string_constant: "start of the string" character_sequence "end of the string"
   32                | "start of the string" "end of the string"

   33 string_builder_body: %empty
   34                    | string_builder_body character_sequence
   35                    | string_builder_body "{" expr "}"

   36 string_builder: "start of the string" string_builder_body "end of the string"

   37 reader_character_sequence: STRING_CHARACTER
   38                          | reader_character_sequence STRING_CHARACTER

   39 $@1: %empty

   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence

   41 options_declaration: "options" annotation_argument_list

   42 require_declaration: "require" require_module

   43 require_module_name: "name"
   44                    | '%' require_module_name
   45                    | require_module_name '.' "name"
   46                    | require_module_name '/' "name"

   47 require_module: require_module_name is_public_module
   48               | require_module_name "as" "name" is_public_module

   49 is_public_module: %empty
   50                 | "public"

   51 expect_declaration: "expect" expect_list

   52 expect_list: expect_error
   53            | expect_list ',' expect_error

   54 expect_error: "integer constant"
   55             | "integer constant" ':' "integer constant"

   56 expression_label: "label" "integer constant" ':'

   57 expression_goto: "goto" "label" "integer constant"
   58                | "goto" expr

   59 elif_or_static_elif: "elif"
   60                    | "static_elif"

   61 emit_semis: "emitted ;"
   62           | emit_semis "emitted ;"

   63 optional_emit_semis: %empty
   64                    | emit_semis

   65 expression_else: %empty
   66                | "else" optional_emit_semis expression_block
   67                | elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else

   68 if_or_static_if: "if"
   69                | "static_if"

   70 expression_else_one_liner: %empty
   71                          | "else" expression_if_one_liner

   72 expression_if_one_liner: expr
   73                        | expression_return
   74                        | expression_yield
   75                        | expression_break
   76                        | expression_continue

   77 semis: SEMICOLON
   78      | semis SEMICOLON

   79 optional_semis: %empty
   80               | semis

   81 $@2: %empty

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis expression_block expression_else

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON

   84 $@3: %empty

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

   86 expression_unsafe: "unsafe" optional_emit_semis expression_block

   87 $@4: %empty

   88 expression_while_loop: $@4 "while" '(' expr ')' optional_emit_semis expression_block

   89 $@5: %empty

   90 expression_with: $@5 "with" '(' expr ')' optional_emit_semis expression_block

   91 expression_with_alias: "assume" "name" '=' expr

   92 annotation_argument_value: string_constant
   93                          | "name"
   94                          | "integer constant"
   95                          | "floating point constant"
   96                          | "true"
   97                          | "false"

   98 annotation_argument_value_list: annotation_argument_value
   99                               | annotation_argument_value_list ',' annotation_argument_value

  100 annotation_argument_name: "name"
  101                         | "type"
  102                         | "in"

  103 annotation_argument: annotation_argument_name '=' string_constant
  104                    | annotation_argument_name '=' "name"
  105                    | annotation_argument_name '=' "integer constant"
  106                    | annotation_argument_name '=' "floating point constant"
  107                    | annotation_argument_name '=' "true"
  108                    | annotation_argument_name '=' "false"
  109                    | annotation_argument_name
  110                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  111 annotation_argument_list: annotation_argument
  112                         | annotation_argument_list ',' annotation_argument

  113 metadata_argument_list: '@' annotation_argument optional_emit_semis
  114                       | metadata_argument_list '@' annotation_argument optional_emit_semis

  115 annotation_declaration_name: name_in_namespace
  116                            | "require"
  117                            | "private"

  118 annotation_declaration_basic: annotation_declaration_name
  119                             | annotation_declaration_name '(' annotation_argument_list ')'

  120 annotation_declaration: annotation_declaration_basic
  121                       | '!' annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration
  125                       | '(' annotation_declaration ')'
  126                       | "|>" annotation_declaration

  127 annotation_list: annotation_declaration
  128                | annotation_list ',' annotation_declaration

  129 optional_annotation_list: %empty
  130                         | '[' annotation_list ']'

  131 optional_annotation_list_with_emit_semis: %empty
  132                                         | '[' annotation_list ']' optional_emit_semis

  133 optional_function_argument_list: %empty
  134                                | '(' ')'
  135                                | '(' function_argument_list ')'

  136 optional_function_type: %empty
  137                       | ':' type_declaration

  138 function_name: "name"
  139              | "operator" '!'
  140              | "operator" '~'
  141              | "operator" "+="
  142              | "operator" "-="
  143              | "operator" "*="
  144              | "operator" "/="
  145              | "operator" "%="
  146              | "operator" "&="
  147              | "operator" "|="
  148              | "operator" "^="
  149              | "operator" "&&="
  150              | "operator" "||="
  151              | "operator" "^^="
  152              | "operator" "&&"
  153              | "operator" "||"
  154              | "operator" "^^"
  155              | "operator" '+'
  156              | "operator" '-'
  157              | "operator" '*'
  158              | "operator" '/'
  159              | "operator" '%'
  160              | "operator" '<'
  161              | "operator" '>'
  162              | "operator" ".."
  163              | "operator" "=="
  164              | "operator" "!="
  165              | "operator" "<="
  166              | "operator" ">="
  167              | "operator" '&'
  168              | "operator" '|'
  169              | "operator" '^'
  170              | "++" "operator"
  171              | "--" "operator"
  172              | "operator" "++"
  173              | "operator" "--"
  174              | "operator" "<<"
  175              | "operator" ">>"
  176              | "operator" "<<="
  177              | "operator" ">>="
  178              | "operator" "<<<"
  179              | "operator" ">>>"
  180              | "operator" "<<<="
  181              | "operator" ">>>="
  182              | "operator" '[' ']'
  183              | "operator" "?[" ']'
  184              | "operator" '.'
  185              | "operator" "?."
  186              | "operator" '.' "name"
  187              | "operator" '.' "name" ":="
  188              | "operator" "?." "name"
  189              | "operator" ":="
  190              | "operator" "delete"
  191              | "operator" "??"
  192              | "operator" "is"
  193              | "operator" "as"
  194              | "operator" "is" "name"
  195              | "operator" "as" "name"
  196              | "operator" '?' "as"
  197              | "operator" '?' "as" "name"
  198              | "bool"
  199              | "string"
  200              | "int"
  201              | "int2"
  202              | "int3"
  203              | "int4"
  204              | "uint"
  205              | "uint2"
  206              | "uint3"
  207              | "uint4"
  208              | "float"
  209              | "float2"
  210              | "float3"
  211              | "float4"
  212              | "range"
  213              | "urange"
  214              | "range64"
  215              | "urange64"
  216              | "int64"
  217              | "uint64"
  218              | "double"
  219              | "int8"
  220              | "uint8"
  221              | "int16"
  222              | "uint16"

  223 global_function_declaration: optional_annotation_list "def" function_declaration

  224 optional_public_or_private_function: %empty
  225                                    | "private"
  226                                    | "public"

  227 function_declaration_header: function_name optional_function_argument_list optional_function_type

  228 $@6: %empty

  229 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block

  230 expression_block_finally: %empty

  231 $@7: %empty

  232 $@8: %empty

  233 expression_block_finally: "finally" $@7 '{' expressions $@8 '}'

  234 $@9: %empty

  235 $@10: %empty

  236 expression_block: $@9 '{' expressions $@10 '}' expression_block_finally

  237 expr_call_pipe: expr_call expr_full_block_assumed_piped

  238 expression_any: SEMICOLON
  239               | expr_assign SEMICOLON
  240               | expression_delete SEMICOLON
  241               | expression_let
  242               | expression_while_loop
  243               | expression_unsafe
  244               | expression_with
  245               | expression_with_alias SEMICOLON
  246               | expression_for_loop
  247               | expression_break SEMICOLON
  248               | expression_continue SEMICOLON
  249               | expression_return SEMICOLON
  250               | expression_yield SEMICOLON
  251               | expression_if_then_else
  252               | expression_if_then_else_oneliner
  253               | expression_try_catch
  254               | expression_label SEMICOLON
  255               | expression_goto SEMICOLON
  256               | "pass" SEMICOLON

  257 expressions: %empty
  258            | expressions expression_any
  259            | expressions error

  260 optional_expr_list: %empty
  261                   | expr_list optional_comma

  262 optional_expr_map_tuple_list: %empty
  263                             | expr_map_tuple_list optional_comma

  264 type_declaration_no_options_list: type_declaration
  265                                 | type_declaration_no_options_list c_or_s type_declaration

  266 name_in_namespace: "name"
  267                  | "name" "::" "name"
  268                  | "::" "name"

  269 expression_delete: "delete" expr
  270                  | "delete" "explicit" expr

  271 $@11: %empty

  272 $@12: %empty

  273 new_type_declaration: '<' $@11 type_declaration '>' $@12
  274                     | structure_type_declaration

  275 expr_new: "new" new_type_declaration
  276         | "new" new_type_declaration '(' use_initializer ')'
  277         | "new" new_type_declaration '(' expr_list ')'
  278         | "new" new_type_declaration '(' make_struct_single ')'
  279         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  280         | "new" make_decl

  281 expression_break: "break"

  282 expression_continue: "continue"

  283 expression_return: "return"
  284                  | "return" expr
  285                  | "return" "<-" expr

  286 expression_yield: "yield" expr
  287                 | "yield" "<-" expr

  288 expression_try_catch: "try" expression_block "recover" expression_block

  289 kwd_let_var_or_nothing: "let"
  290                       | "var"
  291                       | %empty

  292 kwd_let: "let"
  293        | "var"

  294 optional_in_scope: "inscope"
  295                  | %empty

  296 tuple_expansion: "name"
  297                | tuple_expansion ',' "name"

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  299                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

  300 expression_let: kwd_let optional_in_scope let_variable_declaration
  301               | kwd_let optional_in_scope tuple_expansion_variable_declaration
  302               | kwd_let optional_in_scope '{' variable_declaration_list '}'

  303 $@13: %empty

  304 $@14: %empty

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr

  306 $@15: %empty

  307 $@16: %empty

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr

  309 $@17: %empty

  310 $@18: %empty

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr

  312 $@19: %empty

  313 $@20: %empty

  314 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20

  315 expr_type_info: "typeinfo" name_in_namespace '(' expr ')'
  316               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  317               | "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

  318 expr_list: expr
  319          | expr_list ',' expr

  320 block_or_simple_block: expression_block
  321                      | "=>" expr
  322                      | "=>" "<-" expr

  323 block_or_lambda: '$'
  324                | '@'
  325                | '@' '@'

  326 capture_entry: '&' "name"
  327              | '=' "name"
  328              | "<-" "name"
  329              | ":=" "name"
  330              | "name" '(' "name" ')'

  331 capture_list: capture_entry
  332             | capture_list ',' capture_entry

  333 optional_capture_list: %empty
  334                      | "capture" '(' capture_list ')'

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

  336 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block
  337                              | '{' expressions '}'

  338 expr_numeric_const: "integer constant"
  339                   | "unsigned integer constant"
  340                   | "long integer constant"
  341                   | "unsigned long integer constant"
  342                   | "unsigned int8 constant"
  343                   | "floating point constant"
  344                   | "double constant"

  345 expr_assign: expr
  346            | expr '=' expr
  347            | expr "<-" expr
  348            | expr ":=" expr
  349            | expr "&=" expr
  350            | expr "|=" expr
  351            | expr "^=" expr
  352            | expr "&&=" expr
  353            | expr "||=" expr
  354            | expr "^^=" expr
  355            | expr "+=" expr
  356            | expr "-=" expr
  357            | expr "*=" expr
  358            | expr "/=" expr
  359            | expr "%=" expr
  360            | expr "<<=" expr
  361            | expr ">>=" expr
  362            | expr "<<<=" expr
  363            | expr ">>>=" expr

  364 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  365                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  366 expr_method_call: expr "->" "name" '(' ')'
  367                 | expr "->" "name" '(' expr_list ')'

  368 func_addr_name: name_in_namespace
  369               | "$i" '(' expr ')'

  370 func_addr_expr: '@' '@' func_addr_name

  371 $@21: %empty

  372 $@22: %empty

  373 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name

  374 $@23: %empty

  375 $@24: %empty

  376 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

  377 expr_field: expr '.' "name"
  378           | expr '.' '.' "name"
  379           | expr '.' "name" '(' ')'
  380           | expr '.' "name" '(' expr_list ')'
  381           | expr '.' basic_type_declaration '(' ')'
  382           | expr '.' basic_type_declaration '(' expr_list ')'

  383 $@25: %empty

  384 $@26: %empty

  385 expr_field: expr '.' $@25 error $@26

  386 expr_call: name_in_namespace '(' ')'
  387          | name_in_namespace '(' "uninitialized" ')'
  388          | name_in_namespace '(' make_struct_single ')'
  389          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  390          | name_in_namespace '(' expr_list ')'
  391          | basic_type_declaration '(' ')'
  392          | basic_type_declaration '(' expr_list ')'

  393 expr: "null"
  394     | name_in_namespace
  395     | expr_numeric_const
  396     | expr_reader
  397     | string_builder
  398     | make_decl
  399     | "true"
  400     | "false"
  401     | expr_field
  402     | expr_mtag
  403     | '!' expr
  404     | '~' expr
  405     | '+' expr
  406     | '-' expr
  407     | expr "<<" expr
  408     | expr ">>" expr
  409     | expr "<<<" expr
  410     | expr ">>>" expr
  411     | expr '+' expr
  412     | expr '-' expr
  413     | expr '*' expr
  414     | expr '/' expr
  415     | expr '%' expr
  416     | expr '<' expr
  417     | expr '>' expr
  418     | expr "==" expr
  419     | expr "!=" expr
  420     | expr "<=" expr
  421     | expr ">=" expr
  422     | expr '&' expr
  423     | expr '|' expr
  424     | expr '^' expr
  425     | expr "&&" expr
  426     | expr "||" expr
  427     | expr "^^" expr
  428     | expr ".." expr
  429     | "++" expr
  430     | "--" expr
  431     | expr "++"
  432     | expr "--"
  433     | '(' expr_list optional_comma ')'
  434     | expr '[' expr ']'
  435     | expr '.' '[' expr ']'
  436     | expr "?[" expr ']'
  437     | expr '.' "?[" expr ']'
  438     | expr "?." "name"
  439     | expr '.' "?." "name"
  440     | func_addr_expr
  441     | expr_call
  442     | '*' expr
  443     | "deref" '(' expr ')'
  444     | "addr" '(' expr ')'
  445     | expr_generator
  446     | expr "??" expr
  447     | expr '?' expr ':' expr

  448 $@27: %empty

  449 $@28: %empty

  450 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr "is" basic_type_declaration
  452     | expr "is" "name"
  453     | expr "as" "name"

  454 $@29: %empty

  455 $@30: %empty

  456 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr "as" basic_type_declaration
  458     | expr '?' "as" "name"

  459 $@31: %empty

  460 $@32: %empty

  461 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr '?' "as" basic_type_declaration
  463     | expr_type_info
  464     | expr_type_decl
  465     | expr_cast
  466     | expr_new
  467     | expr_method_call
  468     | expr_named_call
  469     | expr_full_block
  470     | expr "<|" expr
  471     | expr "|>" expr
  472     | expr "|>" basic_type_declaration
  473     | expr_call_pipe
  474     | "unsafe" '(' expr ')'

  475 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  476               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  477               | "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

  478 expr_mtag: "$$" '(' expr ')'
  479          | "$i" '(' expr ')'
  480          | "$v" '(' expr ')'
  481          | "$b" '(' expr ')'
  482          | "$a" '(' expr ')'
  483          | "..."
  484          | "$c" '(' expr ')' '(' ')'
  485          | "$c" '(' expr ')' '(' expr_list ')'
  486          | expr '.' "$f" '(' expr ')'
  487          | expr "?." "$f" '(' expr ')'
  488          | expr '.' '.' "$f" '(' expr ')'
  489          | expr '.' "?." "$f" '(' expr ')'
  490          | expr "as" "$f" '(' expr ')'
  491          | expr '?' "as" "$f" '(' expr ')'
  492          | expr "is" "$f" '(' expr ')'
  493          | '@' '@' "$c" '(' expr ')'

  494 optional_field_annotation: %empty
  495                          | metadata_argument_list

  496 optional_override: %empty
  497                  | "override"
  498                  | "sealed"

  499 optional_constant: %empty
  500                  | "const"

  501 optional_public_or_private_member_variable: %empty
  502                                           | "public"
  503                                           | "private"

  504 optional_static_member_variable: %empty
  505                                | "static"

  506 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  507 struct_variable_declaration_list: %empty
  508                                 | struct_variable_declaration_list "emitted ;"

  509 $@33: %empty

  510 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration SEMICOLON

  511 $@34: %empty

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header SEMICOLON

  513 $@35: %empty

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header optional_emit_semis expression_block

  515 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration
  516                              | "$a" '(' expr ')'

  517 function_argument_list: function_argument_declaration
  518                       | function_argument_list ';' function_argument_declaration

  519 tuple_type: type_declaration
  520           | "name" ':' type_declaration

  521 tuple_type_list: tuple_type
  522                | tuple_type_list c_or_s tuple_type

  523 tuple_alias_type_list: %empty
  524                      | tuple_type
  525                      | tuple_alias_type_list semis tuple_type

  526 variant_type: "name" ':' type_declaration

  527 variant_type_list: variant_type
  528                  | variant_type_list c_or_s variant_type

  529 variant_alias_type_list: %empty
  530                        | variant_type
  531                        | variant_alias_type_list semis variant_type

  532 copy_or_move: '='
  533             | "<-"

  534 variable_declaration: variable_name_with_pos_list
  535                     | variable_name_with_pos_list '&'
  536                     | variable_name_with_pos_list ':' type_declaration
  537                     | variable_name_with_pos_list ':' type_declaration copy_or_move expr
  538                     | variable_name_with_pos_list copy_or_move expr

  539 copy_or_move_or_clone: '='
  540                      | "<-"
  541                      | ":="

  542 optional_ref: %empty
  543             | '&'

  544 let_variable_name_with_pos_list: "name"
  545                                | "$i" '(' expr ')'
  546                                | "name" "aka" "name"
  547                                | let_variable_name_with_pos_list ',' "name"
  548                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  549 global_let_variable_name_with_pos_list: "name"
  550                                       | global_let_variable_name_with_pos_list ',' "name"

  551 variable_declaration_list: %empty
  552                          | variable_declaration_list ';'
  553                          | variable_declaration_list let_variable_declaration

  554 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON
  555                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  556                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON

  557 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options ';'
  558                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  559                                | global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';'

  560 optional_shared: %empty
  561                | "shared"

  562 optional_public_or_private_variable: %empty
  563                                    | "private"
  564                                    | "public"

  565 global_variable_declaration_list: %empty
  566                                 | global_variable_declaration_list ';'

  567 $@36: %empty

  568 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration

  569 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'

  570 $@37: %empty

  571 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

  572 enum_expression: "name"
  573                | "name" '=' expr

  574 commas: COMMA
  575       | commas COMMA

  576 enum_list: %empty
  577          | enum_expression
  578          | enum_list commas enum_expression

  579 optional_public_or_private_alias: %empty
  580                                 | "private"
  581                                 | "public"

  582 $@38: %empty

  583 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration

  584 alias_declaration: "typedef" single_alias ';'

  585 optional_public_or_private_enum: %empty
  586                                | "private"
  587                                | "public"

  588 enum_name: "name"

  589 optional_enum_basic_type_declaration: %empty
  590                                     | ':' enum_basic_type_declaration

  591 optional_commas: %empty
  592                | commas

  593 emit_commas: "emitted ,"
  594            | emit_commas "emitted ,"

  595 optional_emit_commas: %empty
  596                     | emit_commas

  597 $@39: %empty

  598 $@40: %empty

  599 $@41: %empty

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

  601 optional_structure_parent: %empty
  602                          | ':' name_in_namespace

  603 optional_sealed: %empty
  604                | "sealed"

  605 structure_name: optional_sealed "name" optional_structure_parent

  606 class_or_struct: "class"
  607                | "struct"

  608 optional_public_or_private_structure: %empty
  609                                     | "private"
  610                                     | "public"

  611 optional_struct_variable_declaration_list: %empty
  612                                          | '{' struct_variable_declaration_list '}'

  613 $@42: %empty

  614 $@43: %empty

  615 $@44: %empty

  616 structure_declaration: optional_annotation_list $@42 class_or_struct optional_public_or_private_structure $@43 structure_name optional_emit_semis $@44 optional_struct_variable_declaration_list

  617 variable_name_with_pos_list: "name"
  618                            | "$i" '(' expr ')'
  619                            | "name" "aka" "name"
  620                            | variable_name_with_pos_list ',' "name"
  621                            | variable_name_with_pos_list ',' "name" "aka" "name"

  622 basic_type_declaration: "bool"
  623                       | "string"
  624                       | "int"
  625                       | "int8"
  626                       | "int16"
  627                       | "int64"
  628                       | "int2"
  629                       | "int3"
  630                       | "int4"
  631                       | "uint"
  632                       | "uint8"
  633                       | "uint16"
  634                       | "uint64"
  635                       | "uint2"
  636                       | "uint3"
  637                       | "uint4"
  638                       | "float"
  639                       | "float2"
  640                       | "float3"
  641                       | "float4"
  642                       | "void"
  643                       | "range"
  644                       | "urange"
  645                       | "range64"
  646                       | "urange64"
  647                       | "double"
  648                       | "bitfield"

  649 enum_basic_type_declaration: "int"
  650                            | "int8"
  651                            | "int16"
  652                            | "uint"
  653                            | "uint8"
  654                            | "uint16"
  655                            | "int64"
  656                            | "uint64"

  657 structure_type_declaration: name_in_namespace

  658 auto_type_declaration: "auto"
  659                      | "auto" '(' "name" ')'
  660                      | "$t" '(' expr ')'

  661 bitfield_bits: "name"
  662              | bitfield_bits ';' "name"

  663 bitfield_alias_bits: %empty
  664                    | "name"
  665                    | bitfield_alias_bits commas "name"

  666 $@45: %empty

  667 $@46: %empty

  668 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits '>' $@46

  669 c_or_s: COMMA
  670       | SEMICOLON

  671 table_type_pair: type_declaration
  672                | type_declaration c_or_s type_declaration

  673 dim_list: '[' expr ']'
  674         | '[' ']'
  675         | dim_list '[' expr ']'
  676         | dim_list '[' ']'

  677 type_declaration_no_options: type_declaration_no_options_no_dim
  678                            | type_declaration_no_options_no_dim dim_list

  679 type_declaration_no_options_no_dim: basic_type_declaration
  680                                   | auto_type_declaration
  681                                   | bitfield_type_declaration
  682                                   | structure_type_declaration

  683 $@47: %empty

  684 $@48: %empty

  685 type_declaration_no_options_no_dim: "type" '<' $@47 type_declaration '>' $@48
  686                                   | "typedecl" '(' expr ')'
  687                                   | '$' name_in_namespace '(' optional_expr_list ')'

  688 $@49: %empty

  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@49 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  690                                   | type_declaration_no_options_no_dim '-' '[' ']'
  691                                   | type_declaration_no_options_no_dim "explicit"
  692                                   | type_declaration_no_options_no_dim "const"
  693                                   | type_declaration_no_options_no_dim '-' "const"
  694                                   | type_declaration_no_options_no_dim '&'
  695                                   | type_declaration_no_options_no_dim '-' '&'
  696                                   | type_declaration_no_options_no_dim '#'
  697                                   | type_declaration_no_options_no_dim "implicit"
  698                                   | type_declaration_no_options_no_dim '-' '#'
  699                                   | type_declaration_no_options_no_dim "==" "const"
  700                                   | type_declaration_no_options_no_dim "==" '&'
  701                                   | type_declaration_no_options_no_dim '?'

  702 $@50: %empty

  703 $@51: %empty

  704 type_declaration_no_options_no_dim: "smart_ptr" '<' $@50 type_declaration '>' $@51
  705                                   | type_declaration_no_options_no_dim "??"

  706 $@52: %empty

  707 $@53: %empty

  708 type_declaration_no_options_no_dim: "array" '<' $@52 type_declaration '>' $@53

  709 $@54: %empty

  710 $@55: %empty

  711 type_declaration_no_options_no_dim: "table" '<' $@54 table_type_pair '>' $@55

  712 $@56: %empty

  713 $@57: %empty

  714 type_declaration_no_options_no_dim: "iterator" '<' $@56 type_declaration '>' $@57
  715                                   | "block"

  716 $@58: %empty

  717 $@59: %empty

  718 type_declaration_no_options_no_dim: "block" '<' $@58 type_declaration '>' $@59

  719 $@60: %empty

  720 $@61: %empty

  721 type_declaration_no_options_no_dim: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61
  722                                   | "function"

  723 $@62: %empty

  724 $@63: %empty

  725 type_declaration_no_options_no_dim: "function" '<' $@62 type_declaration '>' $@63

  726 $@64: %empty

  727 $@65: %empty

  728 type_declaration_no_options_no_dim: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65
  729                                   | "lambda"

  730 $@66: %empty

  731 $@67: %empty

  732 type_declaration_no_options_no_dim: "lambda" '<' $@66 type_declaration '>' $@67

  733 $@68: %empty

  734 $@69: %empty

  735 type_declaration_no_options_no_dim: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69

  736 $@70: %empty

  737 $@71: %empty

  738 type_declaration_no_options_no_dim: "tuple" '<' $@70 tuple_type_list '>' $@71

  739 $@72: %empty

  740 $@73: %empty

  741 type_declaration_no_options_no_dim: "variant" '<' $@72 variant_type_list '>' $@73

  742 type_declaration: type_declaration_no_options
  743                 | type_declaration '|' type_declaration_no_options
  744                 | type_declaration '|' '#'

  745 $@74: %empty

  746 $@75: %empty

  747 $@76: %empty

  748 $@77: %empty

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 '}'

  750 $@78: %empty

  751 $@79: %empty

  752 $@80: %empty

  753 $@81: %empty

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis $@81 '}'

  755 $@82: %empty

  756 $@83: %empty

  757 $@84: %empty

  758 $@85: %empty

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 '}'

  760 make_decl: make_struct_decl
  761          | make_dim_decl
  762          | make_table_decl
  763          | array_comprehension
  764          | make_tuple_call

  765 make_struct_fields: "name" copy_or_move expr
  766                   | "name" ":=" expr
  767                   | make_struct_fields ',' "name" copy_or_move expr
  768                   | make_struct_fields ',' "name" ":=" expr
  769                   | "$f" '(' expr ')' copy_or_move expr
  770                   | "$f" '(' expr ')' ":=" expr
  771                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  773 make_variant_dim: make_struct_fields

  774 make_struct_single: make_struct_fields

  775 make_struct_dim_list: '(' make_struct_fields ')'
  776                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  777 make_struct_dim_decl: make_struct_fields
  778                     | make_struct_dim_list optional_comma

  779 optional_make_struct_dim_decl: make_struct_dim_decl
  780                              | %empty

  781 use_initializer: %empty
  782                | "uninitialized"

  783 $@86: %empty

  784 $@87: %empty

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' use_initializer optional_make_struct_dim_decl ')'

  786 $@88: %empty

  787 $@89: %empty

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

  789 $@90: %empty

  790 $@91: %empty

  791 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_variant_dim ')'

  792 $@92: %empty

  793 $@93: %empty

  794 make_struct_decl: "default" '<' $@92 type_declaration_no_options '>' $@93 use_initializer

  795 make_map_tuple: expr "=>" expr
  796               | expr

  797 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  798 $@94: %empty

  799 $@95: %empty

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' use_initializer optional_make_struct_dim_decl ')'

  801 make_dim_decl: '[' expr_list optional_comma ']'

  802 $@96: %empty

  803 $@97: %empty

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

  805 $@98: %empty

  806 $@99: %empty

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

  808 $@100: %empty

  809 $@101: %empty

  810 make_dim_decl: "array" "variant" '<' $@100 type_declaration_no_options '>' $@101 '(' make_variant_dim ')'
  811              | "array" '(' expr_list optional_comma ')'

  812 $@102: %empty

  813 $@103: %empty

  814 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' optional_expr_list ')'
  815              | "fixed_array" '(' expr_list optional_comma ')'

  816 $@104: %empty

  817 $@105: %empty

  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

  819 expr_map_tuple_list: make_map_tuple
  820                    | expr_map_tuple_list ',' make_map_tuple

  821 make_table_decl: '{' expr_map_tuple_list optional_comma '}'
  822                | "table" '(' expr_map_tuple_list optional_comma ')'
  823                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  824                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  825 array_comprehension_where: %empty
  826                          | ';' "where" expr

  827 optional_comma: %empty
  828               | ','

  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  830                    | '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  831                    | '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 121 139 403
    '#' (35) 696 698 744
    '$' (36) 24 323 687 689
    '%' (37) 40 44 159 415
    '&' (38) 167 326 422 535 543 694 695 700
    '(' (40) 67 82 83 85 88 90 110 119 125 134 135 276 277 278 279 298 299 315 316 317 330 334 364 365 366 367 369 379 380 381 382 386 387 388 389 390 391 392 433 443 444 474 475 476 478 479 480 481 482 484 485 486 487 488 489 490 491 492 493 516 545 618 659 660 686 687 689 769 770 771 772 775 776 785 788 791 797 800 804 807 810 811 814 815 818 822 823 824 829 830 831
    ')' (41) 67 82 83 85 88 90 110 119 125 134 135 276 277 278 279 298 299 315 316 317 330 334 364 365 366 367 369 379 380 381 382 386 387 388 389 390 391 392 433 443 444 474 475 476 478 479 480 481 482 484 485 486 487 488 489 490 491 492 493 516 545 618 659 660 686 687 689 769 770 771 772 775 776 785 788 791 797 800 804 807 810 811 814 815 818 822 823 824 829 830 831
    '*' (42) 157 413 442
    '+' (43) 155 405 411
    ',' (44) 16 53 99 112 128 297 319 332 365 547 548 550 620 621 767 768 771 772 776 820 828
    '-' (45) 156 406 412 690 693 695 698
    '.' (46) 45 184 186 187 377 378 379 380 381 382 385 435 437 439 486 488 489
    '/' (47) 46 158 414
    ':' (58) 55 56 137 298 447 520 526 536 537 554 555 557 558 590 602
    ';' (59) 8 9 15 18 20 518 552 557 558 559 566 584 662 826 829 830 831
    '<' (60) 160 273 305 308 311 314 316 317 373 376 416 450 456 461 475 476 477 668 685 689 704 708 711 714 718 721 725 728 732 735 738 741 785 788 791 794 800 804 807 810 814 818 823 824
    '=' (61) 91 103 104 105 106 107 108 110 327 346 532 539 573 583
    '>' (62) 161 273 305 308 311 314 316 317 373 376 417 450 456 461 475 476 477 668 685 689 704 708 711 714 718 721 725 728 732 735 738 741 785 788 791 794 800 804 807 810 814 818 823 824
    '?' (63) 196 197 447 458 461 462 491 701
    '@' (64) 113 114 324 325 370 373 376 493
    '[' (91) 130 132 182 364 365 434 435 673 674 675 676 690 801 829 830
    ']' (93) 130 132 182 183 364 365 434 435 436 437 673 674 675 676 690 801 829 830
    '^' (94) 169 424
    '{' (123) 233 236 302 337 569 600 612 749 754 759 821 831
    '|' (124) 168 423 743 744
    '}' (125) 233 236 302 337 569 600 612 749 754 759 821 831
    '~' (126) 140 404
    error (256) 259 385
    "lexer error" (258)
    "capture" (259) 334
    "struct" (260) 607 785 804
    "class" (261) 606 788
    "let" (262) 289 292
    "def" (263) 223 512 514
    "while" (264) 88
    "if" (265) 68 83
    "static_if" (266) 69
    "else" (267) 66 71
    "for" (268) 85 829 830 831
    "recover" (269) 288
    "true" (270) 96 107 399
    "false" (271) 97 108 400
    "new" (272) 275 276 277 278 279 280
    "typeinfo" (273) 315 316 317
    "type" (274) 101 314 450 456 461 685
    "in" (275) 85 102 829 830 831
    "is" (276) 192 194 450 451 452 492
    "as" (277) 48 193 195 196 197 453 456 457 458 461 462 490 491
    "elif" (278) 59
    "static_elif" (279) 60
    "array" (280) 708 804 807 810 811 814
    "return" (281) 283 284 285
    "null" (282) 393
    "break" (283) 281
    "try" (284) 288
    "options" (285) 41
    "table" (286) 711 822 823 824
    "expect" (287) 51
    "const" (288) 500 692 693 699
    "require" (289) 42 116
    "operator" (290) 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197
    "enum" (291) 600
    "finally" (292) 233
    "delete" (293) 190 269 270
    "deref" (294) 443
    "typedef" (295) 584
    "typedecl" (296) 686
    "with" (297) 90
    "aka" (298) 546 548 619 621
    "assume" (299) 91
    "cast" (300) 305
    "override" (301) 497
    "abstract" (302) 512
    "upcast" (303) 308
    "iterator" (304) 714 830
    "var" (305) 290 293
    "addr" (306) 444
    "continue" (307) 282
    "where" (308) 826
    "pass" (309) 256
    "reinterpret" (310) 311
    "module" (311) 26
    "public" (312) 22 50 226 502 564 581 587 610
    "label" (313) 56 57
    "goto" (314) 57 58
    "implicit" (315) 697
    "explicit" (316) 270 691
    "shared" (317) 561
    "private" (318) 23 117 225 503 563 580 586 609
    "smart_ptr" (319) 704
    "unsafe" (320) 86 474
    "inscope" (321) 294
    "static" (322) 505
    "fixed_array" (323) 815 818
    "default" (324) 794
    "uninitialized" (325) 279 387 389 782
    "bool" (326) 198 622
    "void" (327) 642
    "string" (328) 199 623
    "auto" (329) 658 659
    "int" (330) 200 624 649
    "int2" (331) 201 628
    "int3" (332) 202 629
    "int4" (333) 203 630
    "uint" (334) 204 631 652
    "bitfield" (335) 648 668 759
    "uint2" (336) 205 635
    "uint3" (337) 206 636
    "uint4" (338) 207 637
    "float" (339) 208 638
    "float2" (340) 209 639
    "float3" (341) 210 640
    "float4" (342) 211 641
    "range" (343) 212 643
    "urange" (344) 213 644
    "range64" (345) 214 645
    "urange64" (346) 215 646
    "block" (347) 715 718 721
    "int64" (348) 216 627 655
    "uint64" (349) 217 634 656
    "double" (350) 218 647
    "function" (351) 722 725 728
    "lambda" (352) 729 732 735
    "int8" (353) 219 625 650
    "uint8" (354) 220 632 653
    "int16" (355) 221 626 651
    "uint16" (356) 222 633 654
    "tuple" (357) 738 749 797 800 807
    "variant" (358) 741 754 791 810
    "generator" (359) 475 476 477
    "yield" (360) 286 287
    "sealed" (361) 498 604
    "+=" (362) 141 355
    "-=" (363) 142 356
    "/=" (364) 144 358
    "*=" (365) 143 357
    "%=" (366) 145 359
    "&=" (367) 146 349
    "|=" (368) 147 350
    "^=" (369) 148 351
    "<<" (370) 174 407
    ">>" (371) 175 408
    "++" (372) 170 172 429 431
    "--" (373) 171 173 430 432
    "<=" (374) 165 420
    "<<=" (375) 176 360
    ">>=" (376) 177 361
    ">=" (377) 166 421
    "==" (378) 163 418 699 700
    "!=" (379) 164 419
    "->" (380) 366 367
    "<-" (381) 285 287 322 328 347 533 540
    "??" (382) 191 446 705
    "?." (383) 185 188 438 439 487 489
    "?[" (384) 183 436 437
    "<|" (385) 470
    "|>" (386) 126 471 472
    ":=" (387) 187 189 329 348 541 766 768 770 772
    "<<<" (388) 178 409
    ">>>" (389) 179 410
    "<<<=" (390) 180 362
    ">>>=" (391) 181 363
    "=>" (392) 321 322 795
    "::" (393) 267 268
    "&&" (394) 122 152 425
    "||" (395) 123 153 426
    "^^" (396) 124 154 427
    "&&=" (397) 149 352
    "||=" (398) 150 353
    "^^=" (399) 151 354
    ".." (400) 162 428
    "$$" (401) 478
    "$i" (402) 369 479 545 618
    "$v" (403) 480
    "$b" (404) 481
    "$a" (405) 482 516
    "$t" (406) 660
    "$c" (407) 484 485 493
    "$f" (408) 486 487 488 489 490 491 492 769 770 771 772
    "..." (409) 483
    "integer constant" <i> (410) 54 55 56 57 94 105 338
    "long integer constant" <i64> (411) 340
    "unsigned integer constant" <ui> (412) 339
    "unsigned long integer constant" <ui64> (413) 341
    "unsigned int8 constant" <ui> (414) 342
    "floating point constant" <fd> (415) 95 106 343
    "double constant" <d> (416) 344
    "name" <s> (417) 25 43 45 46 48 91 93 100 104 138 186 187 188 194 195 197 266 267 268 296 297 316 317 326 327 328 329 330 366 367 377 378 379 380 438 439 452 453 458 520 526 544 546 547 548 549 550 572 573 583 588 605 617 619 620 621 659 661 662 664 665 749 754 759 765 766 767 768
    "emitted ," (418) 17 593 594
    "emitted ;" (419) 19 61 62 508
    "start of the string" (420) 31 32 36
    STRING_CHARACTER <ch> (421) 27 29 37 38
    STRING_CHARACTER_ESC (422) 28 30
    "end of the string" (423) 31 32 36
    "{" (424) 35
    "}" (425) 35
    "end of failed eader macro" (426)
    UNARY_MINUS (427)
    UNARY_PLUS (428)
    PRE_INC (429)
    PRE_DEC (430)
    LLPIPE (431)
    POST_INC (432)
    POST_DEC (433)
    DEREF (434)


Nonterminals, with rules where they appear

    $accept (207)
        on left: 0
    program (208)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    COMMA (209)
        on left: 16 17
        on right: 574 575 669
    SEMICOLON (210)
        on left: 18 19
        on right: 77 78 83 238 239 240 245 247 248 249 250 254 255 256 298 299 510 512 554 555 556 670
    top_level_reader_macro (211)
        on left: 20
        on right: 14
    optional_public_or_private_module <b> (212)
        on left: 21 22 23
        on right: 26
    module_name <s> (213)
        on left: 24 25
        on right: 26
    module_declaration (214)
        on left: 26
        on right: 2
    character_sequence <s> (215)
        on left: 27 28 29 30
        on right: 29 30 31 34
    string_constant <s> (216)
        on left: 31 32
        on right: 92 103
    string_builder_body <pExpression> (217)
        on left: 33 34 35
        on right: 34 35 36
    string_builder <pExpression> (218)
        on left: 36
        on right: 397
    reader_character_sequence (219)
        on left: 37 38
        on right: 38 40
    expr_reader <pExpression> (220)
        on left: 40
        on right: 20 396
    $@1 (221)
        on left: 39
        on right: 40
    options_declaration (222)
        on left: 41
        on right: 9
    require_declaration (223)
        on left: 42
        on right: 8
    require_module_name <s> (224)
        on left: 43 44 45 46
        on right: 44 45 46 47 48
    require_module (225)
        on left: 47 48
        on right: 42
    is_public_module <b> (226)
        on left: 49 50
        on right: 47 48
    expect_declaration (227)
        on left: 51
        on right: 7
    expect_list (228)
        on left: 52 53
        on right: 51 53
    expect_error (229)
        on left: 54 55
        on right: 52 53
    expression_label <pExpression> (230)
        on left: 56
        on right: 254
    expression_goto <pExpression> (231)
        on left: 57 58
        on right: 255
    elif_or_static_elif <b> (232)
        on left: 59 60
        on right: 67
    emit_semis (233)
        on left: 61 62
        on right: 62 64
    optional_emit_semis (234)
        on left: 63 64
        on right: 66 67 82 85 86 88 90 113 114 132 335 336 477 514 616 749 754
    expression_else <pExpression> (235)
        on left: 65 66 67
        on right: 67 82
    if_or_static_if <b> (236)
        on left: 68 69
        on right: 82
    expression_else_one_liner <pExpression> (237)
        on left: 70 71
        on right: 83
    expression_if_one_liner <pExpression> (238)
        on left: 72 73 74 75 76
        on right: 71 83
    semis (239)
        on left: 77 78
        on right: 78 80 525 531
    optional_semis (240)
        on left: 79 80
        on right: 749 754
    expression_if_then_else <pExpression> (241)
        on left: 82
        on right: 251
    $@2 (242)
        on left: 81
        on right: 82
    expression_if_then_else_oneliner <pExpression> (243)
        on left: 83
        on right: 252
    expression_for_loop <pExpression> (244)
        on left: 85
        on right: 246
    $@3 (245)
        on left: 84
        on right: 85
    expression_unsafe <pExpression> (246)
        on left: 86
        on right: 243
    expression_while_loop <pExpression> (247)
        on left: 88
        on right: 242
    $@4 (248)
        on left: 87
        on right: 88
    expression_with <pExpression> (249)
        on left: 90
        on right: 244
    $@5 (250)
        on left: 89
        on right: 90
    expression_with_alias <pExpression> (251)
        on left: 91
        on right: 245
    annotation_argument_value <aa> (252)
        on left: 92 93 94 95 96 97
        on right: 98 99
    annotation_argument_value_list <aaList> (253)
        on left: 98 99
        on right: 99 110
    annotation_argument_name <s> (254)
        on left: 100 101 102
        on right: 103 104 105 106 107 108 109 110
    annotation_argument <aa> (255)
        on left: 103 104 105 106 107 108 109 110
        on right: 111 112 113 114
    annotation_argument_list <aaList> (256)
        on left: 111 112
        on right: 41 112 119
    metadata_argument_list <aaList> (257)
        on left: 113 114
        on right: 114 495
    annotation_declaration_name <s> (258)
        on left: 115 116 117
        on right: 118 119
    annotation_declaration_basic <fa> (259)
        on left: 118 119
        on right: 120
    annotation_declaration <fa> (260)
        on left: 120 121 122 123 124 125 126
        on right: 121 122 123 124 125 126 127 128
    annotation_list <faList> (261)
        on left: 127 128
        on right: 128 130 132
    optional_annotation_list <faList> (262)
        on left: 129 130
        on right: 223 335 336 600 616
    optional_annotation_list_with_emit_semis <faList> (263)
        on left: 131 132
        on right: 512 514
    optional_function_argument_list <pVarDeclList> (264)
        on left: 133 134 135
        on right: 227 335 336 376 721 728 735
    optional_function_type <pTypeDecl> (265)
        on left: 136 137
        on right: 227 335 336 376 721 728 735
    function_name <s> (266)
        on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222
        on right: 227
    global_function_declaration (267)
        on left: 223
        on right: 6
    optional_public_or_private_function <b> (268)
        on left: 224 225 226
        on right: 229
    function_declaration_header <pFuncDecl> (269)
        on left: 227
        on right: 229 512 514
    function_declaration <pFuncDecl> (270)
        on left: 229
        on right: 223
    $@6 (271)
        on left: 228
        on right: 229
    expression_block_finally <pExpression> (272)
        on left: 230 233
        on right: 236
    $@7 (273)
        on left: 231
        on right: 233
    $@8 (274)
        on left: 232
        on right: 233
    expression_block <pExpression> (275)
        on left: 236
        on right: 66 67 82 85 86 88 90 229 288 320 336 477 514
    $@9 (276)
        on left: 234
        on right: 236
    $@10 (277)
        on left: 235
        on right: 236
    expr_call_pipe <pExpression> (278)
        on left: 237
        on right: 473
    expression_any <pExpression> (279)
        on left: 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256
        on right: 258
    expressions <pExpression> (280)
        on left: 257 258 259
        on right: 233 236 258 259 337
    optional_expr_list <pExpression> (281)
        on left: 260 261
        on right: 687 689 814
    optional_expr_map_tuple_list <pExpression> (282)
        on left: 262 263
        on right: 823 824
    type_declaration_no_options_list <pTypeDeclList> (283)
        on left: 264 265
        on right: 265 689
    name_in_namespace <s> (284)
        on left: 266 267 268
        on right: 40 115 315 316 317 364 365 368 386 387 388 389 390 394 602 657 687 689
    expression_delete <pExpression> (285)
        on left: 269 270
        on right: 240
    new_type_declaration <pTypeDecl> (286)
        on left: 273 274
        on right: 275 276 277 278 279
    $@11 (287)
        on left: 271
        on right: 273
    $@12 (288)
        on left: 272
        on right: 273
    expr_new <pExpression> (289)
        on left: 275 276 277 278 279 280
        on right: 466
    expression_break <pExpression> (290)
        on left: 281
        on right: 75 247
    expression_continue <pExpression> (291)
        on left: 282
        on right: 76 248
    expression_return <pExpression> (292)
        on left: 283 284 285
        on right: 73 249
    expression_yield <pExpression> (293)
        on left: 286 287
        on right: 74 250
    expression_try_catch <pExpression> (294)
        on left: 288
        on right: 253
    kwd_let_var_or_nothing <b> (295)
        on left: 289 290 291
        on right: 515
    kwd_let <b> (296)
        on left: 292 293
        on right: 300 301 302 569 571
    optional_in_scope <b> (297)
        on left: 294 295
        on right: 300 301 302
    tuple_expansion <pNameList> (298)
        on left: 296 297
        on right: 297 298 299
    tuple_expansion_variable_declaration <pVarDecl> (299)
        on left: 298 299
        on right: 301
    expression_let <pExpression> (300)
        on left: 300 301 302
        on right: 241
    expr_cast <pExpression> (301)
        on left: 305 308 311
        on right: 465
    $@13 (302)
        on left: 303
        on right: 305
    $@14 (303)
        on left: 304
        on right: 305
    $@15 (304)
        on left: 306
        on right: 308
    $@16 (305)
        on left: 307
        on right: 308
    $@17 (306)
        on left: 309
        on right: 311
    $@18 (307)
        on left: 310
        on right: 311
    expr_type_decl <pExpression> (308)
        on left: 314
        on right: 464
    $@19 (309)
        on left: 312
        on right: 314
    $@20 (310)
        on left: 313
        on right: 314
    expr_type_info <pExpression> (311)
        on left: 315 316 317
        on right: 463
    expr_list <pExpression> (312)
        on left: 318 319
        on right: 85 261 277 319 365 367 380 382 390 392 433 485 797 801 811 815 818 829 830 831
    block_or_simple_block <pExpression> (313)
        on left: 320 321 322
        on right: 335
    block_or_lambda <i> (314)
        on left: 323 324 325
        on right: 335 336
    capture_entry <pCapt> (315)
        on left: 326 327 328 329 330
        on right: 331 332
    capture_list <pCaptList> (316)
        on left: 331 332
        on right: 332 334
    optional_capture_list <pCaptList> (317)
        on left: 333 334
        on right: 335 336 475 476 477
    expr_full_block <pExpression> (318)
        on left: 335
        on right: 469
    expr_full_block_assumed_piped <pExpression> (319)
        on left: 336 337
        on right: 237
    expr_numeric_const <pExpression> (320)
        on left: 338 339 340 341 342 343 344
        on right: 395
    expr_assign <pExpression> (321)
        on left: 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363
        on right: 239
    expr_named_call <pExpression> (322)
        on left: 364 365
        on right: 468
    expr_method_call <pExpression> (323)
        on left: 366 367
        on right: 467
    func_addr_name <pExpression> (324)
        on left: 368 369
        on right: 370 373 376
    func_addr_expr <pExpression> (325)
        on left: 370 373 376
        on right: 440
    $@21 (326)
        on left: 371
        on right: 373
    $@22 (327)
        on left: 372
        on right: 373
    $@23 (328)
        on left: 374
        on right: 376
    $@24 (329)
        on left: 375
        on right: 376
    expr_field <pExpression> (330)
        on left: 377 378 379 380 381 382 385
        on right: 401
    $@25 (331)
        on left: 383
        on right: 385
    $@26 (332)
        on left: 384
        on right: 385
    expr_call <pExpression> (333)
        on left: 386 387 388 389 390 391 392
        on right: 237 441
    expr <pExpression> (334)
        on left: 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 450 451 452 453 456 457 458 461 462 463 464 465 466 467 468 469 470 471 472 473 474
        on right
    $@27 (335)
        on left: 448
        on right: 450
    $@28 (336)
        on left: 449
        on right: 450
    $@29 (337)
        on left: 454
        on right: 456
    $@30 (338)
        on left: 455
        on right: 456
    $@31 (339)
        on left: 459
        on right: 461
    $@32 (340)
        on left: 460
        on right: 461
    expr_generator <pExpression> (341)
        on left: 475 476 477
        on right: 445
    expr_mtag <pExpression> (342)
        on left: 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493
        on right: 402
    optional_field_annotation <aaList> (343)
        on left: 494 495
        on right: 506 515 568 571
    optional_override <i> (344)
        on left: 496 497 498
        on right: 506 514
    optional_constant <b> (345)
        on left: 499 500
        on right: 512 514
    optional_public_or_private_member_variable <b> (346)
        on left: 501 502 503
        on right: 506 512 514
    optional_static_member_variable <b> (347)
        on left: 504 505
        on right: 506 514
    structure_variable_declaration <pVarDecl> (348)
        on left: 506
        on right: 510
    struct_variable_declaration_list <pVarDeclList> (349)
        on left: 507 508 510 512 514
        on right: 508 510 512 514 612
    $@33 (350)
        on left: 509
        on right: 510
    $@34 (351)
        on left: 511
        on right: 512
    $@35 (352)
        on left: 513
        on right: 514
    function_argument_declaration <pVarDecl> (353)
        on left: 515 516
        on right: 517 518
    function_argument_list <pVarDeclList> (354)
        on left: 517 518
        on right: 135 518
    tuple_type <pVarDecl> (355)
        on left: 519 520
        on right: 521 522 524 525
    tuple_type_list <pVarDeclList> (356)
        on left: 521 522
        on right: 522 738
    tuple_alias_type_list <pVarDeclList> (357)
        on left: 523 524 525
        on right: 525 749
    variant_type <pVarDecl> (358)
        on left: 526
        on right: 527 528 530 531
    variant_type_list <pVarDeclList> (359)
        on left: 527 528
        on right: 528 741
    variant_alias_type_list <pVarDeclList> (360)
        on left: 529 530 531
        on right: 531 754
    copy_or_move <b> (361)
        on left: 532 533
        on right: 537 538 765 767 769 771
    variable_declaration <pVarDecl> (362)
        on left: 534 535 536 537 538
        on right: 506 515
    copy_or_move_or_clone <i> (363)
        on left: 539 540 541
        on right: 298 299 555 556 558 559
    optional_ref <b> (364)
        on left: 542 543
        on right: 299 556 559
    let_variable_name_with_pos_list <pNameWithPosList> (365)
        on left: 544 545 546 547 548
        on right: 547 548 554 555 556
    global_let_variable_name_with_pos_list <pNameWithPosList> (366)
        on left: 549 550
        on right: 550 557 558 559
    variable_declaration_list <pVarDeclList> (367)
        on left: 551 552 553
        on right: 302 552 553
    let_variable_declaration <pVarDecl> (368)
        on left: 554 555 556
        on right: 300 553 568
    global_let_variable_declaration <pVarDecl> (369)
        on left: 557 558 559
        on right: 571
    optional_shared <b> (370)
        on left: 560 561
        on right: 26 569 571
    optional_public_or_private_variable <b> (371)
        on left: 562 563 564
        on right: 569 571
    global_variable_declaration_list <pVarDeclList> (372)
        on left: 565 566 568
        on right: 566 568 569
    $@36 (373)
        on left: 567
        on right: 568
    global_let (374)
        on left: 569 571
        on right: 5
    $@37 (375)
        on left: 570
        on right: 571
    enum_expression <pEnumPair> (376)
        on left: 572 573
        on right: 577 578
    commas (377)
        on left: 574 575
        on right: 575 578 592 665
    enum_list <pEnum> (378)
        on left: 576 577 578
        on right: 578 600
    optional_public_or_private_alias <b> (379)
        on left: 579 580 581
        on right: 583 749 754 759
    single_alias (380)
        on left: 583
        on right: 584
    $@38 (381)
        on left: 582
        on right: 583
    alias_declaration (382)
        on left: 584
        on right: 10
    optional_public_or_private_enum <b> (383)
        on left: 585 586 587
        on right: 600
    enum_name <pEnum> (384)
        on left: 588
        on right: 600
    optional_enum_basic_type_declaration <type> (385)
        on left: 589 590
        on right: 600
    optional_commas (386)
        on left: 591 592
        on right: 600 759
    emit_commas (387)
        on left: 593 594
        on right: 594 596
    optional_emit_commas (388)
        on left: 595 596
        on right: 600 759
    enum_declaration (389)
        on left: 600
        on right: 4
    $@39 (390)
        on left: 597
        on right: 600
    $@40 (391)
        on left: 598
        on right: 600
    $@41 (392)
        on left: 599
        on right: 600
    optional_structure_parent <s> (393)
        on left: 601 602
        on right: 605
    optional_sealed <b> (394)
        on left: 603 604
        on right: 605
    structure_name <pStructure> (395)
        on left: 605
        on right: 616
    class_or_struct <b> (396)
        on left: 606 607
        on right: 616
    optional_public_or_private_structure <b> (397)
        on left: 608 609 610
        on right: 616
    optional_struct_variable_declaration_list <pVarDeclList> (398)
        on left: 611 612
        on right: 616
    structure_declaration (399)
        on left: 616
        on right: 3
    $@42 (400)
        on left: 613
        on right: 616
    $@43 (401)
        on left: 614
        on right: 616
    $@44 (402)
        on left: 615
        on right: 616
    variable_name_with_pos_list <pNameWithPosList> (403)
        on left: 617 618 619 620 621
        on right: 85 534 535 536 537 538 620 621 829 830 831
    basic_type_declaration <type> (404)
        on left: 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648
        on right: 381 382 391 392 451 457 462 472 679
    enum_basic_type_declaration <type> (405)
        on left: 649 650 651 652 653 654 655 656
        on right: 590
    structure_type_declaration <pTypeDecl> (406)
        on left: 657
        on right: 274 682
    auto_type_declaration <pTypeDecl> (407)
        on left: 658 659 660
        on right: 680
    bitfield_bits <pNameList> (408)
        on left: 661 662
        on right: 662 668
    bitfield_alias_bits <pNameList> (409)
        on left: 663 664 665
        on right: 665 759
    bitfield_type_declaration <pTypeDecl> (410)
        on left: 668
        on right: 681
    $@45 (411)
        on left: 666
        on right: 668
    $@46 (412)
        on left: 667
        on right: 668
    c_or_s (413)
        on left: 669 670
        on right: 265 317 522 528 672 824
    table_type_pair <aTypePair> (414)
        on left: 671 672
        on right: 711
    dim_list <pTypeDecl> (415)
        on left: 673 674 675 676
        on right: 675 676 678
    type_declaration_no_options <pTypeDecl> (416)
        on left: 677 678
        on right: 298 305 308 311 373 450 475 476 477 554 555 557 558 742 743 785 788 791 794 800 804 807 810 814 818 823 824
    type_declaration_no_options_no_dim <pTypeDecl> (417)
        on left: 679 680 681 682 685 686 687 689 690 691 692 693 694 695 696 697 698 699 700 701 704 705 708 711 714 715 718 721 722 725 728 729 732 735 738 741
        on right: 677 678 690 691 692 693 694 695 696 697 698 699 700 701 705
    $@47 (418)
        on left: 683
        on right: 685
    $@48 (419)
        on left: 684
        on right: 685
    $@49 (420)
        on left: 688
        on right: 689
    $@50 (421)
        on left: 702
        on right: 704
    $@51 (422)
        on left: 703
        on right: 704
    $@52 (423)
        on left: 706
        on right: 708
    $@53 (424)
        on left: 707
        on right: 708
    $@54 (425)
        on left: 709
        on right: 711
    $@55 (426)
        on left: 710
        on right: 711
    $@56 (427)
        on left: 712
        on right: 714
    $@57 (428)
        on left: 713
        on right: 714
    $@58 (429)
        on left: 716
        on right: 718
    $@59 (430)
        on left: 717
        on right: 718
    $@60 (431)
        on left: 719
        on right: 721
    $@61 (432)
        on left: 720
        on right: 721
    $@62 (433)
        on left: 723
        on right: 725
    $@63 (434)
        on left: 724
        on right: 725
    $@64 (435)
        on left: 726
        on right: 728
    $@65 (436)
        on left: 727
        on right: 728
    $@66 (437)
        on left: 730
        on right: 732
    $@67 (438)
        on left: 731
        on right: 732
    $@68 (439)
        on left: 733
        on right: 735
    $@69 (440)
        on left: 734
        on right: 735
    $@70 (441)
        on left: 736
        on right: 738
    $@71 (442)
        on left: 737
        on right: 738
    $@72 (443)
        on left: 739
        on right: 741
    $@73 (444)
        on left: 740
        on right: 741
    type_declaration <pTypeDecl> (445)
        on left: 742 743 744
        on right: 137 264 265 273 314 456 461 519 520 526 536 537 583 671 672 685 704 708 714 718 725 732 743 744
    tuple_alias_declaration (446)
        on left: 749
        on right: 12
    $@74 (447)
        on left: 745
        on right: 749
    $@75 (448)
        on left: 746
        on right: 749
    $@76 (449)
        on left: 747
        on right: 749
    $@77 (450)
        on left: 748
        on right: 749
    variant_alias_declaration (451)
        on left: 754
        on right: 11
    $@78 (452)
        on left: 750
        on right: 754
    $@79 (453)
        on left: 751
        on right: 754
    $@80 (454)
        on left: 752
        on right: 754
    $@81 (455)
        on left: 753
        on right: 754
    bitfield_alias_declaration (456)
        on left: 759
        on right: 13
    $@82 (457)
        on left: 755
        on right: 759
    $@83 (458)
        on left: 756
        on right: 759
    $@84 (459)
        on left: 757
        on right: 759
    $@85 (460)
        on left: 758
        on right: 759
    make_decl <pExpression> (461)
        on left: 760 761 762 763 764
        on right: 280 398
    make_struct_fields <pMakeStruct> (462)
        on left: 765 766 767 768 769 770 771 772
        on right: 364 365 767 768 771 772 773 774 775 776 777
    make_variant_dim <pExpression> (463)
        on left: 773
        on right: 791 810
    make_struct_single <pExpression> (464)
        on left: 774
        on right: 278 279 388 389
    make_struct_dim_list <pExpression> (465)
        on left: 775 776
        on right: 776 778
    make_struct_dim_decl <pExpression> (466)
        on left: 777 778
        on right: 779
    optional_make_struct_dim_decl <pExpression> (467)
        on left: 779 780
        on right: 785 788 800 804 807
    use_initializer <b> (468)
        on left: 781 782
        on right: 276 785 788 794 800 804 807
    make_struct_decl <pExpression> (469)
        on left: 785 788 791 794
        on right: 760
    $@86 (470)
        on left: 783
        on right: 785
    $@87 (471)
        on left: 784
        on right: 785
    $@88 (472)
        on left: 786
        on right: 788
    $@89 (473)
        on left: 787
        on right: 788
    $@90 (474)
        on left: 789
        on right: 791
    $@91 (475)
        on left: 790
        on right: 791
    $@92 (476)
        on left: 792
        on right: 794
    $@93 (477)
        on left: 793
        on right: 794
    make_map_tuple <pExpression> (478)
        on left: 795 796
        on right: 819 820 831
    make_tuple_call <pExpression> (479)
        on left: 797 800
        on right: 764
    $@94 (480)
        on left: 798
        on right: 800
    $@95 (481)
        on left: 799
        on right: 800
    make_dim_decl <pExpression> (482)
        on left: 801 804 807 810 811 814 815 818
        on right: 761
    $@96 (483)
        on left: 802
        on right: 804
    $@97 (484)
        on left: 803
        on right: 804
    $@98 (485)
        on left: 805
        on right: 807
    $@99 (486)
        on left: 806
        on right: 807
    $@100 (487)
        on left: 808
        on right: 810
    $@101 (488)
        on left: 809
        on right: 810
    $@102 (489)
        on left: 812
        on right: 814
    $@103 (490)
        on left: 813
        on right: 814
    $@104 (491)
        on left: 816
        on right: 818
    $@105 (492)
        on left: 817
        on right: 818
    expr_map_tuple_list <pExpression> (493)
        on left: 819 820
        on right: 263 820 821 822
    make_table_decl <pExpression> (494)
        on left: 821 822 823 824
        on right: 762
    array_comprehension_where <pExpression> (495)
        on left: 825 826
        on right: 829 830 831
    optional_comma <b> (496)
        on left: 827 828
        on right: 261 263 433 778 797 801 811 815 818 821 822
    array_comprehension <pExpression> (497)
        on left: 829 830 831
        on right: 763


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration ';'
    9        | program . options_declaration ';'
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . ';'

    $end        shift, and go to state 2
    "let"       shift, and go to state 3
    "options"   shift, and go to state 4
    "expect"    shift, and go to state 5
    "require"   shift, and go to state 6
    "typedef"   shift, and go to state 7
    "var"       shift, and go to state 8
    "module"    shift, and go to state 9
    "bitfield"  shift, and go to state 10
    "tuple"     shift, and go to state 11
    "variant"   shift, and go to state 12
    '%'         shift, and go to state 13
    '['         shift, and go to state 14
    ';'         shift, and go to state 15

    $default  reduce using rule 129 (optional_annotation_list)

    top_level_reader_macro       go to state 16
    module_declaration           go to state 17
    expr_reader                  go to state 18
    options_declaration          go to state 19
    require_declaration          go to state 20
    expect_declaration           go to state 21
    optional_annotation_list     go to state 22
    global_function_declaration  go to state 23
    kwd_let                      go to state 24
    global_let                   go to state 25
    alias_declaration            go to state 26
    enum_declaration             go to state 27
    structure_declaration        go to state 28
    tuple_alias_declaration      go to state 29
    variant_alias_declaration    go to state 30
    bitfield_alias_declaration   go to state 31


State 2

    0 $accept: program $end .

    $default  accept


State 3

  292 kwd_let: "let" .

    $default  reduce using rule 292 (kwd_let)


State 4

   41 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 37


State 5

   51 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 38

    expect_list   go to state 39
    expect_error  go to state 40


State 6

   42 require_declaration: "require" . require_module

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 43
    require_module       go to state 44


State 7

  584 alias_declaration: "typedef" . single_alias ';'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 47
    single_alias                      go to state 48


State 8

  293 kwd_let: "var" .

    $default  reduce using rule 293 (kwd_let)


State 9

   26 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 49
    '$'     shift, and go to state 50

    module_name  go to state 51


State 10

  759 bitfield_alias_declaration: "bitfield" . $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 '}'

    $default  reduce using rule 755 ($@82)

    $@82  go to state 52


State 11

  749 tuple_alias_declaration: "tuple" . $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 '}'

    $default  reduce using rule 745 ($@74)

    $@74  go to state 53


State 12

  754 variant_alias_declaration: "variant" . $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 750 ($@78)

    $@78  go to state 54


State 13

   40 expr_reader: '%' . name_in_namespace $@1 reader_character_sequence

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 57


State 14

  130 optional_annotation_list: '[' . annotation_list ']'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 66
    name_in_namespace             go to state 67


State 15

   15 program: program ';' .

    $default  reduce using rule 15 (program)


State 16

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 17

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 18

   20 top_level_reader_macro: expr_reader . ';'

    ';'  shift, and go to state 68


State 19

    9 program: program options_declaration . ';'

    ';'  shift, and go to state 69


State 20

    8 program: program require_declaration . ';'

    ';'  shift, and go to state 70


State 21

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 22

  223 global_function_declaration: optional_annotation_list . "def" function_declaration
  600 enum_declaration: optional_annotation_list . "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'
  616 structure_declaration: optional_annotation_list . $@42 class_or_struct optional_public_or_private_structure $@43 structure_name optional_emit_semis $@44 optional_struct_variable_declaration_list

    "def"   shift, and go to state 71
    "enum"  shift, and go to state 72

    $default  reduce using rule 613 ($@42)

    $@42  go to state 73


State 23

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 24

  569 global_let: kwd_let . optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}'
  571           | kwd_let . optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "shared"  shift, and go to state 74

    $default  reduce using rule 560 (optional_shared)

    optional_shared  go to state 75


State 25

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 26

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 27

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 28

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 29

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 30

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 31

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 32

  101 annotation_argument_name: "type" .

    $default  reduce using rule 101 (annotation_argument_name)


State 33

  102 annotation_argument_name: "in" .

    $default  reduce using rule 102 (annotation_argument_name)


State 34

  100 annotation_argument_name: "name" .

    $default  reduce using rule 100 (annotation_argument_name)


State 35

  103 annotation_argument: annotation_argument_name . '=' string_constant
  104                    | annotation_argument_name . '=' "name"
  105                    | annotation_argument_name . '=' "integer constant"
  106                    | annotation_argument_name . '=' "floating point constant"
  107                    | annotation_argument_name . '=' "true"
  108                    | annotation_argument_name . '=' "false"
  109                    | annotation_argument_name .
  110                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 76

    $default  reduce using rule 109 (annotation_argument)


State 36

  111 annotation_argument_list: annotation_argument .

    $default  reduce using rule 111 (annotation_argument_list)


State 37

   41 options_declaration: "options" annotation_argument_list .
  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 77

    $default  reduce using rule 41 (options_declaration)


State 38

   54 expect_error: "integer constant" .
   55             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 78

    $default  reduce using rule 54 (expect_error)


State 39

   51 expect_declaration: "expect" expect_list .
   53 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 79

    $default  reduce using rule 51 (expect_declaration)


State 40

   52 expect_list: expect_error .

    $default  reduce using rule 52 (expect_list)


State 41

   43 require_module_name: "name" .

    $default  reduce using rule 43 (require_module_name)


State 42

   44 require_module_name: '%' . require_module_name

    "name"  shift, and go to state 41
    '%'     shift, and go to state 42

    require_module_name  go to state 80


State 43

   45 require_module_name: require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"
   47 require_module: require_module_name . is_public_module
   48               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 81
    "public"  shift, and go to state 82
    '/'       shift, and go to state 83
    '.'       shift, and go to state 84

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 85


State 44

   42 require_declaration: "require" require_module .

    $default  reduce using rule 42 (require_declaration)


State 45

  581 optional_public_or_private_alias: "public" .

    $default  reduce using rule 581 (optional_public_or_private_alias)


State 46

  580 optional_public_or_private_alias: "private" .

    $default  reduce using rule 580 (optional_public_or_private_alias)


State 47

  583 single_alias: optional_public_or_private_alias . "name" $@38 '=' type_declaration

    "name"  shift, and go to state 86


State 48

  584 alias_declaration: "typedef" single_alias . ';'

    ';'  shift, and go to state 87


State 49

   25 module_name: "name" .

    $default  reduce using rule 25 (module_name)


State 50

   24 module_name: '$' .

    $default  reduce using rule 24 (module_name)


State 51

   26 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 74

    $default  reduce using rule 560 (optional_shared)

    optional_shared  go to state 88


State 52

  759 bitfield_alias_declaration: "bitfield" $@82 . optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 89


State 53

  749 tuple_alias_declaration: "tuple" $@74 . optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 90


State 54

  754 variant_alias_declaration: "variant" $@78 . optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis $@81 '}'

    "public"   shift, and go to state 45
    "private"  shift, and go to state 46

    $default  reduce using rule 579 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 91


State 55

  268 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 92


State 56

  266 name_in_namespace: "name" .
  267                  | "name" . "::" "name"

    "::"  shift, and go to state 93

    $default  reduce using rule 266 (name_in_namespace)


State 57

   40 expr_reader: '%' name_in_namespace . $@1 reader_character_sequence

    $default  reduce using rule 39 ($@1)

    $@1  go to state 94


State 58

  116 annotation_declaration_name: "require" .

    $default  reduce using rule 116 (annotation_declaration_name)


State 59

  117 annotation_declaration_name: "private" .

    $default  reduce using rule 117 (annotation_declaration_name)


State 60

  126 annotation_declaration: "|>" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 95
    name_in_namespace             go to state 67


State 61

  121 annotation_declaration: '!' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 96
    name_in_namespace             go to state 67


State 62

  125 annotation_declaration: '(' . annotation_declaration ')'

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 97
    name_in_namespace             go to state 67


State 63

  118 annotation_declaration_basic: annotation_declaration_name .
  119                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 98

    $default  reduce using rule 118 (annotation_declaration_basic)


State 64

  120 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 120 (annotation_declaration)


State 65

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  127 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 127 (annotation_list)


State 66

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 102
    ']'  shift, and go to state 103


State 67

  115 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 115 (annotation_declaration_name)


State 68

   20 top_level_reader_macro: expr_reader ';' .

    $default  reduce using rule 20 (top_level_reader_macro)


State 69

    9 program: program options_declaration ';' .

    $default  reduce using rule 9 (program)


State 70

    8 program: program require_declaration ';' .

    $default  reduce using rule 8 (program)


State 71

  223 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 104
    "private"  shift, and go to state 105

    $default  reduce using rule 224 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 106
    function_declaration                 go to state 107


State 72

  600 enum_declaration: optional_annotation_list "enum" . $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    $default  reduce using rule 597 ($@39)

    $@39  go to state 108


State 73

  616 structure_declaration: optional_annotation_list $@42 . class_or_struct optional_public_or_private_structure $@43 structure_name optional_emit_semis $@44 optional_struct_variable_declaration_list

    "struct"  shift, and go to state 109
    "class"   shift, and go to state 110

    class_or_struct  go to state 111


State 74

  561 optional_shared: "shared" .

    $default  reduce using rule 561 (optional_shared)


State 75

  569 global_let: kwd_let optional_shared . optional_public_or_private_variable '{' global_variable_declaration_list '}'
  571           | kwd_let optional_shared . optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration

    "public"   shift, and go to state 112
    "private"  shift, and go to state 113

    $default  reduce using rule 562 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 114


State 76

  103 annotation_argument: annotation_argument_name '=' . string_constant
  104                    | annotation_argument_name '=' . "name"
  105                    | annotation_argument_name '=' . "integer constant"
  106                    | annotation_argument_name '=' . "floating point constant"
  107                    | annotation_argument_name '=' . "true"
  108                    | annotation_argument_name '=' . "false"
  110                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 115
    "false"                    shift, and go to state 116
    "integer constant"         shift, and go to state 117
    "floating point constant"  shift, and go to state 118
    "name"                     shift, and go to state 119
    "start of the string"      shift, and go to state 120
    '('                        shift, and go to state 121

    string_constant  go to state 122


State 77

  112 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 123


State 78

   55 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 124


State 79

   53 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 38

    expect_error  go to state 125


State 80

   44 require_module_name: '%' require_module_name .
   45                    | require_module_name . '.' "name"
   46                    | require_module_name . '/' "name"

    '.'  shift, and go to state 84

    $default  reduce using rule 44 (require_module_name)


State 81

   48 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 126


State 82

   50 is_public_module: "public" .

    $default  reduce using rule 50 (is_public_module)


State 83

   46 require_module_name: require_module_name '/' . "name"

    "name"  shift, and go to state 127


State 84

   45 require_module_name: require_module_name '.' . "name"

    "name"  shift, and go to state 128


State 85

   47 require_module: require_module_name is_public_module .

    $default  reduce using rule 47 (require_module)


State 86

  583 single_alias: optional_public_or_private_alias "name" . $@38 '=' type_declaration

    $default  reduce using rule 582 ($@38)

    $@38  go to state 129


State 87

  584 alias_declaration: "typedef" single_alias ';' .

    $default  reduce using rule 584 (alias_declaration)


State 88

   26 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 130
    "private"  shift, and go to state 131

    $default  reduce using rule 21 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 132


State 89

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias . "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 '}'

    "name"  shift, and go to state 133


State 90

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias . "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 '}'

    "name"  shift, and go to state 134


State 91

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias . "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis $@81 '}'

    "name"  shift, and go to state 135


State 92

  268 name_in_namespace: "::" "name" .

    $default  reduce using rule 268 (name_in_namespace)


State 93

  267 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 136


State 94

   40 expr_reader: '%' name_in_namespace $@1 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 137

    reader_character_sequence  go to state 138


State 95

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  126                       | "|>" annotation_declaration .

    $default  reduce using rule 126 (annotation_declaration)


State 96

  121 annotation_declaration: '!' annotation_declaration .
  122                       | annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 121 (annotation_declaration)


State 97

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  125                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101
    ')'   shift, and go to state 139


State 98

  119 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 36
    annotation_argument_list  go to state 140


State 99

  122 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 141
    name_in_namespace             go to state 67


State 100

  123 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 142
    name_in_namespace             go to state 67


State 101

  124 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 143
    name_in_namespace             go to state 67


State 102

  128 annotation_list: annotation_list ',' . annotation_declaration

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 144
    name_in_namespace             go to state 67


State 103

  130 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 130 (optional_annotation_list)


State 104

  226 optional_public_or_private_function: "public" .

    $default  reduce using rule 226 (optional_public_or_private_function)


State 105

  225 optional_public_or_private_function: "private" .

    $default  reduce using rule 225 (optional_public_or_private_function)


State 106

  229 function_declaration: optional_public_or_private_function . $@6 function_declaration_header expression_block

    $default  reduce using rule 228 ($@6)

    $@6  go to state 145


State 107

  223 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 223 (global_function_declaration)


State 108

  600 enum_declaration: optional_annotation_list "enum" $@39 . optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    "public"   shift, and go to state 146
    "private"  shift, and go to state 147

    $default  reduce using rule 585 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 148


State 109

  607 class_or_struct: "struct" .

    $default  reduce using rule 607 (class_or_struct)


State 110

  606 class_or_struct: "class" .

    $default  reduce using rule 606 (class_or_struct)


State 111

  616 structure_declaration: optional_annotation_list $@42 class_or_struct . optional_public_or_private_structure $@43 structure_name optional_emit_semis $@44 optional_struct_variable_declaration_list

    "public"   shift, and go to state 149
    "private"  shift, and go to state 150

    $default  reduce using rule 608 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 151


State 112

  564 optional_public_or_private_variable: "public" .

    $default  reduce using rule 564 (optional_public_or_private_variable)


State 113

  563 optional_public_or_private_variable: "private" .

    $default  reduce using rule 563 (optional_public_or_private_variable)


State 114

  569 global_let: kwd_let optional_shared optional_public_or_private_variable . '{' global_variable_declaration_list '}'
  571           | kwd_let optional_shared optional_public_or_private_variable . $@37 optional_field_annotation global_let_variable_declaration

    '{'  shift, and go to state 152

    $default  reduce using rule 570 ($@37)

    $@37  go to state 153


State 115

  107 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 107 (annotation_argument)


State 116

  108 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 108 (annotation_argument)


State 117

  105 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 105 (annotation_argument)


State 118

  106 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 106 (annotation_argument)


State 119

  104 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 104 (annotation_argument)


State 120

   31 string_constant: "start of the string" . character_sequence "end of the string"
   32                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155
    "end of the string"   shift, and go to state 156

    character_sequence  go to state 157


State 121

  110 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 158
    "false"                    shift, and go to state 159
    "integer constant"         shift, and go to state 160
    "floating point constant"  shift, and go to state 161
    "name"                     shift, and go to state 162
    "start of the string"      shift, and go to state 120

    string_constant                 go to state 163
    annotation_argument_value       go to state 164
    annotation_argument_value_list  go to state 165


State 122

  103 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 103 (annotation_argument)


State 123

  112 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 112 (annotation_argument_list)


State 124

   55 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 55 (expect_error)


State 125

   53 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 53 (expect_list)


State 126

   48 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 82

    $default  reduce using rule 49 (is_public_module)

    is_public_module  go to state 166


State 127

   46 require_module_name: require_module_name '/' "name" .

    $default  reduce using rule 46 (require_module_name)


State 128

   45 require_module_name: require_module_name '.' "name" .

    $default  reduce using rule 45 (require_module_name)


State 129

  583 single_alias: optional_public_or_private_alias "name" $@38 . '=' type_declaration

    '='  shift, and go to state 167


State 130

   22 optional_public_or_private_module: "public" .

    $default  reduce using rule 22 (optional_public_or_private_module)


State 131

   23 optional_public_or_private_module: "private" .

    $default  reduce using rule 23 (optional_public_or_private_module)


State 132

   26 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 26 (module_declaration)


State 133

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" . optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 '}'

    "emitted ,"  shift, and go to state 168

    $default  reduce using rule 595 (optional_emit_commas)

    emit_commas           go to state 169
    optional_emit_commas  go to state 170


State 134

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" . optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 '}'

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 173


State 135

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" . optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis $@81 '}'

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 174


State 136

  267 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 267 (name_in_namespace)


State 137

   37 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 37 (reader_character_sequence)


State 138

   38 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   40 expr_reader: '%' name_in_namespace $@1 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 175

    $default  reduce using rule 40 (expr_reader)


State 139

  125 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 125 (annotation_declaration)


State 140

  112 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 77
    ')'  shift, and go to state 176


State 141

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration .
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 122 (annotation_declaration)


State 142

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration .
  124                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 99
    "^^"  shift, and go to state 101

    $default  reduce using rule 123 (annotation_declaration)


State 143

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 99

    $default  reduce using rule 124 (annotation_declaration)


State 144

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  128 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 99
    "||"  shift, and go to state 100
    "^^"  shift, and go to state 101

    $default  reduce using rule 128 (annotation_list)


State 145

  229 function_declaration: optional_public_or_private_function $@6 . function_declaration_header expression_block

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 207


State 146

  587 optional_public_or_private_enum: "public" .

    $default  reduce using rule 587 (optional_public_or_private_enum)


State 147

  586 optional_public_or_private_enum: "private" .

    $default  reduce using rule 586 (optional_public_or_private_enum)


State 148

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum . enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    "name"  shift, and go to state 208

    enum_name  go to state 209


State 149

  610 optional_public_or_private_structure: "public" .

    $default  reduce using rule 610 (optional_public_or_private_structure)


State 150

  609 optional_public_or_private_structure: "private" .

    $default  reduce using rule 609 (optional_public_or_private_structure)


State 151

  616 structure_declaration: optional_annotation_list $@42 class_or_struct optional_public_or_private_structure . $@43 structure_name optional_emit_semis $@44 optional_struct_variable_declaration_list

    $default  reduce using rule 614 ($@43)

    $@43  go to state 210


State 152

  569 global_let: kwd_let optional_shared optional_public_or_private_variable '{' . global_variable_declaration_list '}'

    $default  reduce using rule 565 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 211


State 153

  571 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 . optional_field_annotation global_let_variable_declaration

    '@'  shift, and go to state 212

    $default  reduce using rule 494 (optional_field_annotation)

    metadata_argument_list     go to state 213
    optional_field_annotation  go to state 214


State 154

   27 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 27 (character_sequence)


State 155

   28 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 28 (character_sequence)


State 156

   32 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 32 (string_constant)


State 157

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   31 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 215
    STRING_CHARACTER_ESC  shift, and go to state 216
    "end of the string"   shift, and go to state 217


State 158

   96 annotation_argument_value: "true" .

    $default  reduce using rule 96 (annotation_argument_value)


State 159

   97 annotation_argument_value: "false" .

    $default  reduce using rule 97 (annotation_argument_value)


State 160

   94 annotation_argument_value: "integer constant" .

    $default  reduce using rule 94 (annotation_argument_value)


State 161

   95 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 95 (annotation_argument_value)


State 162

   93 annotation_argument_value: "name" .

    $default  reduce using rule 93 (annotation_argument_value)


State 163

   92 annotation_argument_value: string_constant .

    $default  reduce using rule 92 (annotation_argument_value)


State 164

   98 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 98 (annotation_argument_value_list)


State 165

   99 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 218
    ')'  shift, and go to state 219


State 166

   48 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 48 (require_module)


State 167

  583 single_alias: optional_public_or_private_alias "name" $@38 '=' . type_declaration

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 268


State 168

  593 emit_commas: "emitted ," .

    $default  reduce using rule 593 (emit_commas)


State 169

  594 emit_commas: emit_commas . "emitted ,"
  596 optional_emit_commas: emit_commas .

    "emitted ,"  shift, and go to state 269

    $default  reduce using rule 596 (optional_emit_commas)


State 170

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas . $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 '}'

    $default  reduce using rule 756 ($@83)

    $@83  go to state 270


State 171

   61 emit_semis: "emitted ;" .

    $default  reduce using rule 61 (emit_semis)


State 172

   62 emit_semis: emit_semis . "emitted ;"
   64 optional_emit_semis: emit_semis .

    "emitted ;"  shift, and go to state 271

    $default  reduce using rule 64 (optional_emit_semis)


State 173

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis . $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 '}'

    $default  reduce using rule 746 ($@75)

    $@75  go to state 272


State 174

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis . $@79 '{' $@80 variant_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 751 ($@79)

    $@79  go to state 273


State 175

   38 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 176

  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 119 (annotation_declaration_basic)


State 177

  139 function_name: "operator" . '!'
  140              | "operator" . '~'
  141              | "operator" . "+="
  142              | "operator" . "-="
  143              | "operator" . "*="
  144              | "operator" . "/="
  145              | "operator" . "%="
  146              | "operator" . "&="
  147              | "operator" . "|="
  148              | "operator" . "^="
  149              | "operator" . "&&="
  150              | "operator" . "||="
  151              | "operator" . "^^="
  152              | "operator" . "&&"
  153              | "operator" . "||"
  154              | "operator" . "^^"
  155              | "operator" . '+'
  156              | "operator" . '-'
  157              | "operator" . '*'
  158              | "operator" . '/'
  159              | "operator" . '%'
  160              | "operator" . '<'
  161              | "operator" . '>'
  162              | "operator" . ".."
  163              | "operator" . "=="
  164              | "operator" . "!="
  165              | "operator" . "<="
  166              | "operator" . ">="
  167              | "operator" . '&'
  168              | "operator" . '|'
  169              | "operator" . '^'
  172              | "operator" . "++"
  173              | "operator" . "--"
  174              | "operator" . "<<"
  175              | "operator" . ">>"
  176              | "operator" . "<<="
  177              | "operator" . ">>="
  178              | "operator" . "<<<"
  179              | "operator" . ">>>"
  180              | "operator" . "<<<="
  181              | "operator" . ">>>="
  182              | "operator" . '[' ']'
  183              | "operator" . "?[" ']'
  184              | "operator" . '.'
  185              | "operator" . "?."
  186              | "operator" . '.' "name"
  187              | "operator" . '.' "name" ":="
  188              | "operator" . "?." "name"
  189              | "operator" . ":="
  190              | "operator" . "delete"
  191              | "operator" . "??"
  192              | "operator" . "is"
  193              | "operator" . "as"
  194              | "operator" . "is" "name"
  195              | "operator" . "as" "name"
  196              | "operator" . '?' "as"
  197              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 274
    "as"      shift, and go to state 275
    "delete"  shift, and go to state 276
    "+="      shift, and go to state 277
    "-="      shift, and go to state 278
    "/="      shift, and go to state 279
    "*="      shift, and go to state 280
    "%="      shift, and go to state 281
    "&="      shift, and go to state 282
    "|="      shift, and go to state 283
    "^="      shift, and go to state 284
    "<<"      shift, and go to state 285
    ">>"      shift, and go to state 286
    "++"      shift, and go to state 287
    "--"      shift, and go to state 288
    "<="      shift, and go to state 289
    "<<="     shift, and go to state 290
    ">>="     shift, and go to state 291
    ">="      shift, and go to state 292
    "=="      shift, and go to state 293
    "!="      shift, and go to state 294
    "??"      shift, and go to state 295
    "?."      shift, and go to state 296
    "?["      shift, and go to state 297
    ":="      shift, and go to state 298
    "<<<"     shift, and go to state 299
    ">>>"     shift, and go to state 300
    "<<<="    shift, and go to state 301
    ">>>="    shift, and go to state 302
    "&&"      shift, and go to state 303
    "||"      shift, and go to state 304
    "^^"      shift, and go to state 305
    "&&="     shift, and go to state 306
    "||="     shift, and go to state 307
    "^^="     shift, and go to state 308
    ".."      shift, and go to state 309
    '?'       shift, and go to state 310
    '|'       shift, and go to state 311
    '^'       shift, and go to state 312
    '&'       shift, and go to state 313
    '<'       shift, and go to state 314
    '>'       shift, and go to state 315
    '-'       shift, and go to state 316
    '+'       shift, and go to state 317
    '*'       shift, and go to state 318
    '/'       shift, and go to state 319
    '%'       shift, and go to state 320
    '~'       shift, and go to state 321
    '!'       shift, and go to state 322
    '.'       shift, and go to state 323
    '['       shift, and go to state 324


State 178

  198 function_name: "bool" .

    $default  reduce using rule 198 (function_name)


State 179

  199 function_name: "string" .

    $default  reduce using rule 199 (function_name)


State 180

  200 function_name: "int" .

    $default  reduce using rule 200 (function_name)


State 181

  201 function_name: "int2" .

    $default  reduce using rule 201 (function_name)


State 182

  202 function_name: "int3" .

    $default  reduce using rule 202 (function_name)


State 183

  203 function_name: "int4" .

    $default  reduce using rule 203 (function_name)


State 184

  204 function_name: "uint" .

    $default  reduce using rule 204 (function_name)


State 185

  205 function_name: "uint2" .

    $default  reduce using rule 205 (function_name)


State 186

  206 function_name: "uint3" .

    $default  reduce using rule 206 (function_name)


State 187

  207 function_name: "uint4" .

    $default  reduce using rule 207 (function_name)


State 188

  208 function_name: "float" .

    $default  reduce using rule 208 (function_name)


State 189

  209 function_name: "float2" .

    $default  reduce using rule 209 (function_name)


State 190

  210 function_name: "float3" .

    $default  reduce using rule 210 (function_name)


State 191

  211 function_name: "float4" .

    $default  reduce using rule 211 (function_name)


State 192

  212 function_name: "range" .

    $default  reduce using rule 212 (function_name)


State 193

  213 function_name: "urange" .

    $default  reduce using rule 213 (function_name)


State 194

  214 function_name: "range64" .

    $default  reduce using rule 214 (function_name)


State 195

  215 function_name: "urange64" .

    $default  reduce using rule 215 (function_name)


State 196

  216 function_name: "int64" .

    $default  reduce using rule 216 (function_name)


State 197

  217 function_name: "uint64" .

    $default  reduce using rule 217 (function_name)


State 198

  218 function_name: "double" .

    $default  reduce using rule 218 (function_name)


State 199

  219 function_name: "int8" .

    $default  reduce using rule 219 (function_name)


State 200

  220 function_name: "uint8" .

    $default  reduce using rule 220 (function_name)


State 201

  221 function_name: "int16" .

    $default  reduce using rule 221 (function_name)


State 202

  222 function_name: "uint16" .

    $default  reduce using rule 222 (function_name)


State 203

  170 function_name: "++" . "operator"

    "operator"  shift, and go to state 325


State 204

  171 function_name: "--" . "operator"

    "operator"  shift, and go to state 326


State 205

  138 function_name: "name" .

    $default  reduce using rule 138 (function_name)


State 206

  227 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 327

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 328


State 207

  229 function_declaration: optional_public_or_private_function $@6 function_declaration_header . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 329
    $@9               go to state 330


State 208

  588 enum_name: "name" .

    $default  reduce using rule 588 (enum_name)


State 209

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name . optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    ':'  shift, and go to state 331

    $default  reduce using rule 589 (optional_enum_basic_type_declaration)

    optional_enum_basic_type_declaration  go to state 332


State 210

  616 structure_declaration: optional_annotation_list $@42 class_or_struct optional_public_or_private_structure $@43 . structure_name optional_emit_semis $@44 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 333

    $default  reduce using rule 603 (optional_sealed)

    optional_sealed  go to state 334
    structure_name   go to state 335


State 211

  566 global_variable_declaration_list: global_variable_declaration_list . ';'
  568                                 | global_variable_declaration_list . $@36 optional_field_annotation let_variable_declaration
  569 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list . '}'

    ';'  shift, and go to state 336
    '}'  shift, and go to state 337

    $default  reduce using rule 567 ($@36)

    $@36  go to state 338


State 212

  113 metadata_argument_list: '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 339


State 213

  114 metadata_argument_list: metadata_argument_list . '@' annotation_argument optional_emit_semis
  495 optional_field_annotation: metadata_argument_list .

    '@'  shift, and go to state 340

    $default  reduce using rule 495 (optional_field_annotation)


State 214

  571 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation . global_let_variable_declaration

    "name"  shift, and go to state 341

    global_let_variable_name_with_pos_list  go to state 342
    global_let_variable_declaration         go to state 343


State 215

   29 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 29 (character_sequence)


State 216

   30 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 30 (character_sequence)


State 217

   31 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 31 (string_constant)


State 218

   99 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 158
    "false"                    shift, and go to state 159
    "integer constant"         shift, and go to state 160
    "floating point constant"  shift, and go to state 161
    "name"                     shift, and go to state 162
    "start of the string"      shift, and go to state 120

    string_constant            go to state 163
    annotation_argument_value  go to state 344


State 219

  110 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 110 (annotation_argument)


State 220

  685 type_declaration_no_options_no_dim: "type" . '<' $@47 type_declaration '>' $@48

    '<'  shift, and go to state 345


State 221

  708 type_declaration_no_options_no_dim: "array" . '<' $@52 type_declaration '>' $@53

    '<'  shift, and go to state 346


State 222

  711 type_declaration_no_options_no_dim: "table" . '<' $@54 table_type_pair '>' $@55

    '<'  shift, and go to state 347


State 223

  686 type_declaration_no_options_no_dim: "typedecl" . '(' expr ')'

    '('  shift, and go to state 348


State 224

  714 type_declaration_no_options_no_dim: "iterator" . '<' $@56 type_declaration '>' $@57

    '<'  shift, and go to state 349


State 225

  704 type_declaration_no_options_no_dim: "smart_ptr" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 350


State 226

  622 basic_type_declaration: "bool" .

    $default  reduce using rule 622 (basic_type_declaration)


State 227

  642 basic_type_declaration: "void" .

    $default  reduce using rule 642 (basic_type_declaration)


State 228

  623 basic_type_declaration: "string" .

    $default  reduce using rule 623 (basic_type_declaration)


State 229

  658 auto_type_declaration: "auto" .
  659                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 351

    $default  reduce using rule 658 (auto_type_declaration)


State 230

  624 basic_type_declaration: "int" .

    $default  reduce using rule 624 (basic_type_declaration)


State 231

  628 basic_type_declaration: "int2" .

    $default  reduce using rule 628 (basic_type_declaration)


State 232

  629 basic_type_declaration: "int3" .

    $default  reduce using rule 629 (basic_type_declaration)


State 233

  630 basic_type_declaration: "int4" .

    $default  reduce using rule 630 (basic_type_declaration)


State 234

  631 basic_type_declaration: "uint" .

    $default  reduce using rule 631 (basic_type_declaration)


State 235

  648 basic_type_declaration: "bitfield" .
  668 bitfield_type_declaration: "bitfield" . '<' $@45 bitfield_bits '>' $@46

    '<'  shift, and go to state 352

    $default  reduce using rule 648 (basic_type_declaration)


State 236

  635 basic_type_declaration: "uint2" .

    $default  reduce using rule 635 (basic_type_declaration)


State 237

  636 basic_type_declaration: "uint3" .

    $default  reduce using rule 636 (basic_type_declaration)


State 238

  637 basic_type_declaration: "uint4" .

    $default  reduce using rule 637 (basic_type_declaration)


State 239

  638 basic_type_declaration: "float" .

    $default  reduce using rule 638 (basic_type_declaration)


State 240

  639 basic_type_declaration: "float2" .

    $default  reduce using rule 639 (basic_type_declaration)


State 241

  640 basic_type_declaration: "float3" .

    $default  reduce using rule 640 (basic_type_declaration)


State 242

  641 basic_type_declaration: "float4" .

    $default  reduce using rule 641 (basic_type_declaration)


State 243

  643 basic_type_declaration: "range" .

    $default  reduce using rule 643 (basic_type_declaration)


State 244

  644 basic_type_declaration: "urange" .

    $default  reduce using rule 644 (basic_type_declaration)


State 245

  645 basic_type_declaration: "range64" .

    $default  reduce using rule 645 (basic_type_declaration)


State 246

  646 basic_type_declaration: "urange64" .

    $default  reduce using rule 646 (basic_type_declaration)


State 247

  715 type_declaration_no_options_no_dim: "block" .
  718                                   | "block" . '<' $@58 type_declaration '>' $@59
  721                                   | "block" . '<' $@60 optional_function_argument_list optional_function_type '>' $@61

    '<'  shift, and go to state 353

    $default  reduce using rule 715 (type_declaration_no_options_no_dim)


State 248

  627 basic_type_declaration: "int64" .

    $default  reduce using rule 627 (basic_type_declaration)


State 249

  634 basic_type_declaration: "uint64" .

    $default  reduce using rule 634 (basic_type_declaration)


State 250

  647 basic_type_declaration: "double" .

    $default  reduce using rule 647 (basic_type_declaration)


State 251

  722 type_declaration_no_options_no_dim: "function" .
  725                                   | "function" . '<' $@62 type_declaration '>' $@63
  728                                   | "function" . '<' $@64 optional_function_argument_list optional_function_type '>' $@65

    '<'  shift, and go to state 354

    $default  reduce using rule 722 (type_declaration_no_options_no_dim)


State 252

  729 type_declaration_no_options_no_dim: "lambda" .
  732                                   | "lambda" . '<' $@66 type_declaration '>' $@67
  735                                   | "lambda" . '<' $@68 optional_function_argument_list optional_function_type '>' $@69

    '<'  shift, and go to state 355

    $default  reduce using rule 729 (type_declaration_no_options_no_dim)


State 253

  625 basic_type_declaration: "int8" .

    $default  reduce using rule 625 (basic_type_declaration)


State 254

  632 basic_type_declaration: "uint8" .

    $default  reduce using rule 632 (basic_type_declaration)


State 255

  626 basic_type_declaration: "int16" .

    $default  reduce using rule 626 (basic_type_declaration)


State 256

  633 basic_type_declaration: "uint16" .

    $default  reduce using rule 633 (basic_type_declaration)


State 257

  738 type_declaration_no_options_no_dim: "tuple" . '<' $@70 tuple_type_list '>' $@71

    '<'  shift, and go to state 356


State 258

  741 type_declaration_no_options_no_dim: "variant" . '<' $@72 variant_type_list '>' $@73

    '<'  shift, and go to state 357


State 259

  660 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 358


State 260

  687 type_declaration_no_options_no_dim: '$' . name_in_namespace '(' optional_expr_list ')'
  689                                   | '$' . name_in_namespace '<' $@49 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 359


State 261

  657 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 657 (structure_type_declaration)


State 262

  679 type_declaration_no_options_no_dim: basic_type_declaration .

    $default  reduce using rule 679 (type_declaration_no_options_no_dim)


State 263

  682 type_declaration_no_options_no_dim: structure_type_declaration .

    $default  reduce using rule 682 (type_declaration_no_options_no_dim)


State 264

  680 type_declaration_no_options_no_dim: auto_type_declaration .

    $default  reduce using rule 680 (type_declaration_no_options_no_dim)


State 265

  681 type_declaration_no_options_no_dim: bitfield_type_declaration .

    $default  reduce using rule 681 (type_declaration_no_options_no_dim)


State 266

  742 type_declaration: type_declaration_no_options .

    $default  reduce using rule 742 (type_declaration)


State 267

  677 type_declaration_no_options: type_declaration_no_options_no_dim .
  678                            | type_declaration_no_options_no_dim . dim_list
  690 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim . '-' '[' ']'
  691                                   | type_declaration_no_options_no_dim . "explicit"
  692                                   | type_declaration_no_options_no_dim . "const"
  693                                   | type_declaration_no_options_no_dim . '-' "const"
  694                                   | type_declaration_no_options_no_dim . '&'
  695                                   | type_declaration_no_options_no_dim . '-' '&'
  696                                   | type_declaration_no_options_no_dim . '#'
  697                                   | type_declaration_no_options_no_dim . "implicit"
  698                                   | type_declaration_no_options_no_dim . '-' '#'
  699                                   | type_declaration_no_options_no_dim . "==" "const"
  700                                   | type_declaration_no_options_no_dim . "==" '&'
  701                                   | type_declaration_no_options_no_dim . '?'
  705                                   | type_declaration_no_options_no_dim . "??"

    "const"     shift, and go to state 360
    "implicit"  shift, and go to state 361
    "explicit"  shift, and go to state 362
    "=="        shift, and go to state 363
    "??"        shift, and go to state 364
    '?'         shift, and go to state 365
    '&'         shift, and go to state 366
    '-'         shift, and go to state 367
    '['         shift, and go to state 368
    '#'         shift, and go to state 369

    $default  reduce using rule 677 (type_declaration_no_options)

    dim_list  go to state 370


State 268

  583 single_alias: optional_public_or_private_alias "name" $@38 '=' type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 583 (single_alias)


State 269

  594 emit_commas: emit_commas "emitted ," .

    $default  reduce using rule 594 (emit_commas)


State 270

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 . '{' $@84 bitfield_alias_bits optional_commas $@85 '}'

    '{'  shift, and go to state 372


State 271

   62 emit_semis: emit_semis "emitted ;" .

    $default  reduce using rule 62 (emit_semis)


State 272

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 . '{' $@76 tuple_alias_type_list optional_semis $@77 '}'

    '{'  shift, and go to state 373


State 273

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 . '{' $@80 variant_alias_type_list optional_semis $@81 '}'

    '{'  shift, and go to state 374


State 274

  192 function_name: "operator" "is" .
  194              | "operator" "is" . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 192 (function_name)


State 275

  193 function_name: "operator" "as" .
  195              | "operator" "as" . "name"

    "name"  shift, and go to state 376

    $default  reduce using rule 193 (function_name)


State 276

  190 function_name: "operator" "delete" .

    $default  reduce using rule 190 (function_name)


State 277

  141 function_name: "operator" "+=" .

    $default  reduce using rule 141 (function_name)


State 278

  142 function_name: "operator" "-=" .

    $default  reduce using rule 142 (function_name)


State 279

  144 function_name: "operator" "/=" .

    $default  reduce using rule 144 (function_name)


State 280

  143 function_name: "operator" "*=" .

    $default  reduce using rule 143 (function_name)


State 281

  145 function_name: "operator" "%=" .

    $default  reduce using rule 145 (function_name)


State 282

  146 function_name: "operator" "&=" .

    $default  reduce using rule 146 (function_name)


State 283

  147 function_name: "operator" "|=" .

    $default  reduce using rule 147 (function_name)


State 284

  148 function_name: "operator" "^=" .

    $default  reduce using rule 148 (function_name)


State 285

  174 function_name: "operator" "<<" .

    $default  reduce using rule 174 (function_name)


State 286

  175 function_name: "operator" ">>" .

    $default  reduce using rule 175 (function_name)


State 287

  172 function_name: "operator" "++" .

    $default  reduce using rule 172 (function_name)


State 288

  173 function_name: "operator" "--" .

    $default  reduce using rule 173 (function_name)


State 289

  165 function_name: "operator" "<=" .

    $default  reduce using rule 165 (function_name)


State 290

  176 function_name: "operator" "<<=" .

    $default  reduce using rule 176 (function_name)


State 291

  177 function_name: "operator" ">>=" .

    $default  reduce using rule 177 (function_name)


State 292

  166 function_name: "operator" ">=" .

    $default  reduce using rule 166 (function_name)


State 293

  163 function_name: "operator" "==" .

    $default  reduce using rule 163 (function_name)


State 294

  164 function_name: "operator" "!=" .

    $default  reduce using rule 164 (function_name)


State 295

  191 function_name: "operator" "??" .

    $default  reduce using rule 191 (function_name)


State 296

  185 function_name: "operator" "?." .
  188              | "operator" "?." . "name"

    "name"  shift, and go to state 377

    $default  reduce using rule 185 (function_name)


State 297

  183 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 378


State 298

  189 function_name: "operator" ":=" .

    $default  reduce using rule 189 (function_name)


State 299

  178 function_name: "operator" "<<<" .

    $default  reduce using rule 178 (function_name)


State 300

  179 function_name: "operator" ">>>" .

    $default  reduce using rule 179 (function_name)


State 301

  180 function_name: "operator" "<<<=" .

    $default  reduce using rule 180 (function_name)


State 302

  181 function_name: "operator" ">>>=" .

    $default  reduce using rule 181 (function_name)


State 303

  152 function_name: "operator" "&&" .

    $default  reduce using rule 152 (function_name)


State 304

  153 function_name: "operator" "||" .

    $default  reduce using rule 153 (function_name)


State 305

  154 function_name: "operator" "^^" .

    $default  reduce using rule 154 (function_name)


State 306

  149 function_name: "operator" "&&=" .

    $default  reduce using rule 149 (function_name)


State 307

  150 function_name: "operator" "||=" .

    $default  reduce using rule 150 (function_name)


State 308

  151 function_name: "operator" "^^=" .

    $default  reduce using rule 151 (function_name)


State 309

  162 function_name: "operator" ".." .

    $default  reduce using rule 162 (function_name)


State 310

  196 function_name: "operator" '?' . "as"
  197              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 379


State 311

  168 function_name: "operator" '|' .

    $default  reduce using rule 168 (function_name)


State 312

  169 function_name: "operator" '^' .

    $default  reduce using rule 169 (function_name)


State 313

  167 function_name: "operator" '&' .

    $default  reduce using rule 167 (function_name)


State 314

  160 function_name: "operator" '<' .

    $default  reduce using rule 160 (function_name)


State 315

  161 function_name: "operator" '>' .

    $default  reduce using rule 161 (function_name)


State 316

  156 function_name: "operator" '-' .

    $default  reduce using rule 156 (function_name)


State 317

  155 function_name: "operator" '+' .

    $default  reduce using rule 155 (function_name)


State 318

  157 function_name: "operator" '*' .

    $default  reduce using rule 157 (function_name)


State 319

  158 function_name: "operator" '/' .

    $default  reduce using rule 158 (function_name)


State 320

  159 function_name: "operator" '%' .

    $default  reduce using rule 159 (function_name)


State 321

  140 function_name: "operator" '~' .

    $default  reduce using rule 140 (function_name)


State 322

  139 function_name: "operator" '!' .

    $default  reduce using rule 139 (function_name)


State 323

  184 function_name: "operator" '.' .
  186              | "operator" '.' . "name"
  187              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 380

    $default  reduce using rule 184 (function_name)


State 324

  182 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 381


State 325

  170 function_name: "++" "operator" .

    $default  reduce using rule 170 (function_name)


State 326

  171 function_name: "--" "operator" .

    $default  reduce using rule 171 (function_name)


State 327

  134 optional_function_argument_list: '(' . ')'
  135                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 382
    ')'   shift, and go to state 383
    '@'   shift, and go to state 212

    $default  reduce using rule 494 (optional_field_annotation)

    metadata_argument_list         go to state 213
    optional_field_annotation      go to state 384
    function_argument_declaration  go to state 385
    function_argument_list         go to state 386


State 328

  227 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 387

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 388


State 329

  229 function_declaration: optional_public_or_private_function $@6 function_declaration_header expression_block .

    $default  reduce using rule 229 (function_declaration)


State 330

  236 expression_block: $@9 . '{' expressions $@10 '}' expression_block_finally

    '{'  shift, and go to state 389


State 331

  590 optional_enum_basic_type_declaration: ':' . enum_basic_type_declaration

    "int"     shift, and go to state 390
    "uint"    shift, and go to state 391
    "int64"   shift, and go to state 392
    "uint64"  shift, and go to state 393
    "int8"    shift, and go to state 394
    "uint8"   shift, and go to state 395
    "int16"   shift, and go to state 396
    "uint16"  shift, and go to state 397

    enum_basic_type_declaration  go to state 398


State 332

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration . optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}'

    "emitted ,"  shift, and go to state 168

    $default  reduce using rule 595 (optional_emit_commas)

    emit_commas           go to state 169
    optional_emit_commas  go to state 399


State 333

  604 optional_sealed: "sealed" .

    $default  reduce using rule 604 (optional_sealed)


State 334

  605 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 400


State 335

  616 structure_declaration: optional_annotation_list $@42 class_or_struct optional_public_or_private_structure $@43 structure_name . optional_emit_semis $@44 optional_struct_variable_declaration_list

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 401


State 336

  566 global_variable_declaration_list: global_variable_declaration_list ';' .

    $default  reduce using rule 566 (global_variable_declaration_list)


State 337

  569 global_let: kwd_let optional_shared optional_public_or_private_variable '{' global_variable_declaration_list '}' .

    $default  reduce using rule 569 (global_let)


State 338

  568 global_variable_declaration_list: global_variable_declaration_list $@36 . optional_field_annotation let_variable_declaration

    '@'  shift, and go to state 212

    $default  reduce using rule 494 (optional_field_annotation)

    metadata_argument_list     go to state 213
    optional_field_annotation  go to state 402


State 339

  113 metadata_argument_list: '@' annotation_argument . optional_emit_semis

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 403


State 340

  114 metadata_argument_list: metadata_argument_list '@' . annotation_argument optional_emit_semis

    "type"  shift, and go to state 32
    "in"    shift, and go to state 33
    "name"  shift, and go to state 34

    annotation_argument_name  go to state 35
    annotation_argument       go to state 404


State 341

  549 global_let_variable_name_with_pos_list: "name" .

    $default  reduce using rule 549 (global_let_variable_name_with_pos_list)


State 342

  550 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list . ',' "name"
  557 global_let_variable_declaration: global_let_variable_name_with_pos_list . ':' type_declaration_no_options ';'
  558                                | global_let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr ';'
  559                                | global_let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr ';'

    ','  shift, and go to state 405
    ':'  shift, and go to state 406
    '&'  shift, and go to state 407

    $default  reduce using rule 542 (optional_ref)

    optional_ref  go to state 408


State 343

  571 global_let: kwd_let optional_shared optional_public_or_private_variable $@37 optional_field_annotation global_let_variable_declaration .

    $default  reduce using rule 571 (global_let)


State 344

   99 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 99 (annotation_argument_value_list)


State 345

  685 type_declaration_no_options_no_dim: "type" '<' . $@47 type_declaration '>' $@48

    $default  reduce using rule 683 ($@47)

    $@47  go to state 409


State 346

  708 type_declaration_no_options_no_dim: "array" '<' . $@52 type_declaration '>' $@53

    $default  reduce using rule 706 ($@52)

    $@52  go to state 410


State 347

  711 type_declaration_no_options_no_dim: "table" '<' . $@54 table_type_pair '>' $@55

    $default  reduce using rule 709 ($@54)

    $@54  go to state 411


State 348

  686 type_declaration_no_options_no_dim: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 477
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 349

  714 type_declaration_no_options_no_dim: "iterator" '<' . $@56 type_declaration '>' $@57

    $default  reduce using rule 712 ($@56)

    $@56  go to state 487


State 350

  704 type_declaration_no_options_no_dim: "smart_ptr" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 702 ($@50)

    $@50  go to state 488


State 351

  659 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 489


State 352

  668 bitfield_type_declaration: "bitfield" '<' . $@45 bitfield_bits '>' $@46

    $default  reduce using rule 666 ($@45)

    $@45  go to state 490


State 353

  718 type_declaration_no_options_no_dim: "block" '<' . $@58 type_declaration '>' $@59
  721                                   | "block" '<' . $@60 optional_function_argument_list optional_function_type '>' $@61

    ':'       reduce using rule 719 ($@60)
    '>'       reduce using rule 719 ($@60)
    '('       reduce using rule 719 ($@60)
    $default  reduce using rule 716 ($@58)

    $@58  go to state 491
    $@60  go to state 492


State 354

  725 type_declaration_no_options_no_dim: "function" '<' . $@62 type_declaration '>' $@63
  728                                   | "function" '<' . $@64 optional_function_argument_list optional_function_type '>' $@65

    ':'       reduce using rule 726 ($@64)
    '>'       reduce using rule 726 ($@64)
    '('       reduce using rule 726 ($@64)
    $default  reduce using rule 723 ($@62)

    $@62  go to state 493
    $@64  go to state 494


State 355

  732 type_declaration_no_options_no_dim: "lambda" '<' . $@66 type_declaration '>' $@67
  735                                   | "lambda" '<' . $@68 optional_function_argument_list optional_function_type '>' $@69

    ':'       reduce using rule 733 ($@68)
    '>'       reduce using rule 733 ($@68)
    '('       reduce using rule 733 ($@68)
    $default  reduce using rule 730 ($@66)

    $@66  go to state 495
    $@68  go to state 496


State 356

  738 type_declaration_no_options_no_dim: "tuple" '<' . $@70 tuple_type_list '>' $@71

    $default  reduce using rule 736 ($@70)

    $@70  go to state 497


State 357

  741 type_declaration_no_options_no_dim: "variant" '<' . $@72 variant_type_list '>' $@73

    $default  reduce using rule 739 ($@72)

    $@72  go to state 498


State 358

  660 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 499
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 359

  687 type_declaration_no_options_no_dim: '$' name_in_namespace . '(' optional_expr_list ')'
  689                                   | '$' name_in_namespace . '<' $@49 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 500
    '('  shift, and go to state 501


State 360

  692 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "const" .

    $default  reduce using rule 692 (type_declaration_no_options_no_dim)


State 361

  697 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "implicit" .

    $default  reduce using rule 697 (type_declaration_no_options_no_dim)


State 362

  691 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "explicit" .

    $default  reduce using rule 691 (type_declaration_no_options_no_dim)


State 363

  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" . "const"
  700                                   | type_declaration_no_options_no_dim "==" . '&'

    "const"  shift, and go to state 502
    '&'      shift, and go to state 503


State 364

  705 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "??" .

    $default  reduce using rule 705 (type_declaration_no_options_no_dim)


State 365

  701 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '?' .

    $default  reduce using rule 701 (type_declaration_no_options_no_dim)


State 366

  694 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '&' .

    $default  reduce using rule 694 (type_declaration_no_options_no_dim)


State 367

  690 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' . '[' ']'
  693                                   | type_declaration_no_options_no_dim '-' . "const"
  695                                   | type_declaration_no_options_no_dim '-' . '&'
  698                                   | type_declaration_no_options_no_dim '-' . '#'

    "const"  shift, and go to state 504
    '&'      shift, and go to state 505
    '['      shift, and go to state 506
    '#'      shift, and go to state 507


State 368

  673 dim_list: '[' . expr ']'
  674         | '[' . ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    ']'                               shift, and go to state 508
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 509
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 369

  696 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '#' .

    $default  reduce using rule 696 (type_declaration_no_options_no_dim)


State 370

  675 dim_list: dim_list . '[' expr ']'
  676         | dim_list . '[' ']'
  678 type_declaration_no_options: type_declaration_no_options_no_dim dim_list .

    '['  shift, and go to state 510

    $default  reduce using rule 678 (type_declaration_no_options)


State 371

  743 type_declaration: type_declaration '|' . type_declaration_no_options
  744                 | type_declaration '|' . '#'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260
    '#'          shift, and go to state 511

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 512
    type_declaration_no_options_no_dim  go to state 267


State 372

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' . $@84 bitfield_alias_bits optional_commas $@85 '}'

    $default  reduce using rule 757 ($@84)

    $@84  go to state 513


State 373

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' . $@76 tuple_alias_type_list optional_semis $@77 '}'

    $default  reduce using rule 747 ($@76)

    $@76  go to state 514


State 374

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' . $@80 variant_alias_type_list optional_semis $@81 '}'

    $default  reduce using rule 752 ($@80)

    $@80  go to state 515


State 375

  194 function_name: "operator" "is" "name" .

    $default  reduce using rule 194 (function_name)


State 376

  195 function_name: "operator" "as" "name" .

    $default  reduce using rule 195 (function_name)


State 377

  188 function_name: "operator" "?." "name" .

    $default  reduce using rule 188 (function_name)


State 378

  183 function_name: "operator" "?[" ']' .

    $default  reduce using rule 183 (function_name)


State 379

  196 function_name: "operator" '?' "as" .
  197              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 516

    $default  reduce using rule 196 (function_name)


State 380

  186 function_name: "operator" '.' "name" .
  187              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 517

    $default  reduce using rule 186 (function_name)


State 381

  182 function_name: "operator" '[' ']' .

    $default  reduce using rule 182 (function_name)


State 382

  516 function_argument_declaration: "$a" . '(' expr ')'

    '('  shift, and go to state 518


State 383

  134 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 134 (optional_function_argument_list)


State 384

  515 function_argument_declaration: optional_field_annotation . kwd_let_var_or_nothing variable_declaration

    "let"  shift, and go to state 519
    "var"  shift, and go to state 520

    $default  reduce using rule 291 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 521


State 385

  517 function_argument_list: function_argument_declaration .

    $default  reduce using rule 517 (function_argument_list)


State 386

  135 optional_function_argument_list: '(' function_argument_list . ')'
  518 function_argument_list: function_argument_list . ';' function_argument_declaration

    ')'  shift, and go to state 522
    ';'  shift, and go to state 523


State 387

  137 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 524


State 388

  227 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 227 (function_declaration_header)


State 389

  236 expression_block: $@9 '{' . expressions $@10 '}' expression_block_finally

    $default  reduce using rule 257 (expressions)

    expressions  go to state 525


State 390

  649 enum_basic_type_declaration: "int" .

    $default  reduce using rule 649 (enum_basic_type_declaration)


State 391

  652 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 652 (enum_basic_type_declaration)


State 392

  655 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 655 (enum_basic_type_declaration)


State 393

  656 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 656 (enum_basic_type_declaration)


State 394

  650 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 650 (enum_basic_type_declaration)


State 395

  653 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 653 (enum_basic_type_declaration)


State 396

  651 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 651 (enum_basic_type_declaration)


State 397

  654 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 654 (enum_basic_type_declaration)


State 398

  590 optional_enum_basic_type_declaration: ':' enum_basic_type_declaration .

    $default  reduce using rule 590 (optional_enum_basic_type_declaration)


State 399

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas . '{' $@40 enum_list optional_commas $@41 '}'

    '{'  shift, and go to state 526


State 400

  605 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 527

    $default  reduce using rule 601 (optional_structure_parent)

    optional_structure_parent  go to state 528


State 401

  616 structure_declaration: optional_annotation_list $@42 class_or_struct optional_public_or_private_structure $@43 structure_name optional_emit_semis . $@44 optional_struct_variable_declaration_list

    $default  reduce using rule 615 ($@44)

    $@44  go to state 529


State 402

  568 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 530
    "name"  shift, and go to state 531

    let_variable_name_with_pos_list  go to state 532
    let_variable_declaration         go to state 533


State 403

  113 metadata_argument_list: '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 113 (metadata_argument_list)


State 404

  114 metadata_argument_list: metadata_argument_list '@' annotation_argument . optional_emit_semis

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 534


State 405

  550 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' . "name"

    "name"  shift, and go to state 535


State 406

  557 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' . type_declaration_no_options ';'
  558                                | global_let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr ';'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 536
    type_declaration_no_options_no_dim  go to state 267


State 407

  543 optional_ref: '&' .

    $default  reduce using rule 543 (optional_ref)


State 408

  559 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 540


State 409

  685 type_declaration_no_options_no_dim: "type" '<' $@47 . type_declaration '>' $@48

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 541


State 410

  708 type_declaration_no_options_no_dim: "array" '<' $@52 . type_declaration '>' $@53

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 542


State 411

  711 type_declaration_no_options_no_dim: "table" '<' $@54 . table_type_pair '>' $@55

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    table_type_pair                     go to state 543
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 544


State 412

  785 make_struct_decl: "struct" . '<' $@86 type_declaration_no_options '>' $@87 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 545


State 413

  788 make_struct_decl: "class" . '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 546


State 414

  399 expr: "true" .

    $default  reduce using rule 399 (expr)


State 415

  400 expr: "false" .

    $default  reduce using rule 400 (expr)


State 416

  275 expr_new: "new" . new_type_declaration
  276         | "new" . new_type_declaration '(' use_initializer ')'
  277         | "new" . new_type_declaration '(' expr_list ')'
  278         | "new" . new_type_declaration '(' make_struct_single ')'
  279         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  280         | "new" . make_decl

    "struct"       shift, and go to state 412
    "class"        shift, and go to state 413
    "array"        shift, and go to state 419
    "table"        shift, and go to state 421
    "fixed_array"  shift, and go to state 428
    "default"      shift, and go to state 429
    "tuple"        shift, and go to state 431
    "variant"      shift, and go to state 432
    "::"           shift, and go to state 55
    "name"         shift, and go to state 56
    '<'            shift, and go to state 547
    '['            shift, and go to state 456
    '{'            shift, and go to state 460

    name_in_namespace           go to state 261
    new_type_declaration        go to state 548
    structure_type_declaration  go to state 549
    make_decl                   go to state 550
    make_struct_decl            go to state 482
    make_tuple_call             go to state 483
    make_dim_decl               go to state 484
    make_table_decl             go to state 485
    array_comprehension         go to state 486


State 417

  315 expr_type_info: "typeinfo" . name_in_namespace '(' expr ')'
  316               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  317               | "typeinfo" . name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')'

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 551


State 418

  314 expr_type_decl: "type" . '<' $@19 type_declaration '>' $@20

    '<'  shift, and go to state 552


State 419

  804 make_dim_decl: "array" . "struct" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'
  807              | "array" . "tuple" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'
  810              | "array" . "variant" '<' $@100 type_declaration_no_options '>' $@101 '(' make_variant_dim ')'
  811              | "array" . '(' expr_list optional_comma ')'
  814              | "array" . '<' $@102 type_declaration_no_options '>' $@103 '(' optional_expr_list ')'

    "struct"   shift, and go to state 553
    "tuple"    shift, and go to state 554
    "variant"  shift, and go to state 555
    '<'        shift, and go to state 556
    '('        shift, and go to state 557


State 420

  393 expr: "null" .

    $default  reduce using rule 393 (expr)


State 421

  822 make_table_decl: "table" . '(' expr_map_tuple_list optional_comma ')'
  823                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  824                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 558
    '('  shift, and go to state 559


State 422

  443 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 560


State 423

  305 expr_cast: "cast" . '<' $@13 type_declaration_no_options '>' $@14 expr

    '<'  shift, and go to state 561


State 424

  308 expr_cast: "upcast" . '<' $@15 type_declaration_no_options '>' $@16 expr

    '<'  shift, and go to state 562


State 425

  444 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 563


State 426

  311 expr_cast: "reinterpret" . '<' $@17 type_declaration_no_options '>' $@18 expr

    '<'  shift, and go to state 564


State 427

  474 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 565


State 428

  815 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  818              | "fixed_array" . '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 566
    '('  shift, and go to state 567


State 429

  794 make_struct_decl: "default" . '<' $@92 type_declaration_no_options '>' $@93 use_initializer

    '<'  shift, and go to state 568


State 430

  648 basic_type_declaration: "bitfield" .

    $default  reduce using rule 648 (basic_type_declaration)


State 431

  797 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  800                | "tuple" . '<' $@94 type_declaration_no_options '>' $@95 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 569
    '('  shift, and go to state 570


State 432

  791 make_struct_decl: "variant" . '<' $@90 type_declaration_no_options '>' $@91 '(' make_variant_dim ')'

    '<'  shift, and go to state 571


State 433

  475 expr_generator: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  476               | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  477               | "generator" . '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    '<'  shift, and go to state 572


State 434

  429 expr: "++" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 573
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 435

  430 expr: "--" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 574
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 436

  478 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 575


State 437

  479 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 576


State 438

  480 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 577


State 439

  481 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 578


State 440

  482 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 579


State 441

  484 expr_mtag: "$c" . '(' expr ')' '(' ')'
  485          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 580


State 442

  483 expr_mtag: "..." .

    $default  reduce using rule 483 (expr_mtag)


State 443

  338 expr_numeric_const: "integer constant" .

    $default  reduce using rule 338 (expr_numeric_const)


State 444

  340 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 340 (expr_numeric_const)


State 445

  339 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 339 (expr_numeric_const)


State 446

  341 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 341 (expr_numeric_const)


State 447

  342 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 342 (expr_numeric_const)


State 448

  343 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 343 (expr_numeric_const)


State 449

  344 expr_numeric_const: "double constant" .

    $default  reduce using rule 344 (expr_numeric_const)


State 450

   36 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 33 (string_builder_body)

    string_builder_body  go to state 581


State 451

  406 expr: '-' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 582
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 452

  405 expr: '+' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 583
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 453

  442 expr: '*' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 584
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 454

  404 expr: '~' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 585
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 455

  403 expr: '!' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 586
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 456

  801 make_dim_decl: '[' . expr_list optional_comma ']'
  829 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  830                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 589
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 457

  433 expr: '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 591
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 458

  323 block_or_lambda: '$' .

    $default  reduce using rule 323 (block_or_lambda)


State 459

  324 block_or_lambda: '@' .
  325                | '@' . '@'
  370 func_addr_expr: '@' . '@' func_addr_name
  373               | '@' . '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  376               | '@' . '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  493 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 592

    $default  reduce using rule 324 (block_or_lambda)


State 460

  821 make_table_decl: '{' . expr_map_tuple_list optional_comma '}'
  831 array_comprehension: '{' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "for"                             shift, and go to state 593
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 594
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_map_tuple          go to state 595
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    expr_map_tuple_list     go to state 596
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 461

  397 expr: string_builder .

    $default  reduce using rule 397 (expr)


State 462

  396 expr: expr_reader .

    $default  reduce using rule 396 (expr)


State 463

  473 expr: expr_call_pipe .

    $default  reduce using rule 473 (expr)


State 464

  364 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  365                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  386 expr_call: name_in_namespace . '(' ')'
  387          | name_in_namespace . '(' "uninitialized" ')'
  388          | name_in_namespace . '(' make_struct_single ')'
  389          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  390          | name_in_namespace . '(' expr_list ')'
  394 expr: name_in_namespace .

    '('  shift, and go to state 597

    $default  reduce using rule 394 (expr)


State 465

  466 expr: expr_new .

    $default  reduce using rule 466 (expr)


State 466

  465 expr: expr_cast .

    $default  reduce using rule 465 (expr)


State 467

  464 expr: expr_type_decl .

    $default  reduce using rule 464 (expr)


State 468

  463 expr: expr_type_info .

    $default  reduce using rule 463 (expr)


State 469

  335 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '['  shift, and go to state 14

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 598


State 470

  469 expr: expr_full_block .

    $default  reduce using rule 469 (expr)


State 471

  395 expr: expr_numeric_const .

    $default  reduce using rule 395 (expr)


State 472

  468 expr: expr_named_call .

    $default  reduce using rule 468 (expr)


State 473

  467 expr: expr_method_call .

    $default  reduce using rule 467 (expr)


State 474

  440 expr: func_addr_expr .

    $default  reduce using rule 440 (expr)


State 475

  401 expr: expr_field .

    $default  reduce using rule 401 (expr)


State 476

  237 expr_call_pipe: expr_call . expr_full_block_assumed_piped
  441 expr: expr_call .

    '$'  shift, and go to state 458
    '@'  shift, and go to state 599
    '{'  shift, and go to state 600

    $default  reduce using rule 441 (expr)

    block_or_lambda                go to state 601
    expr_full_block_assumed_piped  go to state 602


State 477

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  686 type_declaration_no_options_no_dim: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 638


State 478

  445 expr: expr_generator .

    $default  reduce using rule 445 (expr)


State 479

  402 expr: expr_mtag .

    $default  reduce using rule 402 (expr)


State 480

  391 expr_call: basic_type_declaration . '(' ')'
  392          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 639


State 481

  398 expr: make_decl .

    $default  reduce using rule 398 (expr)


State 482

  760 make_decl: make_struct_decl .

    $default  reduce using rule 760 (make_decl)


State 483

  764 make_decl: make_tuple_call .

    $default  reduce using rule 764 (make_decl)


State 484

  761 make_decl: make_dim_decl .

    $default  reduce using rule 761 (make_decl)


State 485

  762 make_decl: make_table_decl .

    $default  reduce using rule 762 (make_decl)


State 486

  763 make_decl: array_comprehension .

    $default  reduce using rule 763 (make_decl)


State 487

  714 type_declaration_no_options_no_dim: "iterator" '<' $@56 . type_declaration '>' $@57

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 640


State 488

  704 type_declaration_no_options_no_dim: "smart_ptr" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 641


State 489

  659 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 642


State 490

  668 bitfield_type_declaration: "bitfield" '<' $@45 . bitfield_bits '>' $@46

    "name"  shift, and go to state 643

    bitfield_bits  go to state 644


State 491

  718 type_declaration_no_options_no_dim: "block" '<' $@58 . type_declaration '>' $@59

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 645


State 492

  721 type_declaration_no_options_no_dim: "block" '<' $@60 . optional_function_argument_list optional_function_type '>' $@61

    '('  shift, and go to state 327

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 646


State 493

  725 type_declaration_no_options_no_dim: "function" '<' $@62 . type_declaration '>' $@63

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 647


State 494

  728 type_declaration_no_options_no_dim: "function" '<' $@64 . optional_function_argument_list optional_function_type '>' $@65

    '('  shift, and go to state 327

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 648


State 495

  732 type_declaration_no_options_no_dim: "lambda" '<' $@66 . type_declaration '>' $@67

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 649


State 496

  735 type_declaration_no_options_no_dim: "lambda" '<' $@68 . optional_function_argument_list optional_function_type '>' $@69

    '('  shift, and go to state 327

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 650


State 497

  738 type_declaration_no_options_no_dim: "tuple" '<' $@70 . tuple_type_list '>' $@71

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 651
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    tuple_type                          go to state 652
    tuple_type_list                     go to state 653
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 654


State 498

  741 type_declaration_no_options_no_dim: "variant" '<' $@72 . variant_type_list '>' $@73

    "name"  shift, and go to state 655

    variant_type       go to state 656
    variant_type_list  go to state 657


State 499

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  660 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 658


State 500

  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' . $@49 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 688 ($@49)

    $@49  go to state 659


State 501

  687 type_declaration_no_options_no_dim: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 260 (optional_expr_list)

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    optional_expr_list      go to state 660
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 661
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 502

  699 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" "const" .

    $default  reduce using rule 699 (type_declaration_no_options_no_dim)


State 503

  700 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim "==" '&' .

    $default  reduce using rule 700 (type_declaration_no_options_no_dim)


State 504

  693 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' "const" .

    $default  reduce using rule 693 (type_declaration_no_options_no_dim)


State 505

  695 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '&' .

    $default  reduce using rule 695 (type_declaration_no_options_no_dim)


State 506

  690 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' . ']'

    ']'  shift, and go to state 662


State 507

  698 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '#' .

    $default  reduce using rule 698 (type_declaration_no_options_no_dim)


State 508

  674 dim_list: '[' ']' .

    $default  reduce using rule 674 (dim_list)


State 509

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  673 dim_list: '[' expr . ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 663


State 510

  675 dim_list: dim_list '[' . expr ']'
  676         | dim_list '[' . ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    ']'                               shift, and go to state 664
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 665
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 511

  744 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 744 (type_declaration)


State 512

  743 type_declaration: type_declaration '|' type_declaration_no_options .

    $default  reduce using rule 743 (type_declaration)


State 513

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 . bitfield_alias_bits optional_commas $@85 '}'

    "name"  shift, and go to state 666

    $default  reduce using rule 663 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 667


State 514

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 . tuple_alias_type_list optional_semis $@77 '}'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 651
    '$'          shift, and go to state 260

    $default  reduce using rule 523 (tuple_alias_type_list)

    name_in_namespace                   go to state 261
    tuple_type                          go to state 668
    tuple_alias_type_list               go to state 669
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 654


State 515

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 . variant_alias_type_list optional_semis $@81 '}'

    "name"  shift, and go to state 655

    $default  reduce using rule 529 (variant_alias_type_list)

    variant_type             go to state 670
    variant_alias_type_list  go to state 671


State 516

  197 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 197 (function_name)


State 517

  187 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 187 (function_name)


State 518

  516 function_argument_declaration: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 672
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 519

  289 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 289 (kwd_let_var_or_nothing)


State 520

  290 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 290 (kwd_let_var_or_nothing)


State 521

  515 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing . variable_declaration

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_declaration         go to state 675
    variable_name_with_pos_list  go to state 676


State 522

  135 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 135 (optional_function_argument_list)


State 523

  518 function_argument_list: function_argument_list ';' . function_argument_declaration

    "$a"  shift, and go to state 382
    '@'   shift, and go to state 212

    $default  reduce using rule 494 (optional_field_annotation)

    metadata_argument_list         go to state 213
    optional_field_annotation      go to state 384
    function_argument_declaration  go to state 677


State 524

  137 optional_function_type: ':' type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 137 (optional_function_type)


State 525

  236 expression_block: $@9 '{' expressions . $@10 '}' expression_block_finally
  258 expressions: expressions . expression_any
  259            | expressions . error

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 420
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 421
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 422
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 425
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 426
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "emitted ;"                       shift, and go to state 690
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    ';'                               shift, and go to state 691
    '{'                               shift, and go to state 460

    "while"      reduce using rule 87 ($@4)
    "if"         reduce using rule 81 ($@2)
    "static_if"  reduce using rule 81 ($@2)
    "for"        reduce using rule 84 ($@3)
    "with"       reduce using rule 89 ($@5)
    '}'          reduce using rule 235 ($@10)

    SEMICOLON                         go to state 692
    string_builder                    go to state 461
    expr_reader                       go to state 462
    expression_label                  go to state 693
    expression_goto                   go to state 694
    expression_if_one_liner           go to state 695
    expression_if_then_else           go to state 696
    $@2                               go to state 697
    expression_if_then_else_oneliner  go to state 698
    expression_for_loop               go to state 699
    $@3                               go to state 700
    expression_unsafe                 go to state 701
    expression_while_loop             go to state 702
    $@4                               go to state 703
    expression_with                   go to state 704
    $@5                               go to state 705
    expression_with_alias             go to state 706
    $@10                              go to state 707
    expr_call_pipe                    go to state 463
    expression_any                    go to state 708
    name_in_namespace                 go to state 464
    expression_delete                 go to state 709
    expr_new                          go to state 465
    expression_break                  go to state 710
    expression_continue               go to state 711
    expression_return                 go to state 712
    expression_yield                  go to state 713
    expression_try_catch              go to state 714
    kwd_let                           go to state 715
    expression_let                    go to state 716
    expr_cast                         go to state 466
    expr_type_decl                    go to state 467
    expr_type_info                    go to state 468
    block_or_lambda                   go to state 469
    expr_full_block                   go to state 470
    expr_numeric_const                go to state 471
    expr_assign                       go to state 717
    expr_named_call                   go to state 472
    expr_method_call                  go to state 473
    func_addr_expr                    go to state 474
    expr_field                        go to state 475
    expr_call                         go to state 476
    expr                              go to state 718
    expr_generator                    go to state 478
    expr_mtag                         go to state 479
    basic_type_declaration            go to state 480
    make_decl                         go to state 481
    make_struct_decl                  go to state 482
    make_tuple_call                   go to state 483
    make_dim_decl                     go to state 484
    make_table_decl                   go to state 485
    array_comprehension               go to state 486


State 526

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' . $@40 enum_list optional_commas $@41 '}'

    $default  reduce using rule 598 ($@40)

    $@40  go to state 719


State 527

  602 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 55
    "name"  shift, and go to state 56

    name_in_namespace  go to state 720


State 528

  605 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 605 (structure_name)


State 529

  616 structure_declaration: optional_annotation_list $@42 class_or_struct optional_public_or_private_structure $@43 structure_name optional_emit_semis $@44 . optional_struct_variable_declaration_list

    '{'  shift, and go to state 721

    $default  reduce using rule 611 (optional_struct_variable_declaration_list)

    optional_struct_variable_declaration_list  go to state 722


State 530

  545 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 723


State 531

  544 let_variable_name_with_pos_list: "name" .
  546                                | "name" . "aka" "name"

    "aka"  shift, and go to state 724

    $default  reduce using rule 544 (let_variable_name_with_pos_list)


State 532

  547 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  548                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  554 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options SEMICOLON
  555                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  556                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 725
    ':'  shift, and go to state 726
    '&'  shift, and go to state 407

    $default  reduce using rule 542 (optional_ref)

    optional_ref  go to state 727


State 533

  568 global_variable_declaration_list: global_variable_declaration_list $@36 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 568 (global_variable_declaration_list)


State 534

  114 metadata_argument_list: metadata_argument_list '@' annotation_argument optional_emit_semis .

    $default  reduce using rule 114 (metadata_argument_list)


State 535

  550 global_let_variable_name_with_pos_list: global_let_variable_name_with_pos_list ',' "name" .

    $default  reduce using rule 550 (global_let_variable_name_with_pos_list)


State 536

  557 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options . ';'
  558                                | global_let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr ';'

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539
    ';'   shift, and go to state 728

    copy_or_move_or_clone  go to state 729


State 537

  540 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 540 (copy_or_move_or_clone)


State 538

  541 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 541 (copy_or_move_or_clone)


State 539

  539 copy_or_move_or_clone: '=' .

    $default  reduce using rule 539 (copy_or_move_or_clone)


State 540

  559 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 730
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 541

  685 type_declaration_no_options_no_dim: "type" '<' $@47 type_declaration . '>' $@48
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 731


State 542

  708 type_declaration_no_options_no_dim: "array" '<' $@52 type_declaration . '>' $@53
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 732


State 543

  711 type_declaration_no_options_no_dim: "table" '<' $@54 table_type_pair . '>' $@55

    '>'  shift, and go to state 733


State 544

  671 table_type_pair: type_declaration .
  672                | type_declaration . c_or_s type_declaration
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '|'          shift, and go to state 371
    ';'          shift, and go to state 691

    $default  reduce using rule 671 (table_type_pair)

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 738


State 545

  785 make_struct_decl: "struct" '<' . $@86 type_declaration_no_options '>' $@87 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 783 ($@86)

    $@86  go to state 739


State 546

  788 make_struct_decl: "class" '<' . $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 786 ($@88)

    $@88  go to state 740


State 547

  273 new_type_declaration: '<' . $@11 type_declaration '>' $@12

    $default  reduce using rule 271 ($@11)

    $@11  go to state 741


State 548

  275 expr_new: "new" new_type_declaration .
  276         | "new" new_type_declaration . '(' use_initializer ')'
  277         | "new" new_type_declaration . '(' expr_list ')'
  278         | "new" new_type_declaration . '(' make_struct_single ')'
  279         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 742

    $default  reduce using rule 275 (expr_new)


State 549

  274 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 274 (new_type_declaration)


State 550

  280 expr_new: "new" make_decl .

    $default  reduce using rule 280 (expr_new)


State 551

  315 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  316               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  317               | "typeinfo" name_in_namespace . '<' "name" c_or_s "name" '>' '(' expr ')'

    '<'  shift, and go to state 743
    '('  shift, and go to state 744


State 552

  314 expr_type_decl: "type" '<' . $@19 type_declaration '>' $@20

    $default  reduce using rule 312 ($@19)

    $@19  go to state 745


State 553

  804 make_dim_decl: "array" "struct" . '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 746


State 554

  807 make_dim_decl: "array" "tuple" . '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 747


State 555

  810 make_dim_decl: "array" "variant" . '<' $@100 type_declaration_no_options '>' $@101 '(' make_variant_dim ')'

    '<'  shift, and go to state 748


State 556

  814 make_dim_decl: "array" '<' . $@102 type_declaration_no_options '>' $@103 '(' optional_expr_list ')'

    $default  reduce using rule 812 ($@102)

    $@102  go to state 749


State 557

  811 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 750
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 558

  823 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  824                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 751
    type_declaration_no_options_no_dim  go to state 267


State 559

  822 make_table_decl: "table" '(' . expr_map_tuple_list optional_comma ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 594
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_map_tuple          go to state 595
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    expr_map_tuple_list     go to state 752
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 560

  443 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 753
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 561

  305 expr_cast: "cast" '<' . $@13 type_declaration_no_options '>' $@14 expr

    $default  reduce using rule 303 ($@13)

    $@13  go to state 754


State 562

  308 expr_cast: "upcast" '<' . $@15 type_declaration_no_options '>' $@16 expr

    $default  reduce using rule 306 ($@15)

    $@15  go to state 755


State 563

  444 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 756
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 564

  311 expr_cast: "reinterpret" '<' . $@17 type_declaration_no_options '>' $@18 expr

    $default  reduce using rule 309 ($@17)

    $@17  go to state 757


State 565

  474 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 758
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 566

  818 make_dim_decl: "fixed_array" '<' . $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 816 ($@104)

    $@104  go to state 759


State 567

  815 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 760
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 568

  794 make_struct_decl: "default" '<' . $@92 type_declaration_no_options '>' $@93 use_initializer

    $default  reduce using rule 792 ($@92)

    $@92  go to state 761


State 569

  800 make_tuple_call: "tuple" '<' . $@94 type_declaration_no_options '>' $@95 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 798 ($@94)

    $@94  go to state 762


State 570

  797 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 763
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 571

  791 make_struct_decl: "variant" '<' . $@90 type_declaration_no_options '>' $@91 '(' make_variant_dim ')'

    $default  reduce using rule 789 ($@90)

    $@90  go to state 764


State 572

  475 expr_generator: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  476               | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'
  477               | "generator" '<' . type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 765
    type_declaration_no_options_no_dim  go to state 267


State 573

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  429     | "++" expr .
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 429 (expr)


State 574

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  430     | "--" expr .
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 430 (expr)


State 575

  478 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 766
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 576

  479 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 767
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 577

  480 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 768
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 578

  481 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 769
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 579

  482 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 770
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 580

  484 expr_mtag: "$c" '(' . expr ')' '(' ')'
  485          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 771
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 581

   34 string_builder_body: string_builder_body . character_sequence
   35                    | string_builder_body . "{" expr "}"
   36 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 154
    STRING_CHARACTER_ESC  shift, and go to state 155
    "end of the string"   shift, and go to state 772
    "{"                   shift, and go to state 773

    character_sequence  go to state 774


State 582

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  406 expr: '-' expr .
  407     | expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 406 (expr)


State 583

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  405 expr: '+' expr .
  407     | expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 405 (expr)


State 584

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  442     | '*' expr .
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 442 (expr)


State 585

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  404 expr: '~' expr .
  407     | expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 404 (expr)


State 586

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  403 expr: '!' expr .
  407     | expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 403 (expr)


State 587

  829 array_comprehension: '[' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 775


State 588

  830 array_comprehension: '[' "iterator" . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "for"  shift, and go to state 776


State 589

  319 expr_list: expr_list . ',' expr
  801 make_dim_decl: '[' expr_list . optional_comma ']'

    ','  shift, and go to state 777

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 778


State 590

  318 expr_list: expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 318 (expr_list)


State 591

  319 expr_list: expr_list . ',' expr
  433 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 779


State 592

  325 block_or_lambda: '@' '@' .
  370 func_addr_expr: '@' '@' . func_addr_name
  373               | '@' '@' . '<' $@21 type_declaration_no_options '>' $@22 func_addr_name
  376               | '@' '@' . '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name
  493 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 780
    "$c"    shift, and go to state 781
    "name"  shift, and go to state 56
    '<'     shift, and go to state 782

    $default  reduce using rule 325 (block_or_lambda)

    name_in_namespace  go to state 783
    func_addr_name     go to state 784


State 593

  831 array_comprehension: '{' "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    '('  shift, and go to state 785


State 594

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  795 make_map_tuple: expr . "=>" expr
  796               | expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "=>"   shift, and go to state 786
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 796 (make_map_tuple)


State 595

  819 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 819 (expr_map_tuple_list)


State 596

  820 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  821 make_table_decl: '{' expr_map_tuple_list . optional_comma '}'

    ','  shift, and go to state 787

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 788


State 597

  364 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  365                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  386 expr_call: name_in_namespace '(' . ')'
  387          | name_in_namespace '(' . "uninitialized" ')'
  388          | name_in_namespace '(' . make_struct_single ')'
  389          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  390          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "uninitialized"                   shift, and go to state 789
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 792
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 793
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 794
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_fields      go to state 795
    make_struct_single      go to state 796
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 598

  335 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    "capture"  shift, and go to state 797

    $default  reduce using rule 333 (optional_capture_list)

    optional_capture_list  go to state 798


State 599

  324 block_or_lambda: '@' .
  325                | '@' . '@'

    '@'  shift, and go to state 799

    $default  reduce using rule 324 (block_or_lambda)


State 600

  337 expr_full_block_assumed_piped: '{' . expressions '}'

    $default  reduce using rule 257 (expressions)

    expressions  go to state 800


State 601

  336 expr_full_block_assumed_piped: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '['  shift, and go to state 14

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 801


State 602

  237 expr_call_pipe: expr_call expr_full_block_assumed_piped .

    $default  reduce using rule 237 (expr_call_pipe)


State 603

  450 expr: expr "is" . "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr "is" . basic_type_declaration
  452     | expr "is" . "name"
  492 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 802
    "bool"      shift, and go to state 226
    "void"      shift, and go to state 227
    "string"    shift, and go to state 228
    "int"       shift, and go to state 230
    "int2"      shift, and go to state 231
    "int3"      shift, and go to state 232
    "int4"      shift, and go to state 233
    "uint"      shift, and go to state 234
    "bitfield"  shift, and go to state 430
    "uint2"     shift, and go to state 236
    "uint3"     shift, and go to state 237
    "uint4"     shift, and go to state 238
    "float"     shift, and go to state 239
    "float2"    shift, and go to state 240
    "float3"    shift, and go to state 241
    "float4"    shift, and go to state 242
    "range"     shift, and go to state 243
    "urange"    shift, and go to state 244
    "range64"   shift, and go to state 245
    "urange64"  shift, and go to state 246
    "int64"     shift, and go to state 248
    "uint64"    shift, and go to state 249
    "double"    shift, and go to state 250
    "int8"      shift, and go to state 253
    "uint8"     shift, and go to state 254
    "int16"     shift, and go to state 255
    "uint16"    shift, and go to state 256
    "$f"        shift, and go to state 803
    "name"      shift, and go to state 804

    basic_type_declaration  go to state 805


State 604

  453 expr: expr "as" . "name"
  456     | expr "as" . "type" '<' $@29 type_declaration '>' $@30
  457     | expr "as" . basic_type_declaration
  490 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 806
    "bool"      shift, and go to state 226
    "void"      shift, and go to state 227
    "string"    shift, and go to state 228
    "int"       shift, and go to state 230
    "int2"      shift, and go to state 231
    "int3"      shift, and go to state 232
    "int4"      shift, and go to state 233
    "uint"      shift, and go to state 234
    "bitfield"  shift, and go to state 430
    "uint2"     shift, and go to state 236
    "uint3"     shift, and go to state 237
    "uint4"     shift, and go to state 238
    "float"     shift, and go to state 239
    "float2"    shift, and go to state 240
    "float3"    shift, and go to state 241
    "float4"    shift, and go to state 242
    "range"     shift, and go to state 243
    "urange"    shift, and go to state 244
    "range64"   shift, and go to state 245
    "urange64"  shift, and go to state 246
    "int64"     shift, and go to state 248
    "uint64"    shift, and go to state 249
    "double"    shift, and go to state 250
    "int8"      shift, and go to state 253
    "uint8"     shift, and go to state 254
    "int16"     shift, and go to state 255
    "uint16"    shift, and go to state 256
    "$f"        shift, and go to state 807
    "name"      shift, and go to state 808

    basic_type_declaration  go to state 809


State 605

  407 expr: expr "<<" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 810
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 606

  408 expr: expr ">>" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 811
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 607

  431 expr: expr "++" .

    $default  reduce using rule 431 (expr)


State 608

  432 expr: expr "--" .

    $default  reduce using rule 432 (expr)


State 609

  420 expr: expr "<=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 812
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 610

  421 expr: expr ">=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 813
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 611

  418 expr: expr "==" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 814
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 612

  419 expr: expr "!=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 815
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 613

  366 expr_method_call: expr "->" . "name" '(' ')'
  367                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 816


State 614

  446 expr: expr "??" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 817
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 615

  438 expr: expr "?." . "name"
  487 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 818
    "name"  shift, and go to state 819


State 616

  436 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 820
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 617

  470 expr: expr "<|" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 821
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 618

  471 expr: expr "|>" . expr
  472     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 822
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 823
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 619

  409 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 824
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 620

  410 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 825
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 621

  425 expr: expr "&&" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 826
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 622

  426 expr: expr "||" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 827
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 623

  427 expr: expr "^^" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 828
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 624

  428 expr: expr ".." . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 829
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 625

  447 expr: expr '?' . expr ':' expr
  458     | expr '?' . "as" "name"
  461     | expr '?' . "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr '?' . "as" basic_type_declaration
  491 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "as"                              shift, and go to state 830
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 831
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 626

  423 expr: expr '|' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 832
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 627

  424 expr: expr '^' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 833
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 628

  422 expr: expr '&' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 834
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 629

  416 expr: expr '<' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 835
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 630

  417 expr: expr '>' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 836
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 631

  412 expr: expr '-' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 837
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 632

  411 expr: expr '+' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 838
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 633

  413 expr: expr '*' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 839
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 634

  414 expr: expr '/' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 840
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 635

  415 expr: expr '%' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 841
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 636

  377 expr_field: expr '.' . "name"
  378           | expr '.' . '.' "name"
  379           | expr '.' . "name" '(' ')'
  380           | expr '.' . "name" '(' expr_list ')'
  381           | expr '.' . basic_type_declaration '(' ')'
  382           | expr '.' . basic_type_declaration '(' expr_list ')'
  385           | expr '.' . $@25 error $@26
  435 expr: expr '.' . '[' expr ']'
  437     | expr '.' . "?[" expr ']'
  439     | expr '.' . "?." "name"
  486 expr_mtag: expr '.' . "$f" '(' expr ')'
  488          | expr '.' . '.' "$f" '(' expr ')'
  489          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 226
    "void"      shift, and go to state 227
    "string"    shift, and go to state 228
    "int"       shift, and go to state 230
    "int2"      shift, and go to state 231
    "int3"      shift, and go to state 232
    "int4"      shift, and go to state 233
    "uint"      shift, and go to state 234
    "bitfield"  shift, and go to state 430
    "uint2"     shift, and go to state 236
    "uint3"     shift, and go to state 237
    "uint4"     shift, and go to state 238
    "float"     shift, and go to state 239
    "float2"    shift, and go to state 240
    "float3"    shift, and go to state 241
    "float4"    shift, and go to state 242
    "range"     shift, and go to state 243
    "urange"    shift, and go to state 244
    "range64"   shift, and go to state 245
    "urange64"  shift, and go to state 246
    "int64"     shift, and go to state 248
    "uint64"    shift, and go to state 249
    "double"    shift, and go to state 250
    "int8"      shift, and go to state 253
    "uint8"     shift, and go to state 254
    "int16"     shift, and go to state 255
    "uint16"    shift, and go to state 256
    "?."        shift, and go to state 842
    "?["        shift, and go to state 843
    "$f"        shift, and go to state 844
    "name"      shift, and go to state 845
    '.'         shift, and go to state 846
    '['         shift, and go to state 847

    $default  reduce using rule 383 ($@25)

    $@25                    go to state 848
    basic_type_declaration  go to state 849


State 637

  434 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 850
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 638

  686 type_declaration_no_options_no_dim: "typedecl" '(' expr ')' .

    $default  reduce using rule 686 (type_declaration_no_options_no_dim)


State 639

  391 expr_call: basic_type_declaration '(' . ')'
  392          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 851
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 852
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 640

  714 type_declaration_no_options_no_dim: "iterator" '<' $@56 type_declaration . '>' $@57
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 853


State 641

  704 type_declaration_no_options_no_dim: "smart_ptr" '<' $@50 type_declaration . '>' $@51
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 854


State 642

  659 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 659 (auto_type_declaration)


State 643

  661 bitfield_bits: "name" .

    $default  reduce using rule 661 (bitfield_bits)


State 644

  662 bitfield_bits: bitfield_bits . ';' "name"
  668 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits . '>' $@46

    '>'  shift, and go to state 855
    ';'  shift, and go to state 856


State 645

  718 type_declaration_no_options_no_dim: "block" '<' $@58 type_declaration . '>' $@59
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 857


State 646

  721 type_declaration_no_options_no_dim: "block" '<' $@60 optional_function_argument_list . optional_function_type '>' $@61

    ':'  shift, and go to state 387

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 858


State 647

  725 type_declaration_no_options_no_dim: "function" '<' $@62 type_declaration . '>' $@63
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 859


State 648

  728 type_declaration_no_options_no_dim: "function" '<' $@64 optional_function_argument_list . optional_function_type '>' $@65

    ':'  shift, and go to state 387

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 860


State 649

  732 type_declaration_no_options_no_dim: "lambda" '<' $@66 type_declaration . '>' $@67
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 861


State 650

  735 type_declaration_no_options_no_dim: "lambda" '<' $@68 optional_function_argument_list . optional_function_type '>' $@69

    ':'  shift, and go to state 387

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 862


State 651

  266 name_in_namespace: "name" .
  267                  | "name" . "::" "name"
  520 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 93
    ':'   shift, and go to state 863

    $default  reduce using rule 266 (name_in_namespace)


State 652

  521 tuple_type_list: tuple_type .

    $default  reduce using rule 521 (tuple_type_list)


State 653

  522 tuple_type_list: tuple_type_list . c_or_s tuple_type
  738 type_declaration_no_options_no_dim: "tuple" '<' $@70 tuple_type_list . '>' $@71

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 864
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 865


State 654

  519 tuple_type: type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 519 (tuple_type)


State 655

  526 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 866


State 656

  527 variant_type_list: variant_type .

    $default  reduce using rule 527 (variant_type_list)


State 657

  528 variant_type_list: variant_type_list . c_or_s variant_type
  741 type_declaration_no_options_no_dim: "variant" '<' $@72 variant_type_list . '>' $@73

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 867
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 868


State 658

  660 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 660 (auto_type_declaration)


State 659

  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@49 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    type_declaration_no_options_list    go to state 869
    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 870


State 660

  687 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 871


State 661

  261 optional_expr_list: expr_list . optional_comma
  319 expr_list: expr_list . ',' expr

    ','  shift, and go to state 777

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 872


State 662

  690 type_declaration_no_options_no_dim: type_declaration_no_options_no_dim '-' '[' ']' .

    $default  reduce using rule 690 (type_declaration_no_options_no_dim)


State 663

  673 dim_list: '[' expr ']' .

    $default  reduce using rule 673 (dim_list)


State 664

  676 dim_list: dim_list '[' ']' .

    $default  reduce using rule 676 (dim_list)


State 665

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  675 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 873


State 666

  664 bitfield_alias_bits: "name" .

    $default  reduce using rule 664 (bitfield_alias_bits)


State 667

  665 bitfield_alias_bits: bitfield_alias_bits . commas "name"
  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits . optional_commas $@85 '}'

    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 591 (optional_commas)

    COMMA            go to state 874
    commas           go to state 875
    optional_commas  go to state 876


State 668

  524 tuple_alias_type_list: tuple_type .

    $default  reduce using rule 524 (tuple_alias_type_list)


State 669

  525 tuple_alias_type_list: tuple_alias_type_list . semis tuple_type
  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list . optional_semis $@77 '}'

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 877
    semis           go to state 878
    optional_semis  go to state 879


State 670

  530 variant_alias_type_list: variant_type .

    $default  reduce using rule 530 (variant_alias_type_list)


State 671

  531 variant_alias_type_list: variant_alias_type_list . semis variant_type
  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list . optional_semis $@81 '}'

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 79 (optional_semis)

    SEMICOLON       go to state 877
    semis           go to state 880
    optional_semis  go to state 881


State 672

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  516 function_argument_declaration: "$a" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 882


State 673

  618 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 883


State 674

  617 variable_name_with_pos_list: "name" .
  619                            | "name" . "aka" "name"

    "aka"  shift, and go to state 884

    $default  reduce using rule 617 (variable_name_with_pos_list)


State 675

  515 function_argument_declaration: optional_field_annotation kwd_let_var_or_nothing variable_declaration .

    $default  reduce using rule 515 (function_argument_declaration)


State 676

  534 variable_declaration: variable_name_with_pos_list .
  535                     | variable_name_with_pos_list . '&'
  536                     | variable_name_with_pos_list . ':' type_declaration
  537                     | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  538                     | variable_name_with_pos_list . copy_or_move expr
  620 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  621                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 885
    ','   shift, and go to state 886
    '='   shift, and go to state 887
    ':'   shift, and go to state 888
    '&'   shift, and go to state 889

    $default  reduce using rule 534 (variable_declaration)

    copy_or_move  go to state 890


State 677

  518 function_argument_list: function_argument_list ';' function_argument_declaration .

    $default  reduce using rule 518 (function_argument_list)


State 678

  259 expressions: expressions error .

    $default  reduce using rule 259 (expressions)


State 679

  283 expression_return: "return" .
  284                  | "return" . expr
  285                  | "return" . "<-" expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 891
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 283 (expression_return)

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 892
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 680

  281 expression_break: "break" .

    $default  reduce using rule 281 (expression_break)


State 681

  288 expression_try_catch: "try" . expression_block "recover" expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 893
    $@9               go to state 330


State 682

  269 expression_delete: "delete" . expr
  270                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "explicit"                        shift, and go to state 894
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 895
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 683

   91 expression_with_alias: "assume" . "name" '=' expr

    "name"  shift, and go to state 896


State 684

  282 expression_continue: "continue" .

    $default  reduce using rule 282 (expression_continue)


State 685

  256 expression_any: "pass" . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 897


State 686

   56 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 898


State 687

   57 expression_goto: "goto" . "label" "integer constant"
   58                | "goto" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "label"                           shift, and go to state 899
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 900
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 688

   86 expression_unsafe: "unsafe" . optional_emit_semis expression_block
  474 expr: "unsafe" . '(' expr ')'

    "emitted ;"  shift, and go to state 171
    '('          shift, and go to state 565

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 901


State 689

  286 expression_yield: "yield" . expr
  287                 | "yield" . "<-" expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 902
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 903
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 690

   19 SEMICOLON: "emitted ;" .

    $default  reduce using rule 19 (SEMICOLON)


State 691

   18 SEMICOLON: ';' .

    $default  reduce using rule 18 (SEMICOLON)


State 692

  238 expression_any: SEMICOLON .

    $default  reduce using rule 238 (expression_any)


State 693

  254 expression_any: expression_label . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 904


State 694

  255 expression_any: expression_goto . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 905


State 695

   83 expression_if_then_else_oneliner: expression_if_one_liner . "if" '(' expr ')' expression_else_one_liner SEMICOLON

    "if"  shift, and go to state 906


State 696

  251 expression_any: expression_if_then_else .

    $default  reduce using rule 251 (expression_any)


State 697

   82 expression_if_then_else: $@2 . if_or_static_if '(' expr ')' optional_emit_semis expression_block expression_else

    "if"         shift, and go to state 907
    "static_if"  shift, and go to state 908

    if_or_static_if  go to state 909


State 698

  252 expression_any: expression_if_then_else_oneliner .

    $default  reduce using rule 252 (expression_any)


State 699

  246 expression_any: expression_for_loop .

    $default  reduce using rule 246 (expression_any)


State 700

   85 expression_for_loop: $@3 . "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "for"  shift, and go to state 910


State 701

  243 expression_any: expression_unsafe .

    $default  reduce using rule 243 (expression_any)


State 702

  242 expression_any: expression_while_loop .

    $default  reduce using rule 242 (expression_any)


State 703

   88 expression_while_loop: $@4 . "while" '(' expr ')' optional_emit_semis expression_block

    "while"  shift, and go to state 911


State 704

  244 expression_any: expression_with .

    $default  reduce using rule 244 (expression_any)


State 705

   90 expression_with: $@5 . "with" '(' expr ')' optional_emit_semis expression_block

    "with"  shift, and go to state 912


State 706

  245 expression_any: expression_with_alias . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 913


State 707

  236 expression_block: $@9 '{' expressions $@10 . '}' expression_block_finally

    '}'  shift, and go to state 914


State 708

  258 expressions: expressions expression_any .

    $default  reduce using rule 258 (expressions)


State 709

  240 expression_any: expression_delete . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 915


State 710

   75 expression_if_one_liner: expression_break .
  247 expression_any: expression_break . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 75 (expression_if_one_liner)

    SEMICOLON  go to state 916


State 711

   76 expression_if_one_liner: expression_continue .
  248 expression_any: expression_continue . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 76 (expression_if_one_liner)

    SEMICOLON  go to state 917


State 712

   73 expression_if_one_liner: expression_return .
  249 expression_any: expression_return . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 73 (expression_if_one_liner)

    SEMICOLON  go to state 918


State 713

   74 expression_if_one_liner: expression_yield .
  250 expression_any: expression_yield . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 74 (expression_if_one_liner)

    SEMICOLON  go to state 919


State 714

  253 expression_any: expression_try_catch .

    $default  reduce using rule 253 (expression_any)


State 715

  300 expression_let: kwd_let . optional_in_scope let_variable_declaration
  301               | kwd_let . optional_in_scope tuple_expansion_variable_declaration
  302               | kwd_let . optional_in_scope '{' variable_declaration_list '}'

    "inscope"  shift, and go to state 920

    $default  reduce using rule 295 (optional_in_scope)

    optional_in_scope  go to state 921


State 716

  241 expression_any: expression_let .

    $default  reduce using rule 241 (expression_any)


State 717

  239 expression_any: expr_assign . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 922


State 718

   72 expression_if_one_liner: expr .
  345 expr_assign: expr .
  346            | expr . '=' expr
  347            | expr . "<-" expr
  348            | expr . ":=" expr
  349            | expr . "&=" expr
  350            | expr . "|=" expr
  351            | expr . "^=" expr
  352            | expr . "&&=" expr
  353            | expr . "||=" expr
  354            | expr . "^^=" expr
  355            | expr . "+=" expr
  356            | expr . "-=" expr
  357            | expr . "*=" expr
  358            | expr . "/=" expr
  359            | expr . "%=" expr
  360            | expr . "<<=" expr
  361            | expr . ">>=" expr
  362            | expr . "<<<=" expr
  363            | expr . ">>>=" expr
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 603
    "as"    shift, and go to state 604
    "+="    shift, and go to state 923
    "-="    shift, and go to state 924
    "/="    shift, and go to state 925
    "*="    shift, and go to state 926
    "%="    shift, and go to state 927
    "&="    shift, and go to state 928
    "|="    shift, and go to state 929
    "^="    shift, and go to state 930
    "<<"    shift, and go to state 605
    ">>"    shift, and go to state 606
    "++"    shift, and go to state 607
    "--"    shift, and go to state 608
    "<="    shift, and go to state 609
    "<<="   shift, and go to state 931
    ">>="   shift, and go to state 932
    ">="    shift, and go to state 610
    "=="    shift, and go to state 611
    "!="    shift, and go to state 612
    "->"    shift, and go to state 613
    "<-"    shift, and go to state 933
    "??"    shift, and go to state 614
    "?."    shift, and go to state 615
    "?["    shift, and go to state 616
    "<|"    shift, and go to state 617
    "|>"    shift, and go to state 618
    ":="    shift, and go to state 934
    "<<<"   shift, and go to state 619
    ">>>"   shift, and go to state 620
    "<<<="  shift, and go to state 935
    ">>>="  shift, and go to state 936
    "&&"    shift, and go to state 621
    "||"    shift, and go to state 622
    "^^"    shift, and go to state 623
    "&&="   shift, and go to state 937
    "||="   shift, and go to state 938
    "^^="   shift, and go to state 939
    ".."    shift, and go to state 624
    '='     shift, and go to state 940
    '?'     shift, and go to state 625
    '|'     shift, and go to state 626
    '^'     shift, and go to state 627
    '&'     shift, and go to state 628
    '<'     shift, and go to state 629
    '>'     shift, and go to state 630
    '-'     shift, and go to state 631
    '+'     shift, and go to state 632
    '*'     shift, and go to state 633
    '/'     shift, and go to state 634
    '%'     shift, and go to state 635
    '.'     shift, and go to state 636
    '['     shift, and go to state 637

    "if"      reduce using rule 72 (expression_if_one_liner)
    $default  reduce using rule 345 (expr_assign)


State 719

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 . enum_list optional_commas $@41 '}'

    "name"  shift, and go to state 941

    $default  reduce using rule 576 (enum_list)

    enum_expression  go to state 942
    enum_list        go to state 943


State 720

  602 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 602 (optional_structure_parent)


State 721

  612 optional_struct_variable_declaration_list: '{' . struct_variable_declaration_list '}'

    $default  reduce using rule 507 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 944


State 722

  616 structure_declaration: optional_annotation_list $@42 class_or_struct optional_public_or_private_structure $@43 structure_name optional_emit_semis $@44 optional_struct_variable_declaration_list .

    $default  reduce using rule 616 (structure_declaration)


State 723

  545 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 945
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 724

  546 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 946


State 725

  547 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  548                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 947


State 726

  554 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options SEMICOLON
  555                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 948
    type_declaration_no_options_no_dim  go to state 267


State 727

  556 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 949


State 728

  557 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options ';' .

    $default  reduce using rule 557 (global_let_variable_declaration)


State 729

  558 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr ';'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 950
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 730

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  559 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 951


State 731

  685 type_declaration_no_options_no_dim: "type" '<' $@47 type_declaration '>' . $@48

    $default  reduce using rule 684 ($@48)

    $@48  go to state 952


State 732

  708 type_declaration_no_options_no_dim: "array" '<' $@52 type_declaration '>' . $@53

    $default  reduce using rule 707 ($@53)

    $@53  go to state 953


State 733

  711 type_declaration_no_options_no_dim: "table" '<' $@54 table_type_pair '>' . $@55

    $default  reduce using rule 710 ($@55)

    $@55  go to state 954


State 734

   17 COMMA: "emitted ," .

    $default  reduce using rule 17 (COMMA)


State 735

   16 COMMA: ',' .

    $default  reduce using rule 16 (COMMA)


State 736

  669 c_or_s: COMMA .

    $default  reduce using rule 669 (c_or_s)


State 737

  670 c_or_s: SEMICOLON .

    $default  reduce using rule 670 (c_or_s)


State 738

  672 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 955


State 739

  785 make_struct_decl: "struct" '<' $@86 . type_declaration_no_options '>' $@87 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 956
    type_declaration_no_options_no_dim  go to state 267


State 740

  788 make_struct_decl: "class" '<' $@88 . type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 957
    type_declaration_no_options_no_dim  go to state 267


State 741

  273 new_type_declaration: '<' $@11 . type_declaration '>' $@12

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 958


State 742

  276 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  277         | "new" new_type_declaration '(' . expr_list ')'
  278         | "new" new_type_declaration '(' . make_struct_single ')'
  279         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "uninitialized"                   shift, and go to state 959
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 781 (use_initializer)

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 960
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_fields      go to state 795
    make_struct_single      go to state 961
    use_initializer         go to state 962
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 743

  316 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  317               | "typeinfo" name_in_namespace '<' . "name" c_or_s "name" '>' '(' expr ')'

    "name"  shift, and go to state 963


State 744

  315 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 964
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 745

  314 expr_type_decl: "type" '<' $@19 . type_declaration '>' $@20

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 965


State 746

  804 make_dim_decl: "array" "struct" '<' . $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 802 ($@96)

    $@96  go to state 966


State 747

  807 make_dim_decl: "array" "tuple" '<' . $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 805 ($@98)

    $@98  go to state 967


State 748

  810 make_dim_decl: "array" "variant" '<' . $@100 type_declaration_no_options '>' $@101 '(' make_variant_dim ')'

    $default  reduce using rule 808 ($@100)

    $@100  go to state 968


State 749

  814 make_dim_decl: "array" '<' $@102 . type_declaration_no_options '>' $@103 '(' optional_expr_list ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 969
    type_declaration_no_options_no_dim  go to state 267


State 750

  319 expr_list: expr_list . ',' expr
  811 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 970


State 751

  823 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  824                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 971
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 972


State 752

  820 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple
  822 make_table_decl: "table" '(' expr_map_tuple_list . optional_comma ')'

    ','  shift, and go to state 787

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 973


State 753

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  443     | "deref" '(' expr . ')'
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 974


State 754

  305 expr_cast: "cast" '<' $@13 . type_declaration_no_options '>' $@14 expr

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 975
    type_declaration_no_options_no_dim  go to state 267


State 755

  308 expr_cast: "upcast" '<' $@15 . type_declaration_no_options '>' $@16 expr

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 976
    type_declaration_no_options_no_dim  go to state 267


State 756

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  444     | "addr" '(' expr . ')'
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 977


State 757

  311 expr_cast: "reinterpret" '<' $@17 . type_declaration_no_options '>' $@18 expr

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 978
    type_declaration_no_options_no_dim  go to state 267


State 758

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  474     | "unsafe" '(' expr . ')'
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 979


State 759

  818 make_dim_decl: "fixed_array" '<' $@104 . type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 980
    type_declaration_no_options_no_dim  go to state 267


State 760

  319 expr_list: expr_list . ',' expr
  815 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 981


State 761

  794 make_struct_decl: "default" '<' $@92 . type_declaration_no_options '>' $@93 use_initializer

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 982
    type_declaration_no_options_no_dim  go to state 267


State 762

  800 make_tuple_call: "tuple" '<' $@94 . type_declaration_no_options '>' $@95 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 983
    type_declaration_no_options_no_dim  go to state 267


State 763

  319 expr_list: expr_list . ',' expr
  797 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 984


State 764

  791 make_struct_decl: "variant" '<' $@90 . type_declaration_no_options '>' $@91 '(' make_variant_dim ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 985
    type_declaration_no_options_no_dim  go to state 267


State 765

  475 expr_generator: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  476               | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  477               | "generator" '<' type_declaration_no_options . '>' optional_capture_list optional_emit_semis expression_block

    '>'  shift, and go to state 986


State 766

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  478 expr_mtag: "$$" '(' expr . ')'
  486          | expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 987


State 767

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  479 expr_mtag: "$i" '(' expr . ')'
  486          | expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 988


State 768

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  480 expr_mtag: "$v" '(' expr . ')'
  486          | expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 989


State 769

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  481 expr_mtag: "$b" '(' expr . ')'
  486          | expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 990


State 770

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  482 expr_mtag: "$a" '(' expr . ')'
  486          | expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 991


State 771

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  484 expr_mtag: "$c" '(' expr . ')' '(' ')'
  485          | "$c" '(' expr . ')' '(' expr_list ')'
  486          | expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 992


State 772

   36 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 36 (string_builder)


State 773

   35 string_builder_body: string_builder_body "{" . expr "}"

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 993
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 774

   29 character_sequence: character_sequence . STRING_CHARACTER
   30                   | character_sequence . STRING_CHARACTER_ESC
   34 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 215
    STRING_CHARACTER_ESC  shift, and go to state 216

    $default  reduce using rule 34 (string_builder_body)


State 775

  829 array_comprehension: '[' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 994


State 776

  830 array_comprehension: '[' "iterator" "for" . '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    '('  shift, and go to state 995


State 777

  319 expr_list: expr_list ',' . expr
  828 optional_comma: ',' .

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 828 (optional_comma)

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 996
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 778

  801 make_dim_decl: '[' expr_list optional_comma . ']'

    ']'  shift, and go to state 997


State 779

  433 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 998


State 780

  369 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 999


State 781

  493 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1000


State 782

  373 func_addr_expr: '@' '@' '<' . $@21 type_declaration_no_options '>' $@22 func_addr_name
  376               | '@' '@' '<' . $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    ':'       reduce using rule 374 ($@23)
    '>'       reduce using rule 374 ($@23)
    '('       reduce using rule 374 ($@23)
    $default  reduce using rule 371 ($@21)

    $@21  go to state 1001
    $@23  go to state 1002


State 783

  368 func_addr_name: name_in_namespace .

    $default  reduce using rule 368 (func_addr_name)


State 784

  370 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 370 (func_addr_expr)


State 785

  831 array_comprehension: '{' "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1003


State 786

  795 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1004
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 787

  820 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  828 optional_comma: ',' .

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 828 (optional_comma)

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 594
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_map_tuple          go to state 1005
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 788

  821 make_table_decl: '{' expr_map_tuple_list optional_comma . '}'

    '}'  shift, and go to state 1006


State 789

  387 expr_call: name_in_namespace '(' "uninitialized" . ')'
  389          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007
    ')'     shift, and go to state 1008

    make_struct_fields  go to state 795
    make_struct_single  go to state 1009


State 790

  769 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  770                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1010


State 791

  266 name_in_namespace: "name" .
  267                  | "name" . "::" "name"
  765 make_struct_fields: "name" . copy_or_move expr
  766                   | "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1011
    "::"  shift, and go to state 93
    '='   shift, and go to state 887

    $default  reduce using rule 266 (name_in_namespace)

    copy_or_move  go to state 1012


State 792

  364 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  801 make_dim_decl: '[' . expr_list optional_comma ']'
  829 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  830                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 589
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_fields      go to state 1013
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 793

  386 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 386 (expr_call)


State 794

  319 expr_list: expr_list . ',' expr
  365 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  390 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1014
    ')'  shift, and go to state 1015


State 795

  767 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  768                   | make_struct_fields . ',' "name" ":=" expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  774 make_struct_single: make_struct_fields .

    ','  shift, and go to state 1016

    $default  reduce using rule 774 (make_struct_single)


State 796

  388 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1017


State 797

  334 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1018


State 798

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block

    '('  shift, and go to state 327

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1019


State 799

  325 block_or_lambda: '@' '@' .

    $default  reduce using rule 325 (block_or_lambda)


State 800

  258 expressions: expressions . expression_any
  259            | expressions . error
  337 expr_full_block_assumed_piped: '{' expressions . '}'

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 420
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 421
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 422
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 425
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 426
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "emitted ;"                       shift, and go to state 690
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    ';'                               shift, and go to state 691
    '{'                               shift, and go to state 460
    '}'                               shift, and go to state 1020

    "while"      reduce using rule 87 ($@4)
    "if"         reduce using rule 81 ($@2)
    "static_if"  reduce using rule 81 ($@2)
    "for"        reduce using rule 84 ($@3)
    "with"       reduce using rule 89 ($@5)

    SEMICOLON                         go to state 692
    string_builder                    go to state 461
    expr_reader                       go to state 462
    expression_label                  go to state 693
    expression_goto                   go to state 694
    expression_if_one_liner           go to state 695
    expression_if_then_else           go to state 696
    $@2                               go to state 697
    expression_if_then_else_oneliner  go to state 698
    expression_for_loop               go to state 699
    $@3                               go to state 700
    expression_unsafe                 go to state 701
    expression_while_loop             go to state 702
    $@4                               go to state 703
    expression_with                   go to state 704
    $@5                               go to state 705
    expression_with_alias             go to state 706
    expr_call_pipe                    go to state 463
    expression_any                    go to state 708
    name_in_namespace                 go to state 464
    expression_delete                 go to state 709
    expr_new                          go to state 465
    expression_break                  go to state 710
    expression_continue               go to state 711
    expression_return                 go to state 712
    expression_yield                  go to state 713
    expression_try_catch              go to state 714
    kwd_let                           go to state 715
    expression_let                    go to state 716
    expr_cast                         go to state 466
    expr_type_decl                    go to state 467
    expr_type_info                    go to state 468
    block_or_lambda                   go to state 469
    expr_full_block                   go to state 470
    expr_numeric_const                go to state 471
    expr_assign                       go to state 717
    expr_named_call                   go to state 472
    expr_method_call                  go to state 473
    func_addr_expr                    go to state 474
    expr_field                        go to state 475
    expr_call                         go to state 476
    expr                              go to state 718
    expr_generator                    go to state 478
    expr_mtag                         go to state 479
    basic_type_declaration            go to state 480
    make_decl                         go to state 481
    make_struct_decl                  go to state 482
    make_tuple_call                   go to state 483
    make_dim_decl                     go to state 484
    make_table_decl                   go to state 485
    array_comprehension               go to state 486


State 801

  336 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block

    "capture"  shift, and go to state 797

    $default  reduce using rule 333 (optional_capture_list)

    optional_capture_list  go to state 1021


State 802

  450 expr: expr "is" "type" . '<' $@27 type_declaration_no_options '>' $@28

    '<'  shift, and go to state 1022


State 803

  492 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1023


State 804

  452 expr: expr "is" "name" .

    $default  reduce using rule 452 (expr)


State 805

  451 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 451 (expr)


State 806

  456 expr: expr "as" "type" . '<' $@29 type_declaration '>' $@30

    '<'  shift, and go to state 1024


State 807

  490 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1025


State 808

  453 expr: expr "as" "name" .

    $default  reduce using rule 453 (expr)


State 809

  457 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 457 (expr)


State 810

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  407     | expr "<<" expr .
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 407 (expr)


State 811

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  408     | expr ">>" expr .
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 408 (expr)


State 812

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  420     | expr "<=" expr .
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 420 (expr)


State 813

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  421     | expr ">=" expr .
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 421 (expr)


State 814

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  418     | expr "==" expr .
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 418 (expr)


State 815

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  419     | expr "!=" expr .
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 419 (expr)


State 816

  366 expr_method_call: expr "->" "name" . '(' ')'
  367                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1026


State 817

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  446     | expr "??" expr .
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 446 (expr)


State 818

  487 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1027


State 819

  438 expr: expr "?." "name" .

    $default  reduce using rule 438 (expr)


State 820

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  436     | expr "?[" expr . ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1028


State 821

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  470     | expr "<|" expr .
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 470 (expr)


State 822

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  471     | expr "|>" expr .
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 613
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 471 (expr)


State 823

  391 expr_call: basic_type_declaration . '(' ')'
  392          | basic_type_declaration . '(' expr_list ')'
  472 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 639

    $default  reduce using rule 472 (expr)


State 824

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  409     | expr "<<<" expr .
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 409 (expr)


State 825

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  410     | expr ">>>" expr .
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '-'   shift, and go to state 631
    '+'   shift, and go to state 632
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 410 (expr)


State 826

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  425     | expr "&&" expr .
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 425 (expr)


State 827

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  426     | expr "||" expr .
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "^^"   shift, and go to state 623
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 426 (expr)


State 828

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  427     | expr "^^" expr .
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 427 (expr)


State 829

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  428     | expr ".." expr .
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    ".."  error (nonassociative)

    $default  reduce using rule 428 (expr)


State 830

  458 expr: expr '?' "as" . "name"
  461     | expr '?' "as" . "type" '<' $@31 type_declaration '>' $@32
  462     | expr '?' "as" . basic_type_declaration
  491 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1029
    "bool"      shift, and go to state 226
    "void"      shift, and go to state 227
    "string"    shift, and go to state 228
    "int"       shift, and go to state 230
    "int2"      shift, and go to state 231
    "int3"      shift, and go to state 232
    "int4"      shift, and go to state 233
    "uint"      shift, and go to state 234
    "bitfield"  shift, and go to state 430
    "uint2"     shift, and go to state 236
    "uint3"     shift, and go to state 237
    "uint4"     shift, and go to state 238
    "float"     shift, and go to state 239
    "float2"    shift, and go to state 240
    "float3"    shift, and go to state 241
    "float4"    shift, and go to state 242
    "range"     shift, and go to state 243
    "urange"    shift, and go to state 244
    "range64"   shift, and go to state 245
    "urange64"  shift, and go to state 246
    "int64"     shift, and go to state 248
    "uint64"    shift, and go to state 249
    "double"    shift, and go to state 250
    "int8"      shift, and go to state 253
    "uint8"     shift, and go to state 254
    "int16"     shift, and go to state 255
    "uint16"    shift, and go to state 256
    "$f"        shift, and go to state 1030
    "name"      shift, and go to state 1031

    basic_type_declaration  go to state 1032


State 831

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  447     | expr '?' expr . ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    ':'    shift, and go to state 1033
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637


State 832

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  423     | expr '|' expr .
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 423 (expr)


State 833

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  424     | expr '^' expr .
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 424 (expr)


State 834

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  422     | expr '&' expr .
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 422 (expr)


State 835

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  416     | expr '<' expr .
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 416 (expr)


State 836

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  417     | expr '>' expr .
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 417 (expr)


State 837

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  412     | expr '-' expr .
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 412 (expr)


State 838

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  411     | expr '+' expr .
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '*'   shift, and go to state 633
    '/'   shift, and go to state 634
    '%'   shift, and go to state 635
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 411 (expr)


State 839

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  413     | expr '*' expr .
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 413 (expr)


State 840

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  414     | expr '/' expr .
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 414 (expr)


State 841

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  415     | expr '%' expr .
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 603
    "as"  shift, and go to state 604
    "++"  shift, and go to state 607
    "--"  shift, and go to state 608
    "->"  shift, and go to state 613
    "??"  shift, and go to state 614
    "?."  shift, and go to state 615
    "?["  shift, and go to state 616
    "<|"  shift, and go to state 617
    "|>"  shift, and go to state 618
    '.'   shift, and go to state 636
    '['   shift, and go to state 637

    $default  reduce using rule 415 (expr)


State 842

  439 expr: expr '.' "?." . "name"
  489 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1034
    "name"  shift, and go to state 1035


State 843

  437 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1036
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 844

  486 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1037


State 845

  377 expr_field: expr '.' "name" .
  379           | expr '.' "name" . '(' ')'
  380           | expr '.' "name" . '(' expr_list ')'

    '('  shift, and go to state 1038

    $default  reduce using rule 377 (expr_field)


State 846

  378 expr_field: expr '.' '.' . "name"
  488 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1039
    "name"  shift, and go to state 1040


State 847

  435 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1041
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 848

  385 expr_field: expr '.' $@25 . error $@26

    error  shift, and go to state 1042


State 849

  381 expr_field: expr '.' basic_type_declaration . '(' ')'
  382           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1043


State 850

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  434     | expr '[' expr . ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1044


State 851

  391 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 391 (expr_call)


State 852

  319 expr_list: expr_list . ',' expr
  392 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1046


State 853

  714 type_declaration_no_options_no_dim: "iterator" '<' $@56 type_declaration '>' . $@57

    $default  reduce using rule 713 ($@57)

    $@57  go to state 1047


State 854

  704 type_declaration_no_options_no_dim: "smart_ptr" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 703 ($@51)

    $@51  go to state 1048


State 855

  668 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits '>' . $@46

    $default  reduce using rule 667 ($@46)

    $@46  go to state 1049


State 856

  662 bitfield_bits: bitfield_bits ';' . "name"

    "name"  shift, and go to state 1050


State 857

  718 type_declaration_no_options_no_dim: "block" '<' $@58 type_declaration '>' . $@59

    $default  reduce using rule 717 ($@59)

    $@59  go to state 1051


State 858

  721 type_declaration_no_options_no_dim: "block" '<' $@60 optional_function_argument_list optional_function_type . '>' $@61

    '>'  shift, and go to state 1052


State 859

  725 type_declaration_no_options_no_dim: "function" '<' $@62 type_declaration '>' . $@63

    $default  reduce using rule 724 ($@63)

    $@63  go to state 1053


State 860

  728 type_declaration_no_options_no_dim: "function" '<' $@64 optional_function_argument_list optional_function_type . '>' $@65

    '>'  shift, and go to state 1054


State 861

  732 type_declaration_no_options_no_dim: "lambda" '<' $@66 type_declaration '>' . $@67

    $default  reduce using rule 731 ($@67)

    $@67  go to state 1055


State 862

  735 type_declaration_no_options_no_dim: "lambda" '<' $@68 optional_function_argument_list optional_function_type . '>' $@69

    '>'  shift, and go to state 1056


State 863

  520 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 1057


State 864

  738 type_declaration_no_options_no_dim: "tuple" '<' $@70 tuple_type_list '>' . $@71

    $default  reduce using rule 737 ($@71)

    $@71  go to state 1058


State 865

  522 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 651
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    tuple_type                          go to state 1059
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 654


State 866

  526 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 1060


State 867

  741 type_declaration_no_options_no_dim: "variant" '<' $@72 variant_type_list '>' . $@73

    $default  reduce using rule 740 ($@73)

    $@73  go to state 1061


State 868

  528 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 655

    variant_type  go to state 1062


State 869

  265 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@49 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 1063
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 1064


State 870

  264 type_declaration_no_options_list: type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 264 (type_declaration_no_options_list)


State 871

  687 type_declaration_no_options_no_dim: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 687 (type_declaration_no_options_no_dim)


State 872

  261 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 261 (optional_expr_list)


State 873

  675 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 675 (dim_list)


State 874

  574 commas: COMMA .

    $default  reduce using rule 574 (commas)


State 875

  575 commas: commas . COMMA
  592 optional_commas: commas .
  665 bitfield_alias_bits: bitfield_alias_bits commas . "name"

    "name"       shift, and go to state 1065
    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 592 (optional_commas)

    COMMA  go to state 1066


State 876

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas . $@85 '}'

    $default  reduce using rule 758 ($@85)

    $@85  go to state 1067


State 877

   77 semis: SEMICOLON .

    $default  reduce using rule 77 (semis)


State 878

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  525 tuple_alias_type_list: tuple_alias_type_list semis . tuple_type

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 651
    "emitted ;"  shift, and go to state 690
    '$'          shift, and go to state 260
    ';'          shift, and go to state 691

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON                           go to state 1068
    name_in_namespace                   go to state 261
    tuple_type                          go to state 1069
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 654


State 879

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis . $@77 '}'

    $default  reduce using rule 748 ($@77)

    $@77  go to state 1070


State 880

   78 semis: semis . SEMICOLON
   80 optional_semis: semis .
  531 variant_alias_type_list: variant_alias_type_list semis . variant_type

    "name"       shift, and go to state 655
    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    $default  reduce using rule 80 (optional_semis)

    SEMICOLON     go to state 1068
    variant_type  go to state 1071


State 881

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis . $@81 '}'

    $default  reduce using rule 753 ($@81)

    $@81  go to state 1072


State 882

  516 function_argument_declaration: "$a" '(' expr ')' .

    $default  reduce using rule 516 (function_argument_declaration)


State 883

  618 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1073
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 884

  619 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1074


State 885

  533 copy_or_move: "<-" .

    $default  reduce using rule 533 (copy_or_move)


State 886

  620 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  621                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1075


State 887

  532 copy_or_move: '=' .

    $default  reduce using rule 532 (copy_or_move)


State 888

  536 variable_declaration: variable_name_with_pos_list ':' . type_declaration
  537                     | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 1076


State 889

  535 variable_declaration: variable_name_with_pos_list '&' .

    $default  reduce using rule 535 (variable_declaration)


State 890

  538 variable_declaration: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1077
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 891

  285 expression_return: "return" "<-" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1078
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 892

  284 expression_return: "return" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 284 (expression_return)


State 893

  288 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 1079


State 894

  270 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1080
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 895

  269 expression_delete: "delete" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 269 (expression_delete)


State 896

   91 expression_with_alias: "assume" "name" . '=' expr

    '='  shift, and go to state 1081


State 897

  256 expression_any: "pass" SEMICOLON .

    $default  reduce using rule 256 (expression_any)


State 898

   56 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 1082


State 899

   57 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 1083


State 900

   58 expression_goto: "goto" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 58 (expression_goto)


State 901

   86 expression_unsafe: "unsafe" optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1084
    $@9               go to state 330


State 902

  287 expression_yield: "yield" "<-" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1085
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 903

  286 expression_yield: "yield" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 286 (expression_yield)


State 904

  254 expression_any: expression_label SEMICOLON .

    $default  reduce using rule 254 (expression_any)


State 905

  255 expression_any: expression_goto SEMICOLON .

    $default  reduce using rule 255 (expression_any)


State 906

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" . '(' expr ')' expression_else_one_liner SEMICOLON

    '('  shift, and go to state 1086


State 907

   68 if_or_static_if: "if" .

    $default  reduce using rule 68 (if_or_static_if)


State 908

   69 if_or_static_if: "static_if" .

    $default  reduce using rule 69 (if_or_static_if)


State 909

   82 expression_if_then_else: $@2 if_or_static_if . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1087


State 910

   85 expression_for_loop: $@3 "for" . '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    '('  shift, and go to state 1088


State 911

   88 expression_while_loop: $@4 "while" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1089


State 912

   90 expression_with: $@5 "with" . '(' expr ')' optional_emit_semis expression_block

    '('  shift, and go to state 1090


State 913

  245 expression_any: expression_with_alias SEMICOLON .

    $default  reduce using rule 245 (expression_any)


State 914

  236 expression_block: $@9 '{' expressions $@10 '}' . expression_block_finally

    "finally"  shift, and go to state 1091

    $default  reduce using rule 230 (expression_block_finally)

    expression_block_finally  go to state 1092


State 915

  240 expression_any: expression_delete SEMICOLON .

    $default  reduce using rule 240 (expression_any)


State 916

  247 expression_any: expression_break SEMICOLON .

    $default  reduce using rule 247 (expression_any)


State 917

  248 expression_any: expression_continue SEMICOLON .

    $default  reduce using rule 248 (expression_any)


State 918

  249 expression_any: expression_return SEMICOLON .

    $default  reduce using rule 249 (expression_any)


State 919

  250 expression_any: expression_yield SEMICOLON .

    $default  reduce using rule 250 (expression_any)


State 920

  294 optional_in_scope: "inscope" .

    $default  reduce using rule 294 (optional_in_scope)


State 921

  300 expression_let: kwd_let optional_in_scope . let_variable_declaration
  301               | kwd_let optional_in_scope . tuple_expansion_variable_declaration
  302               | kwd_let optional_in_scope . '{' variable_declaration_list '}'

    "$i"    shift, and go to state 530
    "name"  shift, and go to state 531
    '('     shift, and go to state 1093
    '{'     shift, and go to state 1094

    tuple_expansion_variable_declaration  go to state 1095
    let_variable_name_with_pos_list       go to state 532
    let_variable_declaration              go to state 1096


State 922

  239 expression_any: expr_assign SEMICOLON .

    $default  reduce using rule 239 (expression_any)


State 923

  355 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1097
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 924

  356 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1098
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 925

  358 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1099
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 926

  357 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1100
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 927

  359 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1101
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 928

  349 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1102
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 929

  350 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1103
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 930

  351 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1104
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 931

  360 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1105
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 932

  361 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1106
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 933

  347 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1107
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 934

  348 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1108
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 935

  362 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1109
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 936

  363 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1110
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 937

  352 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1111
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 938

  353 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1112
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 939

  354 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1113
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 940

  346 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1114
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 941

  572 enum_expression: "name" .
  573                | "name" . '=' expr

    '='  shift, and go to state 1115

    $default  reduce using rule 572 (enum_expression)


State 942

  577 enum_list: enum_expression .

    $default  reduce using rule 577 (enum_list)


State 943

  578 enum_list: enum_list . commas enum_expression
  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list . optional_commas $@41 '}'

    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 591 (optional_commas)

    COMMA            go to state 874
    commas           go to state 1116
    optional_commas  go to state 1117


State 944

  508 struct_variable_declaration_list: struct_variable_declaration_list . "emitted ;"
  510                                 | struct_variable_declaration_list . $@33 structure_variable_declaration SEMICOLON
  512                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header SEMICOLON
  514                                 | struct_variable_declaration_list . optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header optional_emit_semis expression_block
  612 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list . '}'

    "emitted ;"  shift, and go to state 1118
    '['          shift, and go to state 1119
    '}'          shift, and go to state 1120

    "def"     reduce using rule 131 (optional_annotation_list_with_emit_semis)
    $default  reduce using rule 509 ($@33)

    optional_annotation_list_with_emit_semis  go to state 1121
    $@33                                      go to state 1122


State 945

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  545 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1123


State 946

  546 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 546 (let_variable_name_with_pos_list)


State 947

  547 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  548                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1124

    $default  reduce using rule 547 (let_variable_name_with_pos_list)


State 948

  554 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . SEMICOLON
  555                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"         shift, and go to state 537
    ":="         shift, and go to state 538
    "emitted ;"  shift, and go to state 690
    '='          shift, and go to state 539
    ';'          shift, and go to state 691

    SEMICOLON              go to state 1125
    copy_or_move_or_clone  go to state 1126


State 949

  556 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1127
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 950

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  558 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . ';'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1128


State 951

  559 global_let_variable_declaration: global_let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr ';' .

    $default  reduce using rule 559 (global_let_variable_declaration)


State 952

  685 type_declaration_no_options_no_dim: "type" '<' $@47 type_declaration '>' $@48 .

    $default  reduce using rule 685 (type_declaration_no_options_no_dim)


State 953

  708 type_declaration_no_options_no_dim: "array" '<' $@52 type_declaration '>' $@53 .

    $default  reduce using rule 708 (type_declaration_no_options_no_dim)


State 954

  711 type_declaration_no_options_no_dim: "table" '<' $@54 table_type_pair '>' $@55 .

    $default  reduce using rule 711 (type_declaration_no_options_no_dim)


State 955

  672 table_type_pair: type_declaration c_or_s type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 672 (table_type_pair)


State 956

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options . '>' $@87 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1129


State 957

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options . '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1130


State 958

  273 new_type_declaration: '<' $@11 type_declaration . '>' $@12
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 1131


State 959

  279 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  782 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007

    $default  reduce using rule 782 (use_initializer)

    make_struct_fields  go to state 795
    make_struct_single  go to state 1132


State 960

  277 expr_new: "new" new_type_declaration '(' expr_list . ')'
  319 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1133


State 961

  278 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1134


State 962

  276 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1135


State 963

  316 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  317               | "typeinfo" name_in_namespace '<' "name" . c_or_s "name" '>' '(' expr ')'

    "emitted ,"  shift, and go to state 734
    "emitted ;"  shift, and go to state 690
    ','          shift, and go to state 735
    '>'          shift, and go to state 1136
    ';'          shift, and go to state 691

    COMMA      go to state 736
    SEMICOLON  go to state 737
    c_or_s     go to state 1137


State 964

  315 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1138


State 965

  314 expr_type_decl: "type" '<' $@19 type_declaration . '>' $@20
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 1139


State 966

  804 make_dim_decl: "array" "struct" '<' $@96 . type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 1140
    type_declaration_no_options_no_dim  go to state 267


State 967

  807 make_dim_decl: "array" "tuple" '<' $@98 . type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 1141
    type_declaration_no_options_no_dim  go to state 267


State 968

  810 make_dim_decl: "array" "variant" '<' $@100 . type_declaration_no_options '>' $@101 '(' make_variant_dim ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 1142
    type_declaration_no_options_no_dim  go to state 267


State 969

  814 make_dim_decl: "array" '<' $@102 type_declaration_no_options . '>' $@103 '(' optional_expr_list ')'

    '>'  shift, and go to state 1143


State 970

  811 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1144


State 971

  823 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1145


State 972

  824 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 1146
    type_declaration_no_options_no_dim  go to state 267


State 973

  822 make_table_decl: "table" '(' expr_map_tuple_list optional_comma . ')'

    ')'  shift, and go to state 1147


State 974

  443 expr: "deref" '(' expr ')' .

    $default  reduce using rule 443 (expr)


State 975

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options . '>' $@14 expr

    '>'  shift, and go to state 1148


State 976

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options . '>' $@16 expr

    '>'  shift, and go to state 1149


State 977

  444 expr: "addr" '(' expr ')' .

    $default  reduce using rule 444 (expr)


State 978

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options . '>' $@18 expr

    '>'  shift, and go to state 1150


State 979

  474 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 474 (expr)


State 980

  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options . '>' $@105 '(' expr_list optional_comma ')'

    '>'  shift, and go to state 1151


State 981

  815 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1152


State 982

  794 make_struct_decl: "default" '<' $@92 type_declaration_no_options . '>' $@93 use_initializer

    '>'  shift, and go to state 1153


State 983

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options . '>' $@95 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1154


State 984

  797 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1155


State 985

  791 make_struct_decl: "variant" '<' $@90 type_declaration_no_options . '>' $@91 '(' make_variant_dim ')'

    '>'  shift, and go to state 1156


State 986

  475 expr_generator: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  476               | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'
  477               | "generator" '<' type_declaration_no_options '>' . optional_capture_list optional_emit_semis expression_block

    "capture"  shift, and go to state 797

    $default  reduce using rule 333 (optional_capture_list)

    optional_capture_list  go to state 1157


State 987

  478 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 478 (expr_mtag)


State 988

  479 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 479 (expr_mtag)


State 989

  480 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 480 (expr_mtag)


State 990

  481 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 481 (expr_mtag)


State 991

  482 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 482 (expr_mtag)


State 992

  484 expr_mtag: "$c" '(' expr ')' . '(' ')'
  485          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1158


State 993

   35 string_builder_body: string_builder_body "{" expr . "}"
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    "}"    shift, and go to state 1159
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637


State 994

  620 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  621                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1160
    ','   shift, and go to state 886


State 995

  830 array_comprehension: '[' "iterator" "for" '(' . variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1161


State 996

  319 expr_list: expr_list ',' expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 319 (expr_list)


State 997

  801 make_dim_decl: '[' expr_list optional_comma ']' .

    $default  reduce using rule 801 (make_dim_decl)


State 998

  433 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 433 (expr)


State 999

  369 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1162
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1000

  493 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1163
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1001

  373 func_addr_expr: '@' '@' '<' $@21 . type_declaration_no_options '>' $@22 func_addr_name

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 1164
    type_declaration_no_options_no_dim  go to state 267


State 1002

  376 func_addr_expr: '@' '@' '<' $@23 . optional_function_argument_list optional_function_type '>' $@24 func_addr_name

    '('  shift, and go to state 327

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1165


State 1003

  620 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  621                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "in"  shift, and go to state 1166
    ','   shift, and go to state 886


State 1004

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  795 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 795 (make_map_tuple)


State 1005

  820 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 820 (expr_map_tuple_list)


State 1006

  821 make_table_decl: '{' expr_map_tuple_list optional_comma '}' .

    $default  reduce using rule 821 (make_table_decl)


State 1007

  765 make_struct_fields: "name" . copy_or_move expr
  766                   | "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1011
    '='   shift, and go to state 887

    copy_or_move  go to state 1012


State 1008

  387 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 387 (expr_call)


State 1009

  389 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1167


State 1010

  769 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  770                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1168
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1011

  766 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1169
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1012

  765 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1170
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1013

  364 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  767 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  768                   | make_struct_fields . ',' "name" ":=" expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1016
    ']'  shift, and go to state 1171


State 1014

  319 expr_list: expr_list ',' . expr
  365 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 1172
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 996
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1015

  390 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 390 (expr_call)


State 1016

  767 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  768                   | make_struct_fields ',' . "name" ":=" expr
  771                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1173
    "name"  shift, and go to state 1174


State 1017

  388 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 388 (expr_call)


State 1018

  334 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1175
    ":="    shift, and go to state 1176
    "name"  shift, and go to state 1177
    '='     shift, and go to state 1178
    '&'     shift, and go to state 1179

    capture_entry  go to state 1180
    capture_list   go to state 1181


State 1019

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis block_or_simple_block

    ':'  shift, and go to state 387

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1182


State 1020

  337 expr_full_block_assumed_piped: '{' expressions '}' .

    $default  reduce using rule 337 (expr_full_block_assumed_piped)


State 1021

  336 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type optional_emit_semis expression_block

    '('  shift, and go to state 327

    $default  reduce using rule 133 (optional_function_argument_list)

    optional_function_argument_list  go to state 1183


State 1022

  450 expr: expr "is" "type" '<' . $@27 type_declaration_no_options '>' $@28

    $default  reduce using rule 448 ($@27)

    $@27  go to state 1184


State 1023

  492 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1185
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1024

  456 expr: expr "as" "type" '<' . $@29 type_declaration '>' $@30

    $default  reduce using rule 454 ($@29)

    $@29  go to state 1186


State 1025

  490 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1187
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1026

  366 expr_method_call: expr "->" "name" '(' . ')'
  367                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1188
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1189
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1027

  487 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1190
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1028

  436 expr: expr "?[" expr ']' .

    $default  reduce using rule 436 (expr)


State 1029

  461 expr: expr '?' "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1191


State 1030

  491 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1192


State 1031

  458 expr: expr '?' "as" "name" .

    $default  reduce using rule 458 (expr)


State 1032

  462 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 462 (expr)


State 1033

  447 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1193
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1034

  489 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1194


State 1035

  439 expr: expr '.' "?." "name" .

    $default  reduce using rule 439 (expr)


State 1036

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  437     | expr '.' "?[" expr . ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1195


State 1037

  486 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1196
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1038

  379 expr_field: expr '.' "name" '(' . ')'
  380           | expr '.' "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1197
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1198
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1039

  488 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1199


State 1040

  378 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 378 (expr_field)


State 1041

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  435     | expr '.' '[' expr . ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ']'    shift, and go to state 1200


State 1042

  385 expr_field: expr '.' $@25 error . $@26

    $default  reduce using rule 384 ($@26)

    $@26  go to state 1201


State 1043

  381 expr_field: expr '.' basic_type_declaration '(' . ')'
  382           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1202
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1203
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1044

  434 expr: expr '[' expr ']' .

    $default  reduce using rule 434 (expr)


State 1045

  319 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 996
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1046

  392 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 392 (expr_call)


State 1047

  714 type_declaration_no_options_no_dim: "iterator" '<' $@56 type_declaration '>' $@57 .

    $default  reduce using rule 714 (type_declaration_no_options_no_dim)


State 1048

  704 type_declaration_no_options_no_dim: "smart_ptr" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 704 (type_declaration_no_options_no_dim)


State 1049

  668 bitfield_type_declaration: "bitfield" '<' $@45 bitfield_bits '>' $@46 .

    $default  reduce using rule 668 (bitfield_type_declaration)


State 1050

  662 bitfield_bits: bitfield_bits ';' "name" .

    $default  reduce using rule 662 (bitfield_bits)


State 1051

  718 type_declaration_no_options_no_dim: "block" '<' $@58 type_declaration '>' $@59 .

    $default  reduce using rule 718 (type_declaration_no_options_no_dim)


State 1052

  721 type_declaration_no_options_no_dim: "block" '<' $@60 optional_function_argument_list optional_function_type '>' . $@61

    $default  reduce using rule 720 ($@61)

    $@61  go to state 1204


State 1053

  725 type_declaration_no_options_no_dim: "function" '<' $@62 type_declaration '>' $@63 .

    $default  reduce using rule 725 (type_declaration_no_options_no_dim)


State 1054

  728 type_declaration_no_options_no_dim: "function" '<' $@64 optional_function_argument_list optional_function_type '>' . $@65

    $default  reduce using rule 727 ($@65)

    $@65  go to state 1205


State 1055

  732 type_declaration_no_options_no_dim: "lambda" '<' $@66 type_declaration '>' $@67 .

    $default  reduce using rule 732 (type_declaration_no_options_no_dim)


State 1056

  735 type_declaration_no_options_no_dim: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' . $@69

    $default  reduce using rule 734 ($@69)

    $@69  go to state 1206


State 1057

  520 tuple_type: "name" ':' type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 520 (tuple_type)


State 1058

  738 type_declaration_no_options_no_dim: "tuple" '<' $@70 tuple_type_list '>' $@71 .

    $default  reduce using rule 738 (type_declaration_no_options_no_dim)


State 1059

  522 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 522 (tuple_type_list)


State 1060

  526 variant_type: "name" ':' type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 526 (variant_type)


State 1061

  741 type_declaration_no_options_no_dim: "variant" '<' $@72 variant_type_list '>' $@73 .

    $default  reduce using rule 741 (type_declaration_no_options_no_dim)


State 1062

  528 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 528 (variant_type_list)


State 1063

  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@49 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1207


State 1064

  265 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 1208


State 1065

  665 bitfield_alias_bits: bitfield_alias_bits commas "name" .

    $default  reduce using rule 665 (bitfield_alias_bits)


State 1066

  575 commas: commas COMMA .

    $default  reduce using rule 575 (commas)


State 1067

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 . '}'

    '}'  shift, and go to state 1209


State 1068

   78 semis: semis SEMICOLON .

    $default  reduce using rule 78 (semis)


State 1069

  525 tuple_alias_type_list: tuple_alias_type_list semis tuple_type .

    $default  reduce using rule 525 (tuple_alias_type_list)


State 1070

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 . '}'

    '}'  shift, and go to state 1210


State 1071

  531 variant_alias_type_list: variant_alias_type_list semis variant_type .

    $default  reduce using rule 531 (variant_alias_type_list)


State 1072

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis $@81 . '}'

    '}'  shift, and go to state 1211


State 1073

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  618 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1212


State 1074

  619 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 619 (variable_name_with_pos_list)


State 1075

  620 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  621                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1213

    $default  reduce using rule 620 (variable_name_with_pos_list)


State 1076

  536 variable_declaration: variable_name_with_pos_list ':' type_declaration .
  537                     | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 885
    '='   shift, and go to state 887
    '|'   shift, and go to state 371

    $default  reduce using rule 536 (variable_declaration)

    copy_or_move  go to state 1214


State 1077

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  538 variable_declaration: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 538 (variable_declaration)


State 1078

  285 expression_return: "return" "<-" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 285 (expression_return)


State 1079

  288 expression_try_catch: "try" expression_block "recover" . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1215
    $@9               go to state 330


State 1080

  270 expression_delete: "delete" "explicit" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 270 (expression_delete)


State 1081

   91 expression_with_alias: "assume" "name" '=' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1216
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1082

   56 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 56 (expression_label)


State 1083

   57 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 57 (expression_goto)


State 1084

   86 expression_unsafe: "unsafe" optional_emit_semis expression_block .

    $default  reduce using rule 86 (expression_unsafe)


State 1085

  287 expression_yield: "yield" "<-" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 287 (expression_yield)


State 1086

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' . expr ')' expression_else_one_liner SEMICOLON

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1217
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1087

   82 expression_if_then_else: $@2 if_or_static_if '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1218
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1088

   85 expression_for_loop: $@3 "for" '(' . variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_name_with_pos_list  go to state 1219


State 1089

   88 expression_while_loop: $@4 "while" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1220
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1090

   90 expression_with: $@5 "with" '(' . expr ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1221
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1091

  233 expression_block_finally: "finally" . $@7 '{' expressions $@8 '}'

    $default  reduce using rule 231 ($@7)

    $@7  go to state 1222


State 1092

  236 expression_block: $@9 '{' expressions $@10 '}' expression_block_finally .

    $default  reduce using rule 236 (expression_block)


State 1093

  298 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  299                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    "name"  shift, and go to state 1223

    tuple_expansion  go to state 1224


State 1094

  302 expression_let: kwd_let optional_in_scope '{' . variable_declaration_list '}'

    $default  reduce using rule 551 (variable_declaration_list)

    variable_declaration_list  go to state 1225


State 1095

  301 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 301 (expression_let)


State 1096

  300 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 300 (expression_let)


State 1097

  355 expr_assign: expr "+=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 355 (expr_assign)


State 1098

  356 expr_assign: expr "-=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 356 (expr_assign)


State 1099

  358 expr_assign: expr "/=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 358 (expr_assign)


State 1100

  357 expr_assign: expr "*=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 357 (expr_assign)


State 1101

  359 expr_assign: expr "%=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 359 (expr_assign)


State 1102

  349 expr_assign: expr "&=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 349 (expr_assign)


State 1103

  350 expr_assign: expr "|=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 350 (expr_assign)


State 1104

  351 expr_assign: expr "^=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 351 (expr_assign)


State 1105

  360 expr_assign: expr "<<=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 360 (expr_assign)


State 1106

  361 expr_assign: expr ">>=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 361 (expr_assign)


State 1107

  347 expr_assign: expr "<-" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 347 (expr_assign)


State 1108

  348 expr_assign: expr ":=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 348 (expr_assign)


State 1109

  362 expr_assign: expr "<<<=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 362 (expr_assign)


State 1110

  363 expr_assign: expr ">>>=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 363 (expr_assign)


State 1111

  352 expr_assign: expr "&&=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 352 (expr_assign)


State 1112

  353 expr_assign: expr "||=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 353 (expr_assign)


State 1113

  354 expr_assign: expr "^^=" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 354 (expr_assign)


State 1114

  346 expr_assign: expr '=' expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 346 (expr_assign)


State 1115

  573 enum_expression: "name" '=' . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1226
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1116

  575 commas: commas . COMMA
  578 enum_list: enum_list commas . enum_expression
  592 optional_commas: commas .

    "name"       shift, and go to state 941
    "emitted ,"  shift, and go to state 734
    ','          shift, and go to state 735

    $default  reduce using rule 592 (optional_commas)

    COMMA            go to state 1066
    enum_expression  go to state 1227


State 1117

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas . $@41 '}'

    $default  reduce using rule 599 ($@41)

    $@41  go to state 1228


State 1118

  508 struct_variable_declaration_list: struct_variable_declaration_list "emitted ;" .

    $default  reduce using rule 508 (struct_variable_declaration_list)


State 1119

  132 optional_annotation_list_with_emit_semis: '[' . annotation_list ']' optional_emit_semis

    "require"  shift, and go to state 58
    "private"  shift, and go to state 59
    "|>"       shift, and go to state 60
    "::"       shift, and go to state 55
    "name"     shift, and go to state 56
    '!'        shift, and go to state 61
    '('        shift, and go to state 62

    annotation_declaration_name   go to state 63
    annotation_declaration_basic  go to state 64
    annotation_declaration        go to state 65
    annotation_list               go to state 1229
    name_in_namespace             go to state 67


State 1120

  612 optional_struct_variable_declaration_list: '{' struct_variable_declaration_list '}' .

    $default  reduce using rule 612 (optional_struct_variable_declaration_list)


State 1121

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header SEMICOLON
  514                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header optional_emit_semis expression_block

    "def"  shift, and go to state 1230


State 1122

  510 struct_variable_declaration_list: struct_variable_declaration_list $@33 . structure_variable_declaration SEMICOLON

    '@'  shift, and go to state 212

    $default  reduce using rule 494 (optional_field_annotation)

    metadata_argument_list          go to state 213
    optional_field_annotation       go to state 1231
    structure_variable_declaration  go to state 1232


State 1123

  545 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 545 (let_variable_name_with_pos_list)


State 1124

  548 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1233


State 1125

  554 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options SEMICOLON .

    $default  reduce using rule 554 (let_variable_declaration)


State 1126

  555 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1234
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1127

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  556 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . SEMICOLON

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1235


State 1128

  558 global_let_variable_declaration: global_let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr ';' .

    $default  reduce using rule 558 (global_let_variable_declaration)


State 1129

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' . $@87 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 784 ($@87)

    $@87  go to state 1236


State 1130

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' . $@89 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 787 ($@89)

    $@89  go to state 1237


State 1131

  273 new_type_declaration: '<' $@11 type_declaration '>' . $@12

    $default  reduce using rule 272 ($@12)

    $@12  go to state 1238


State 1132

  279 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1239


State 1133

  277 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 277 (expr_new)


State 1134

  278 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 278 (expr_new)


State 1135

  276 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 276 (expr_new)


State 1136

  316 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1240


State 1137

  317 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1241


State 1138

  315 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 315 (expr_type_info)


State 1139

  314 expr_type_decl: "type" '<' $@19 type_declaration '>' . $@20

    $default  reduce using rule 313 ($@20)

    $@20  go to state 1242


State 1140

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options . '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1243


State 1141

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options . '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    '>'  shift, and go to state 1244


State 1142

  810 make_dim_decl: "array" "variant" '<' $@100 type_declaration_no_options . '>' $@101 '(' make_variant_dim ')'

    '>'  shift, and go to state 1245


State 1143

  814 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' . $@103 '(' optional_expr_list ')'

    $default  reduce using rule 813 ($@103)

    $@103  go to state 1246


State 1144

  811 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 811 (make_dim_decl)


State 1145

  823 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 262 (optional_expr_map_tuple_list)

    string_builder                go to state 461
    expr_reader                   go to state 462
    expr_call_pipe                go to state 463
    optional_expr_map_tuple_list  go to state 1247
    name_in_namespace             go to state 464
    expr_new                      go to state 465
    expr_cast                     go to state 466
    expr_type_decl                go to state 467
    expr_type_info                go to state 468
    block_or_lambda               go to state 469
    expr_full_block               go to state 470
    expr_numeric_const            go to state 471
    expr_named_call               go to state 472
    expr_method_call              go to state 473
    func_addr_expr                go to state 474
    expr_field                    go to state 475
    expr_call                     go to state 476
    expr                          go to state 594
    expr_generator                go to state 478
    expr_mtag                     go to state 479
    basic_type_declaration        go to state 480
    make_decl                     go to state 481
    make_struct_decl              go to state 482
    make_map_tuple                go to state 595
    make_tuple_call               go to state 483
    make_dim_decl                 go to state 484
    expr_map_tuple_list           go to state 1248
    make_table_decl               go to state 485
    array_comprehension           go to state 486


State 1146

  824 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    '>'  shift, and go to state 1249


State 1147

  822 make_table_decl: "table" '(' expr_map_tuple_list optional_comma ')' .

    $default  reduce using rule 822 (make_table_decl)


State 1148

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' . $@14 expr

    $default  reduce using rule 304 ($@14)

    $@14  go to state 1250


State 1149

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' . $@16 expr

    $default  reduce using rule 307 ($@16)

    $@16  go to state 1251


State 1150

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' . $@18 expr

    $default  reduce using rule 310 ($@18)

    $@18  go to state 1252


State 1151

  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' . $@105 '(' expr_list optional_comma ')'

    $default  reduce using rule 817 ($@105)

    $@105  go to state 1253


State 1152

  815 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 815 (make_dim_decl)


State 1153

  794 make_struct_decl: "default" '<' $@92 type_declaration_no_options '>' . $@93 use_initializer

    $default  reduce using rule 793 ($@93)

    $@93  go to state 1254


State 1154

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' . $@95 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 799 ($@95)

    $@95  go to state 1255


State 1155

  797 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 797 (make_tuple_call)


State 1156

  791 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' . $@91 '(' make_variant_dim ')'

    $default  reduce using rule 790 ($@91)

    $@91  go to state 1256


State 1157

  475 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  476               | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'
  477               | "generator" '<' type_declaration_no_options '>' optional_capture_list . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171
    '('          shift, and go to state 1257

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1258


State 1158

  484 expr_mtag: "$c" '(' expr ')' '(' . ')'
  485          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1259
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1260
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1159

   35 string_builder_body: string_builder_body "{" expr "}" .

    $default  reduce using rule 35 (string_builder_body)


State 1160

  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1261
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1161

  620 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  621                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list . "in" expr_list ')' ';' expr array_comprehension_where ']'

    "in"  shift, and go to state 1262
    ','   shift, and go to state 886


State 1162

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  369 func_addr_name: "$i" '(' expr . ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1263


State 1163

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  493          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1264


State 1164

  373 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options . '>' $@22 func_addr_name

    '>'  shift, and go to state 1265


State 1165

  376 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list . optional_function_type '>' $@24 func_addr_name

    ':'  shift, and go to state 387

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1266


State 1166

  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1267
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1167

  389 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 389 (expr_call)


State 1168

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  769 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  770                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1268


State 1169

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  766 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 766 (make_struct_fields)


State 1170

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  765 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 765 (make_struct_fields)


State 1171

  364 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1269


State 1172

  365 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  801 make_dim_decl: '[' . expr_list optional_comma ']'
  829 array_comprehension: '[' . "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'
  830                    | '[' . "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "for"                             shift, and go to state 587
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "iterator"                        shift, and go to state 588
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "$f"                              shift, and go to state 790
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 791
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 589
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_fields      go to state 1270
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1173

  771 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  772                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1271


State 1174

  767 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  768                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1272
    '='   shift, and go to state 887

    copy_or_move  go to state 1273


State 1175

  328 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1274


State 1176

  329 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1275


State 1177

  330 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1276


State 1178

  327 capture_entry: '=' . "name"

    "name"  shift, and go to state 1277


State 1179

  326 capture_entry: '&' . "name"

    "name"  shift, and go to state 1278


State 1180

  331 capture_list: capture_entry .

    $default  reduce using rule 331 (capture_list)


State 1181

  332 capture_list: capture_list . ',' capture_entry
  334 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1279
    ')'  shift, and go to state 1280


State 1182

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis block_or_simple_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1281


State 1183

  336 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type optional_emit_semis expression_block

    ':'  shift, and go to state 387

    $default  reduce using rule 136 (optional_function_type)

    optional_function_type  go to state 1282


State 1184

  450 expr: expr "is" "type" '<' $@27 . type_declaration_no_options '>' $@28

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 1283
    type_declaration_no_options_no_dim  go to state 267


State 1185

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  492          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1284


State 1186

  456 expr: expr "as" "type" '<' $@29 . type_declaration '>' $@30

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 1285


State 1187

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  490          | expr "as" "$f" '(' expr . ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1286


State 1188

  366 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 366 (expr_method_call)


State 1189

  319 expr_list: expr_list . ',' expr
  367 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1287


State 1190

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  487          | expr "?." "$f" '(' expr . ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1288


State 1191

  461 expr: expr '?' "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 459 ($@31)

    $@31  go to state 1289


State 1192

  491 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1290
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1193

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  447     | expr '?' expr ':' expr .
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 447 (expr)


State 1194

  489 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1291
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1195

  437 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 437 (expr)


State 1196

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  486          | expr '.' "$f" '(' expr . ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1292


State 1197

  379 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 379 (expr_field)


State 1198

  319 expr_list: expr_list . ',' expr
  380 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1293


State 1199

  488 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1294
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1200

  435 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 435 (expr)


State 1201

  385 expr_field: expr '.' $@25 error $@26 .

    $default  reduce using rule 385 (expr_field)


State 1202

  381 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 381 (expr_field)


State 1203

  319 expr_list: expr_list . ',' expr
  382 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1295


State 1204

  721 type_declaration_no_options_no_dim: "block" '<' $@60 optional_function_argument_list optional_function_type '>' $@61 .

    $default  reduce using rule 721 (type_declaration_no_options_no_dim)


State 1205

  728 type_declaration_no_options_no_dim: "function" '<' $@64 optional_function_argument_list optional_function_type '>' $@65 .

    $default  reduce using rule 728 (type_declaration_no_options_no_dim)


State 1206

  735 type_declaration_no_options_no_dim: "lambda" '<' $@68 optional_function_argument_list optional_function_type '>' $@69 .

    $default  reduce using rule 735 (type_declaration_no_options_no_dim)


State 1207

  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@49 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 260 (optional_expr_list)

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    optional_expr_list      go to state 1296
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 661
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1208

  265 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371

    $default  reduce using rule 265 (type_declaration_no_options_list)


State 1209

  759 bitfield_alias_declaration: "bitfield" $@82 optional_public_or_private_alias "name" optional_emit_commas $@83 '{' $@84 bitfield_alias_bits optional_commas $@85 '}' .

    $default  reduce using rule 759 (bitfield_alias_declaration)


State 1210

  749 tuple_alias_declaration: "tuple" $@74 optional_public_or_private_alias "name" optional_emit_semis $@75 '{' $@76 tuple_alias_type_list optional_semis $@77 '}' .

    $default  reduce using rule 749 (tuple_alias_declaration)


State 1211

  754 variant_alias_declaration: "variant" $@78 optional_public_or_private_alias "name" optional_emit_semis $@79 '{' $@80 variant_alias_type_list optional_semis $@81 '}' .

    $default  reduce using rule 754 (variant_alias_declaration)


State 1212

  618 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 618 (variable_name_with_pos_list)


State 1213

  621 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1297


State 1214

  537 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1298
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1215

  288 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 288 (expression_try_catch)


State 1216

   91 expression_with_alias: "assume" "name" '=' expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 91 (expression_with_alias)


State 1217

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr . ')' expression_else_one_liner SEMICOLON
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1299


State 1218

   82 expression_if_then_else: $@2 if_or_static_if '(' expr . ')' optional_emit_semis expression_block expression_else
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1300


State 1219

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list . "in" expr_list ')' optional_emit_semis expression_block
  620 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  621                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1301
    ','   shift, and go to state 886


State 1220

   88 expression_while_loop: $@4 "while" '(' expr . ')' optional_emit_semis expression_block
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1302


State 1221

   90 expression_with: $@5 "with" '(' expr . ')' optional_emit_semis expression_block
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1303


State 1222

  233 expression_block_finally: "finally" $@7 . '{' expressions $@8 '}'

    '{'  shift, and go to state 1304


State 1223

  296 tuple_expansion: "name" .

    $default  reduce using rule 296 (tuple_expansion)


State 1224

  297 tuple_expansion: tuple_expansion . ',' "name"
  298 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  299                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr SEMICOLON

    ','  shift, and go to state 1305
    ')'  shift, and go to state 1306


State 1225

  302 expression_let: kwd_let optional_in_scope '{' variable_declaration_list . '}'
  552 variable_declaration_list: variable_declaration_list . ';'
  553                          | variable_declaration_list . let_variable_declaration

    "$i"    shift, and go to state 530
    "name"  shift, and go to state 531
    ';'     shift, and go to state 1307
    '}'     shift, and go to state 1308

    let_variable_name_with_pos_list  go to state 532
    let_variable_declaration         go to state 1309


State 1226

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  573 enum_expression: "name" '=' expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 573 (enum_expression)


State 1227

  578 enum_list: enum_list commas enum_expression .

    $default  reduce using rule 578 (enum_list)


State 1228

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 . '}'

    '}'  shift, and go to state 1310


State 1229

  128 annotation_list: annotation_list . ',' annotation_declaration
  132 optional_annotation_list_with_emit_semis: '[' annotation_list . ']' optional_emit_semis

    ','  shift, and go to state 102
    ']'  shift, and go to state 1311


State 1230

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header SEMICOLON
  514                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header optional_emit_semis expression_block

    "public"   shift, and go to state 1312
    "private"  shift, and go to state 1313

    $default  reduce using rule 501 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1314


State 1231

  506 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1315

    $default  reduce using rule 504 (optional_static_member_variable)

    optional_static_member_variable  go to state 1316


State 1232

  510 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1317


State 1233

  548 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 548 (let_variable_name_with_pos_list)


State 1234

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  555 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1318


State 1235

  556 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 556 (let_variable_declaration)


State 1236

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1319


State 1237

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1320


State 1238

  273 new_type_declaration: '<' $@11 type_declaration '>' $@12 .

    $default  reduce using rule 273 (new_type_declaration)


State 1239

  279 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 279 (expr_new)


State 1240

  316 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1321
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1241

  317 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1322


State 1242

  314 expr_type_decl: "type" '<' $@19 type_declaration '>' $@20 .

    $default  reduce using rule 314 (expr_type_decl)


State 1243

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options '>' . $@97 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 803 ($@97)

    $@97  go to state 1323


State 1244

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options '>' . $@99 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 806 ($@99)

    $@99  go to state 1324


State 1245

  810 make_dim_decl: "array" "variant" '<' $@100 type_declaration_no_options '>' . $@101 '(' make_variant_dim ')'

    $default  reduce using rule 809 ($@101)

    $@101  go to state 1325


State 1246

  814 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 . '(' optional_expr_list ')'

    '('  shift, and go to state 1326


State 1247

  823 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1327


State 1248

  263 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  820 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 787

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 1328


State 1249

  824 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1329


State 1250

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1330
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1251

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1331
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1252

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1332
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1253

  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1333


State 1254

  794 make_struct_decl: "default" '<' $@92 type_declaration_no_options '>' $@93 . use_initializer

    "uninitialized"  shift, and go to state 1334

    $default  reduce using rule 781 (use_initializer)

    use_initializer  go to state 1335


State 1255

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1336


State 1256

  791 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 . '(' make_variant_dim ')'

    '('  shift, and go to state 1337


State 1257

  475 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  476               | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    ')'                               shift, and go to state 1338
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1339
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1258

  477 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1340
    $@9               go to state 330


State 1259

  484 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 484 (expr_mtag)


State 1260

  319 expr_list: expr_list . ',' expr
  485 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1341


State 1261

  319 expr_list: expr_list . ',' expr
  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1342


State 1262

  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" . expr_list ')' ';' expr array_comprehension_where ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1343
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1263

  369 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 369 (func_addr_name)


State 1264

  493 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 493 (expr_mtag)


State 1265

  373 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' . $@22 func_addr_name

    $default  reduce using rule 372 ($@22)

    $@22  go to state 1344


State 1266

  376 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type . '>' $@24 func_addr_name

    '>'  shift, and go to state 1345


State 1267

  319 expr_list: expr_list . ',' expr
  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' make_map_tuple array_comprehension_where '}'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1346


State 1268

  769 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  770                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1347
    '='   shift, and go to state 887

    copy_or_move  go to state 1348


State 1269

  364 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 364 (expr_named_call)


State 1270

  365 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  767 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  768                   | make_struct_fields . ',' "name" ":=" expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 1016
    ']'  shift, and go to state 1349


State 1271

  771 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  772                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1350
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1272

  768 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1351
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1273

  767 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1352
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1274

  328 capture_entry: "<-" "name" .

    $default  reduce using rule 328 (capture_entry)


State 1275

  329 capture_entry: ":=" "name" .

    $default  reduce using rule 329 (capture_entry)


State 1276

  330 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1353


State 1277

  327 capture_entry: '=' "name" .

    $default  reduce using rule 327 (capture_entry)


State 1278

  326 capture_entry: '&' "name" .

    $default  reduce using rule 326 (capture_entry)


State 1279

  332 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1175
    ":="    shift, and go to state 1176
    "name"  shift, and go to state 1177
    '='     shift, and go to state 1178
    '&'     shift, and go to state 1179

    capture_entry  go to state 1354


State 1280

  334 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 334 (optional_capture_list)


State 1281

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . block_or_simple_block

    "=>"  shift, and go to state 1355

    $default  reduce using rule 234 ($@9)

    expression_block       go to state 1356
    $@9                    go to state 330
    block_or_simple_block  go to state 1357


State 1282

  336 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1358


State 1283

  450 expr: expr "is" "type" '<' $@27 type_declaration_no_options . '>' $@28

    '>'  shift, and go to state 1359


State 1284

  492 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 492 (expr_mtag)


State 1285

  456 expr: expr "as" "type" '<' $@29 type_declaration . '>' $@30
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 1360


State 1286

  490 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 490 (expr_mtag)


State 1287

  367 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 367 (expr_method_call)


State 1288

  487 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 487 (expr_mtag)


State 1289

  461 expr: expr '?' "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 266
    type_declaration_no_options_no_dim  go to state 267
    type_declaration                    go to state 1361


State 1290

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  491          | expr '?' "as" "$f" '(' expr . ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1362


State 1291

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  489          | expr '.' "?." "$f" '(' expr . ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1363


State 1292

  486 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 486 (expr_mtag)


State 1293

  380 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 380 (expr_field)


State 1294

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  488          | expr '.' '.' "$f" '(' expr . ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1364


State 1295

  382 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 382 (expr_field)


State 1296

  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@49 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1365


State 1297

  621 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 621 (variable_name_with_pos_list)


State 1298

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  537 variable_declaration: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 537 (variable_declaration)


State 1299

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' . expression_else_one_liner SEMICOLON

    "else"  shift, and go to state 1366

    $default  reduce using rule 70 (expression_else_one_liner)

    expression_else_one_liner  go to state 1367


State 1300

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' . optional_emit_semis expression_block expression_else

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1368


State 1301

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" . expr_list ')' optional_emit_semis expression_block

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1369
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1302

   88 expression_while_loop: $@4 "while" '(' expr ')' . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1370


State 1303

   90 expression_with: $@5 "with" '(' expr ')' . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1371


State 1304

  233 expression_block_finally: "finally" $@7 '{' . expressions $@8 '}'

    $default  reduce using rule 257 (expressions)

    expressions  go to state 1372


State 1305

  297 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1373


State 1306

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON
  299                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr SEMICOLON

    ':'  shift, and go to state 1374
    '&'  shift, and go to state 407

    $default  reduce using rule 542 (optional_ref)

    optional_ref  go to state 1375


State 1307

  552 variable_declaration_list: variable_declaration_list ';' .

    $default  reduce using rule 552 (variable_declaration_list)


State 1308

  302 expression_let: kwd_let optional_in_scope '{' variable_declaration_list '}' .

    $default  reduce using rule 302 (expression_let)


State 1309

  553 variable_declaration_list: variable_declaration_list let_variable_declaration .

    $default  reduce using rule 553 (variable_declaration_list)


State 1310

  600 enum_declaration: optional_annotation_list "enum" $@39 optional_public_or_private_enum enum_name optional_enum_basic_type_declaration optional_emit_commas '{' $@40 enum_list optional_commas $@41 '}' .

    $default  reduce using rule 600 (enum_declaration)


State 1311

  132 optional_annotation_list_with_emit_semis: '[' annotation_list ']' . optional_emit_semis

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1376


State 1312

  502 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 502 (optional_public_or_private_member_variable)


State 1313

  503 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 503 (optional_public_or_private_member_variable)


State 1314

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . "abstract" optional_constant $@34 function_declaration_header SEMICOLON
  514                                 | struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@35 function_declaration_header optional_emit_semis expression_block

    "abstract"  shift, and go to state 1377
    "static"    shift, and go to state 1315

    $default  reduce using rule 504 (optional_static_member_variable)

    optional_static_member_variable  go to state 1378


State 1315

  505 optional_static_member_variable: "static" .

    $default  reduce using rule 505 (optional_static_member_variable)


State 1316

  506 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1379
    "sealed"    shift, and go to state 1380

    $default  reduce using rule 496 (optional_override)

    optional_override  go to state 1381


State 1317

  510 struct_variable_declaration_list: struct_variable_declaration_list $@33 structure_variable_declaration SEMICOLON .

    $default  reduce using rule 510 (struct_variable_declaration_list)


State 1318

  555 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 555 (let_variable_declaration)


State 1319

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1334

    $default  reduce using rule 781 (use_initializer)

    use_initializer  go to state 1382


State 1320

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1334

    $default  reduce using rule 781 (use_initializer)

    use_initializer  go to state 1383


State 1321

  316 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1384


State 1322

  317 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' . '(' expr ')'

    '('  shift, and go to state 1385


State 1323

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options '>' $@97 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1386


State 1324

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options '>' $@99 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1387


State 1325

  810 make_dim_decl: "array" "variant" '<' $@100 type_declaration_no_options '>' $@101 . '(' make_variant_dim ')'

    '('  shift, and go to state 1388


State 1326

  814 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 260 (optional_expr_list)

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    optional_expr_list      go to state 1389
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 661
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1327

  823 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 823 (make_table_decl)


State 1328

  263 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 263 (optional_expr_map_tuple_list)


State 1329

  824 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    $default  reduce using rule 262 (optional_expr_map_tuple_list)

    string_builder                go to state 461
    expr_reader                   go to state 462
    expr_call_pipe                go to state 463
    optional_expr_map_tuple_list  go to state 1390
    name_in_namespace             go to state 464
    expr_new                      go to state 465
    expr_cast                     go to state 466
    expr_type_decl                go to state 467
    expr_type_info                go to state 468
    block_or_lambda               go to state 469
    expr_full_block               go to state 470
    expr_numeric_const            go to state 471
    expr_named_call               go to state 472
    expr_method_call              go to state 473
    func_addr_expr                go to state 474
    expr_field                    go to state 475
    expr_call                     go to state 476
    expr                          go to state 594
    expr_generator                go to state 478
    expr_mtag                     go to state 479
    basic_type_declaration        go to state 480
    make_decl                     go to state 481
    make_struct_decl              go to state 482
    make_map_tuple                go to state 595
    make_tuple_call               go to state 483
    make_dim_decl                 go to state 484
    expr_map_tuple_list           go to state 1248
    make_table_decl               go to state 485
    array_comprehension           go to state 486


State 1330

  305 expr_cast: "cast" '<' $@13 type_declaration_no_options '>' $@14 expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 305 (expr_cast)


State 1331

  308 expr_cast: "upcast" '<' $@15 type_declaration_no_options '>' $@16 expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 308 (expr_cast)


State 1332

  311 expr_cast: "reinterpret" '<' $@17 type_declaration_no_options '>' $@18 expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 311 (expr_cast)


State 1333

  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    expr_list               go to state 1391
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 590
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1334

  782 use_initializer: "uninitialized" .

    $default  reduce using rule 782 (use_initializer)


State 1335

  794 make_struct_decl: "default" '<' $@92 type_declaration_no_options '>' $@93 use_initializer .

    $default  reduce using rule 794 (make_struct_decl)


State 1336

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1334

    $default  reduce using rule 781 (use_initializer)

    use_initializer  go to state 1392


State 1337

  791 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007

    make_struct_fields  go to state 1393
    make_variant_dim    go to state 1394


State 1338

  475 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 475 (expr_generator)


State 1339

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  476 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1395


State 1340

  477 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list optional_emit_semis expression_block .

    $default  reduce using rule 477 (expr_generator)


State 1341

  485 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 485 (expr_mtag)


State 1342

  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1396


State 1343

  319 expr_list: expr_list . ',' expr
  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list . ')' ';' expr array_comprehension_where ']'

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1397


State 1344

  373 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 780
    "name"  shift, and go to state 56

    name_in_namespace  go to state 783
    func_addr_name     go to state 1398


State 1345

  376 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' . $@24 func_addr_name

    $default  reduce using rule 375 ($@24)

    $@24  go to state 1399


State 1346

  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' make_map_tuple array_comprehension_where '}'

    ';'  shift, and go to state 1400


State 1347

  770 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1401
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1348

  769 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1402
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1349

  365 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1403


State 1350

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  772                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1404


State 1351

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  768 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 768 (make_struct_fields)


State 1352

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  767 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 767 (make_struct_fields)


State 1353

  330 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1405


State 1354

  332 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 332 (capture_list)


State 1355

  321 block_or_simple_block: "=>" . expr
  322                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "<-"                              shift, and go to state 1406
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1407
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1356

  320 block_or_simple_block: expression_block .

    $default  reduce using rule 320 (block_or_simple_block)


State 1357

  335 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis block_or_simple_block .

    $default  reduce using rule 335 (expr_full_block)


State 1358

  336 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1408
    $@9               go to state 330


State 1359

  450 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' . $@28

    $default  reduce using rule 449 ($@28)

    $@28  go to state 1409


State 1360

  456 expr: expr "as" "type" '<' $@29 type_declaration '>' . $@30

    $default  reduce using rule 455 ($@30)

    $@30  go to state 1410


State 1361

  461 expr: expr '?' "as" "type" '<' $@31 type_declaration . '>' $@32
  743 type_declaration: type_declaration . '|' type_declaration_no_options
  744                 | type_declaration . '|' '#'

    '|'  shift, and go to state 371
    '>'  shift, and go to state 1411


State 1362

  491 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 491 (expr_mtag)


State 1363

  489 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 489 (expr_mtag)


State 1364

  488 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 488 (expr_mtag)


State 1365

  689 type_declaration_no_options_no_dim: '$' name_in_namespace '<' $@49 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 689 (type_declaration_no_options_no_dim)


State 1366

   71 expression_else_one_liner: "else" . expression_if_one_liner

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 420
    "break"                           shift, and go to state 680
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "continue"                        shift, and go to state 684
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder           go to state 461
    expr_reader              go to state 462
    expression_if_one_liner  go to state 1412
    expr_call_pipe           go to state 463
    name_in_namespace        go to state 464
    expr_new                 go to state 465
    expression_break         go to state 1413
    expression_continue      go to state 1414
    expression_return        go to state 1415
    expression_yield         go to state 1416
    expr_cast                go to state 466
    expr_type_decl           go to state 467
    expr_type_info           go to state 468
    block_or_lambda          go to state 469
    expr_full_block          go to state 470
    expr_numeric_const       go to state 471
    expr_named_call          go to state 472
    expr_method_call         go to state 473
    func_addr_expr           go to state 474
    expr_field               go to state 475
    expr_call                go to state 476
    expr                     go to state 1417
    expr_generator           go to state 478
    expr_mtag                go to state 479
    basic_type_declaration   go to state 480
    make_decl                go to state 481
    make_struct_decl         go to state 482
    make_tuple_call          go to state 483
    make_dim_decl            go to state 484
    make_table_decl          go to state 485
    array_comprehension      go to state 486


State 1367

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1418


State 1368

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1419
    $@9               go to state 330


State 1369

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list . ')' optional_emit_semis expression_block
  319 expr_list: expr_list . ',' expr

    ','  shift, and go to state 1045
    ')'  shift, and go to state 1420


State 1370

   88 expression_while_loop: $@4 "while" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1421
    $@9               go to state 330


State 1371

   90 expression_with: $@5 "with" '(' expr ')' optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1422
    $@9               go to state 330


State 1372

  233 expression_block_finally: "finally" $@7 '{' expressions . $@8 '}'
  258 expressions: expressions . expression_any
  259            | expressions . error

    error                             shift, and go to state 678
    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "let"                             shift, and go to state 3
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "return"                          shift, and go to state 679
    "null"                            shift, and go to state 420
    "break"                           shift, and go to state 680
    "try"                             shift, and go to state 681
    "table"                           shift, and go to state 421
    "delete"                          shift, and go to state 682
    "deref"                           shift, and go to state 422
    "assume"                          shift, and go to state 683
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 425
    "continue"                        shift, and go to state 684
    "pass"                            shift, and go to state 685
    "reinterpret"                     shift, and go to state 426
    "label"                           shift, and go to state 686
    "goto"                            shift, and go to state 687
    "unsafe"                          shift, and go to state 688
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "yield"                           shift, and go to state 689
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "emitted ;"                       shift, and go to state 690
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    ';'                               shift, and go to state 691
    '{'                               shift, and go to state 460

    "while"      reduce using rule 87 ($@4)
    "if"         reduce using rule 81 ($@2)
    "static_if"  reduce using rule 81 ($@2)
    "for"        reduce using rule 84 ($@3)
    "with"       reduce using rule 89 ($@5)
    '}'          reduce using rule 232 ($@8)

    SEMICOLON                         go to state 692
    string_builder                    go to state 461
    expr_reader                       go to state 462
    expression_label                  go to state 693
    expression_goto                   go to state 694
    expression_if_one_liner           go to state 695
    expression_if_then_else           go to state 696
    $@2                               go to state 697
    expression_if_then_else_oneliner  go to state 698
    expression_for_loop               go to state 699
    $@3                               go to state 700
    expression_unsafe                 go to state 701
    expression_while_loop             go to state 702
    $@4                               go to state 703
    expression_with                   go to state 704
    $@5                               go to state 705
    expression_with_alias             go to state 706
    $@8                               go to state 1423
    expr_call_pipe                    go to state 463
    expression_any                    go to state 708
    name_in_namespace                 go to state 464
    expression_delete                 go to state 709
    expr_new                          go to state 465
    expression_break                  go to state 710
    expression_continue               go to state 711
    expression_return                 go to state 712
    expression_yield                  go to state 713
    expression_try_catch              go to state 714
    kwd_let                           go to state 715
    expression_let                    go to state 716
    expr_cast                         go to state 466
    expr_type_decl                    go to state 467
    expr_type_info                    go to state 468
    block_or_lambda                   go to state 469
    expr_full_block                   go to state 470
    expr_numeric_const                go to state 471
    expr_assign                       go to state 717
    expr_named_call                   go to state 472
    expr_method_call                  go to state 473
    func_addr_expr                    go to state 474
    expr_field                        go to state 475
    expr_call                         go to state 476
    expr                              go to state 718
    expr_generator                    go to state 478
    expr_mtag                         go to state 479
    basic_type_declaration            go to state 480
    make_decl                         go to state 481
    make_struct_decl                  go to state 482
    make_tuple_call                   go to state 483
    make_dim_decl                     go to state 484
    make_table_decl                   go to state 485
    array_comprehension               go to state 486


State 1373

  297 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 297 (tuple_expansion)


State 1374

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr SEMICOLON

    "type"       shift, and go to state 220
    "array"      shift, and go to state 221
    "table"      shift, and go to state 222
    "typedecl"   shift, and go to state 223
    "iterator"   shift, and go to state 224
    "smart_ptr"  shift, and go to state 225
    "bool"       shift, and go to state 226
    "void"       shift, and go to state 227
    "string"     shift, and go to state 228
    "auto"       shift, and go to state 229
    "int"        shift, and go to state 230
    "int2"       shift, and go to state 231
    "int3"       shift, and go to state 232
    "int4"       shift, and go to state 233
    "uint"       shift, and go to state 234
    "bitfield"   shift, and go to state 235
    "uint2"      shift, and go to state 236
    "uint3"      shift, and go to state 237
    "uint4"      shift, and go to state 238
    "float"      shift, and go to state 239
    "float2"     shift, and go to state 240
    "float3"     shift, and go to state 241
    "float4"     shift, and go to state 242
    "range"      shift, and go to state 243
    "urange"     shift, and go to state 244
    "range64"    shift, and go to state 245
    "urange64"   shift, and go to state 246
    "block"      shift, and go to state 247
    "int64"      shift, and go to state 248
    "uint64"     shift, and go to state 249
    "double"     shift, and go to state 250
    "function"   shift, and go to state 251
    "lambda"     shift, and go to state 252
    "int8"       shift, and go to state 253
    "uint8"      shift, and go to state 254
    "int16"      shift, and go to state 255
    "uint16"     shift, and go to state 256
    "tuple"      shift, and go to state 257
    "variant"    shift, and go to state 258
    "::"         shift, and go to state 55
    "$t"         shift, and go to state 259
    "name"       shift, and go to state 56
    '$'          shift, and go to state 260

    name_in_namespace                   go to state 261
    basic_type_declaration              go to state 262
    structure_type_declaration          go to state 263
    auto_type_declaration               go to state 264
    bitfield_type_declaration           go to state 265
    type_declaration_no_options         go to state 1424
    type_declaration_no_options_no_dim  go to state 267


State 1375

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 1425


State 1376

  132 optional_annotation_list_with_emit_semis: '[' annotation_list ']' optional_emit_semis .

    $default  reduce using rule 132 (optional_annotation_list_with_emit_semis)


State 1377

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" . optional_constant $@34 function_declaration_header SEMICOLON

    "const"  shift, and go to state 1426

    $default  reduce using rule 499 (optional_constant)

    optional_constant  go to state 1427


State 1378

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@35 function_declaration_header optional_emit_semis expression_block

    "override"  shift, and go to state 1379
    "sealed"    shift, and go to state 1380

    $default  reduce using rule 496 (optional_override)

    optional_override  go to state 1428


State 1379

  497 optional_override: "override" .

    $default  reduce using rule 497 (optional_override)


State 1380

  498 optional_override: "sealed" .

    $default  reduce using rule 498 (optional_override)


State 1381

  506 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1312
    "private"  shift, and go to state 1313

    $default  reduce using rule 501 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1429


State 1382

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1430

    $default  reduce using rule 780 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1434


State 1383

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1430

    $default  reduce using rule 780 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1435


State 1384

  316 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 316 (expr_type_info)


State 1385

  317 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1436
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1386

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options '>' $@97 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1334

    $default  reduce using rule 781 (use_initializer)

    use_initializer  go to state 1437


State 1387

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options '>' $@99 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1334

    $default  reduce using rule 781 (use_initializer)

    use_initializer  go to state 1438


State 1388

  810 make_dim_decl: "array" "variant" '<' $@100 type_declaration_no_options '>' $@101 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007

    make_struct_fields  go to state 1393
    make_variant_dim    go to state 1439


State 1389

  814 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1440


State 1390

  824 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1441


State 1391

  319 expr_list: expr_list . ',' expr
  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 777

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 1442


State 1392

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1430

    $default  reduce using rule 780 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1443


State 1393

  767 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  768                   | make_struct_fields . ',' "name" ":=" expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  773 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 1016

    $default  reduce using rule 773 (make_variant_dim)


State 1394

  791 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1444


State 1395

  476 expr_generator: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 476 (expr_generator)


State 1396

  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1445
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1397

  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' . ';' expr array_comprehension_where ']'

    ';'  shift, and go to state 1446


State 1398

  373 func_addr_expr: '@' '@' '<' $@21 type_declaration_no_options '>' $@22 func_addr_name .

    $default  reduce using rule 373 (func_addr_expr)


State 1399

  376 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 . func_addr_name

    "::"    shift, and go to state 55
    "$i"    shift, and go to state 780
    "name"  shift, and go to state 56

    name_in_namespace  go to state 783
    func_addr_name     go to state 1447


State 1400

  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . make_map_tuple array_comprehension_where '}'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 594
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_map_tuple          go to state 1448
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1401

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  770 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 770 (make_struct_fields)


State 1402

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  769 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 769 (make_struct_fields)


State 1403

  365 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 365 (expr_named_call)


State 1404

  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  772                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 885
    ":="  shift, and go to state 1449
    '='   shift, and go to state 887

    copy_or_move  go to state 1450


State 1405

  330 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 330 (capture_entry)


State 1406

  322 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1451
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1407

  321 block_or_simple_block: "=>" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    ".."  error (nonassociative)

    $default  reduce using rule 321 (block_or_simple_block)


State 1408

  336 expr_full_block_assumed_piped: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type optional_emit_semis expression_block .

    $default  reduce using rule 336 (expr_full_block_assumed_piped)


State 1409

  450 expr: expr "is" "type" '<' $@27 type_declaration_no_options '>' $@28 .

    $default  reduce using rule 450 (expr)


State 1410

  456 expr: expr "as" "type" '<' $@29 type_declaration '>' $@30 .

    $default  reduce using rule 456 (expr)


State 1411

  461 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 460 ($@32)

    $@32  go to state 1452


State 1412

   71 expression_else_one_liner: "else" expression_if_one_liner .

    $default  reduce using rule 71 (expression_else_one_liner)


State 1413

   75 expression_if_one_liner: expression_break .

    $default  reduce using rule 75 (expression_if_one_liner)


State 1414

   76 expression_if_one_liner: expression_continue .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1415

   73 expression_if_one_liner: expression_return .

    $default  reduce using rule 73 (expression_if_one_liner)


State 1416

   74 expression_if_one_liner: expression_yield .

    $default  reduce using rule 74 (expression_if_one_liner)


State 1417

   72 expression_if_one_liner: expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 72 (expression_if_one_liner)


State 1418

   83 expression_if_then_else_oneliner: expression_if_one_liner "if" '(' expr ')' expression_else_one_liner SEMICOLON .

    $default  reduce using rule 83 (expression_if_then_else_oneliner)


State 1419

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1453
    "elif"         shift, and go to state 1454
    "static_elif"  shift, and go to state 1455

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1456
    expression_else      go to state 1457


State 1420

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1458


State 1421

   88 expression_while_loop: $@4 "while" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 88 (expression_while_loop)


State 1422

   90 expression_with: $@5 "with" '(' expr ')' optional_emit_semis expression_block .

    $default  reduce using rule 90 (expression_with)


State 1423

  233 expression_block_finally: "finally" $@7 '{' expressions $@8 . '}'

    '}'  shift, and go to state 1459


State 1424

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr SEMICOLON

    "<-"  shift, and go to state 537
    ":="  shift, and go to state 538
    '='   shift, and go to state 539

    copy_or_move_or_clone  go to state 1460


State 1425

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1461
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1426

  500 optional_constant: "const" .

    $default  reduce using rule 500 (optional_constant)


State 1427

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant . $@34 function_declaration_header SEMICOLON

    $default  reduce using rule 511 ($@34)

    $@34  go to state 1462


State 1428

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@35 function_declaration_header optional_emit_semis expression_block

    "const"  shift, and go to state 1426

    $default  reduce using rule 499 (optional_constant)

    optional_constant  go to state 1463


State 1429

  506 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 673
    "name"  shift, and go to state 674

    variable_declaration         go to state 1464
    variable_name_with_pos_list  go to state 676


State 1430

  775 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007

    make_struct_fields  go to state 1465


State 1431

  767 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  768                   | make_struct_fields . ',' "name" ":=" expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  777 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 1016

    $default  reduce using rule 777 (make_struct_dim_decl)


State 1432

  776 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  778 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1466

    $default  reduce using rule 827 (optional_comma)

    optional_comma  go to state 1467


State 1433

  779 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 779 (optional_make_struct_dim_decl)


State 1434

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1468


State 1435

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1469


State 1436

  317 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr . ')'
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1470


State 1437

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1430

    $default  reduce using rule 780 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1471


State 1438

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007
    '('     shift, and go to state 1430

    $default  reduce using rule 780 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1431
    make_struct_dim_list           go to state 1432
    make_struct_dim_decl           go to state 1433
    optional_make_struct_dim_decl  go to state 1472


State 1439

  810 make_dim_decl: "array" "variant" '<' $@100 type_declaration_no_options '>' $@101 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1473


State 1440

  814 make_dim_decl: "array" '<' $@102 type_declaration_no_options '>' $@103 '(' optional_expr_list ')' .

    $default  reduce using rule 814 (make_dim_decl)


State 1441

  824 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 824 (make_table_decl)


State 1442

  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1474


State 1443

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1475


State 1444

  791 make_struct_decl: "variant" '<' $@90 type_declaration_no_options '>' $@91 '(' make_variant_dim ')' .

    $default  reduce using rule 791 (make_struct_decl)


State 1445

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1476

    $default  reduce using rule 825 (array_comprehension_where)

    array_comprehension_where  go to state 1477


State 1446

  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1478
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1447

  376 func_addr_expr: '@' '@' '<' $@23 optional_function_argument_list optional_function_type '>' $@24 func_addr_name .

    $default  reduce using rule 376 (func_addr_expr)


State 1448

  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple . array_comprehension_where '}'

    ';'  shift, and go to state 1476

    $default  reduce using rule 825 (array_comprehension_where)

    array_comprehension_where  go to state 1479


State 1449

  772 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1480
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1450

  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1481
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1451

  322 block_or_simple_block: "=>" "<-" expr .
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 322 (block_or_simple_block)


State 1452

  461 expr: expr '?' "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 461 (expr)


State 1453

   66 expression_else: "else" . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1482


State 1454

   59 elif_or_static_elif: "elif" .

    $default  reduce using rule 59 (elif_or_static_elif)


State 1455

   60 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 60 (elif_or_static_elif)


State 1456

   67 expression_else: elif_or_static_elif . '(' expr ')' optional_emit_semis expression_block expression_else

    '('  shift, and go to state 1483


State 1457

   82 expression_if_then_else: $@2 if_or_static_if '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 82 (expression_if_then_else)


State 1458

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1484
    $@9               go to state 330


State 1459

  233 expression_block_finally: "finally" $@7 '{' expressions $@8 '}' .

    $default  reduce using rule 233 (expression_block_finally)


State 1460

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr SEMICOLON

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1485
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1461

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . SEMICOLON
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1486


State 1462

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 . function_declaration_header SEMICOLON

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 1487


State 1463

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@35 function_declaration_header optional_emit_semis expression_block

    $default  reduce using rule 513 ($@35)

    $@35  go to state 1488


State 1464

  506 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 506 (structure_variable_declaration)


State 1465

  767 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  768                   | make_struct_fields . ',' "name" ":=" expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  775 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1489


State 1466

  776 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  828 optional_comma: ',' .

    '('  shift, and go to state 1490

    $default  reduce using rule 828 (optional_comma)


State 1467

  778 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 778 (make_struct_dim_decl)


State 1468

  785 make_struct_decl: "struct" '<' $@86 type_declaration_no_options '>' $@87 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 785 (make_struct_decl)


State 1469

  788 make_struct_decl: "class" '<' $@88 type_declaration_no_options '>' $@89 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 788 (make_struct_decl)


State 1470

  317 expr_type_info: "typeinfo" name_in_namespace '<' "name" c_or_s "name" '>' '(' expr ')' .

    $default  reduce using rule 317 (expr_type_info)


State 1471

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1491


State 1472

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1492


State 1473

  810 make_dim_decl: "array" "variant" '<' $@100 type_declaration_no_options '>' $@101 '(' make_variant_dim ')' .

    $default  reduce using rule 810 (make_dim_decl)


State 1474

  818 make_dim_decl: "fixed_array" '<' $@104 type_declaration_no_options '>' $@105 '(' expr_list optional_comma ')' .

    $default  reduce using rule 818 (make_dim_decl)


State 1475

  800 make_tuple_call: "tuple" '<' $@94 type_declaration_no_options '>' $@95 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 800 (make_tuple_call)


State 1476

  826 array_comprehension_where: ';' . "where" expr

    "where"  shift, and go to state 1493


State 1477

  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1494


State 1478

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr . array_comprehension_where ']'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ';'    shift, and go to state 1476

    $default  reduce using rule 825 (array_comprehension_where)

    array_comprehension_where  go to state 1495


State 1479

  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where . '}'

    '}'  shift, and go to state 1496


State 1480

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  772 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 772 (make_struct_fields)


State 1481

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  771 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 771 (make_struct_fields)


State 1482

   66 expression_else: "else" optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1497
    $@9               go to state 330


State 1483

   67 expression_else: elif_or_static_elif '(' . expr ')' optional_emit_semis expression_block expression_else

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1498
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1484

   85 expression_for_loop: $@3 "for" '(' variable_name_with_pos_list "in" expr_list ')' optional_emit_semis expression_block .

    $default  reduce using rule 85 (expression_for_loop)


State 1485

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . SEMICOLON
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"         shift, and go to state 603
    "as"         shift, and go to state 604
    "<<"         shift, and go to state 605
    ">>"         shift, and go to state 606
    "++"         shift, and go to state 607
    "--"         shift, and go to state 608
    "<="         shift, and go to state 609
    ">="         shift, and go to state 610
    "=="         shift, and go to state 611
    "!="         shift, and go to state 612
    "->"         shift, and go to state 613
    "??"         shift, and go to state 614
    "?."         shift, and go to state 615
    "?["         shift, and go to state 616
    "<|"         shift, and go to state 617
    "|>"         shift, and go to state 618
    "<<<"        shift, and go to state 619
    ">>>"        shift, and go to state 620
    "&&"         shift, and go to state 621
    "||"         shift, and go to state 622
    "^^"         shift, and go to state 623
    ".."         shift, and go to state 624
    "emitted ;"  shift, and go to state 690
    '?'          shift, and go to state 625
    '|'          shift, and go to state 626
    '^'          shift, and go to state 627
    '&'          shift, and go to state 628
    '<'          shift, and go to state 629
    '>'          shift, and go to state 630
    '-'          shift, and go to state 631
    '+'          shift, and go to state 632
    '*'          shift, and go to state 633
    '/'          shift, and go to state 634
    '%'          shift, and go to state 635
    '.'          shift, and go to state 636
    '['          shift, and go to state 637
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1499


State 1486

  299 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 299 (tuple_expansion_variable_declaration)


State 1487

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header . SEMICOLON

    "emitted ;"  shift, and go to state 690
    ';'          shift, and go to state 691

    SEMICOLON  go to state 1500


State 1488

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 . function_declaration_header optional_emit_semis expression_block

    "operator"  shift, and go to state 177
    "bool"      shift, and go to state 178
    "string"    shift, and go to state 179
    "int"       shift, and go to state 180
    "int2"      shift, and go to state 181
    "int3"      shift, and go to state 182
    "int4"      shift, and go to state 183
    "uint"      shift, and go to state 184
    "uint2"     shift, and go to state 185
    "uint3"     shift, and go to state 186
    "uint4"     shift, and go to state 187
    "float"     shift, and go to state 188
    "float2"    shift, and go to state 189
    "float3"    shift, and go to state 190
    "float4"    shift, and go to state 191
    "range"     shift, and go to state 192
    "urange"    shift, and go to state 193
    "range64"   shift, and go to state 194
    "urange64"  shift, and go to state 195
    "int64"     shift, and go to state 196
    "uint64"    shift, and go to state 197
    "double"    shift, and go to state 198
    "int8"      shift, and go to state 199
    "uint8"     shift, and go to state 200
    "int16"     shift, and go to state 201
    "uint16"    shift, and go to state 202
    "++"        shift, and go to state 203
    "--"        shift, and go to state 204
    "name"      shift, and go to state 205

    function_name                go to state 206
    function_declaration_header  go to state 1501


State 1489

  775 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 775 (make_struct_dim_list)


State 1490

  776 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 790
    "name"  shift, and go to state 1007

    make_struct_fields  go to state 1502


State 1491

  804 make_dim_decl: "array" "struct" '<' $@96 type_declaration_no_options '>' $@97 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 804 (make_dim_decl)


State 1492

  807 make_dim_decl: "array" "tuple" '<' $@98 type_declaration_no_options '>' $@99 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 807 (make_dim_decl)


State 1493

  826 array_comprehension_where: ';' "where" . expr

    "struct"                          shift, and go to state 412
    "class"                           shift, and go to state 413
    "true"                            shift, and go to state 414
    "false"                           shift, and go to state 415
    "new"                             shift, and go to state 416
    "typeinfo"                        shift, and go to state 417
    "type"                            shift, and go to state 418
    "array"                           shift, and go to state 419
    "null"                            shift, and go to state 420
    "table"                           shift, and go to state 421
    "deref"                           shift, and go to state 422
    "cast"                            shift, and go to state 423
    "upcast"                          shift, and go to state 424
    "addr"                            shift, and go to state 425
    "reinterpret"                     shift, and go to state 426
    "unsafe"                          shift, and go to state 427
    "fixed_array"                     shift, and go to state 428
    "default"                         shift, and go to state 429
    "bool"                            shift, and go to state 226
    "void"                            shift, and go to state 227
    "string"                          shift, and go to state 228
    "int"                             shift, and go to state 230
    "int2"                            shift, and go to state 231
    "int3"                            shift, and go to state 232
    "int4"                            shift, and go to state 233
    "uint"                            shift, and go to state 234
    "bitfield"                        shift, and go to state 430
    "uint2"                           shift, and go to state 236
    "uint3"                           shift, and go to state 237
    "uint4"                           shift, and go to state 238
    "float"                           shift, and go to state 239
    "float2"                          shift, and go to state 240
    "float3"                          shift, and go to state 241
    "float4"                          shift, and go to state 242
    "range"                           shift, and go to state 243
    "urange"                          shift, and go to state 244
    "range64"                         shift, and go to state 245
    "urange64"                        shift, and go to state 246
    "int64"                           shift, and go to state 248
    "uint64"                          shift, and go to state 249
    "double"                          shift, and go to state 250
    "int8"                            shift, and go to state 253
    "uint8"                           shift, and go to state 254
    "int16"                           shift, and go to state 255
    "uint16"                          shift, and go to state 256
    "tuple"                           shift, and go to state 431
    "variant"                         shift, and go to state 432
    "generator"                       shift, and go to state 433
    "++"                              shift, and go to state 434
    "--"                              shift, and go to state 435
    "::"                              shift, and go to state 55
    "$$"                              shift, and go to state 436
    "$i"                              shift, and go to state 437
    "$v"                              shift, and go to state 438
    "$b"                              shift, and go to state 439
    "$a"                              shift, and go to state 440
    "$c"                              shift, and go to state 441
    "..."                             shift, and go to state 442
    "integer constant"                shift, and go to state 443
    "long integer constant"           shift, and go to state 444
    "unsigned integer constant"       shift, and go to state 445
    "unsigned long integer constant"  shift, and go to state 446
    "unsigned int8 constant"          shift, and go to state 447
    "floating point constant"         shift, and go to state 448
    "double constant"                 shift, and go to state 449
    "name"                            shift, and go to state 56
    "start of the string"             shift, and go to state 450
    '-'                               shift, and go to state 451
    '+'                               shift, and go to state 452
    '*'                               shift, and go to state 453
    '%'                               shift, and go to state 13
    '~'                               shift, and go to state 454
    '!'                               shift, and go to state 455
    '['                               shift, and go to state 456
    '('                               shift, and go to state 457
    '$'                               shift, and go to state 458
    '@'                               shift, and go to state 459
    '{'                               shift, and go to state 460

    string_builder          go to state 461
    expr_reader             go to state 462
    expr_call_pipe          go to state 463
    name_in_namespace       go to state 464
    expr_new                go to state 465
    expr_cast               go to state 466
    expr_type_decl          go to state 467
    expr_type_info          go to state 468
    block_or_lambda         go to state 469
    expr_full_block         go to state 470
    expr_numeric_const      go to state 471
    expr_named_call         go to state 472
    expr_method_call        go to state 473
    func_addr_expr          go to state 474
    expr_field              go to state 475
    expr_call               go to state 476
    expr                    go to state 1503
    expr_generator          go to state 478
    expr_mtag               go to state 479
    basic_type_declaration  go to state 480
    make_decl               go to state 481
    make_struct_decl        go to state 482
    make_tuple_call         go to state 483
    make_dim_decl           go to state 484
    make_table_decl         go to state 485
    array_comprehension     go to state 486


State 1494

  829 array_comprehension: '[' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 829 (array_comprehension)


State 1495

  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where . ']'

    ']'  shift, and go to state 1504


State 1496

  831 array_comprehension: '{' "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' make_map_tuple array_comprehension_where '}' .

    $default  reduce using rule 831 (array_comprehension)


State 1497

   66 expression_else: "else" optional_emit_semis expression_block .

    $default  reduce using rule 66 (expression_else)


State 1498

   67 expression_else: elif_or_static_elif '(' expr . ')' optional_emit_semis expression_block expression_else
  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637
    ')'    shift, and go to state 1505


State 1499

  298 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr SEMICOLON .

    $default  reduce using rule 298 (tuple_expansion_variable_declaration)


State 1500

  512 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable "abstract" optional_constant $@34 function_declaration_header SEMICOLON .

    $default  reduce using rule 512 (struct_variable_declaration_list)


State 1501

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header . optional_emit_semis expression_block

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1506


State 1502

  767 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  768                   | make_struct_fields . ',' "name" ":=" expr
  771                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  772                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  776 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 1016
    ')'  shift, and go to state 1507


State 1503

  366 expr_method_call: expr . "->" "name" '(' ')'
  367                 | expr . "->" "name" '(' expr_list ')'
  377 expr_field: expr . '.' "name"
  378           | expr . '.' '.' "name"
  379           | expr . '.' "name" '(' ')'
  380           | expr . '.' "name" '(' expr_list ')'
  381           | expr . '.' basic_type_declaration '(' ')'
  382           | expr . '.' basic_type_declaration '(' expr_list ')'
  385           | expr . '.' $@25 error $@26
  407 expr: expr . "<<" expr
  408     | expr . ">>" expr
  409     | expr . "<<<" expr
  410     | expr . ">>>" expr
  411     | expr . '+' expr
  412     | expr . '-' expr
  413     | expr . '*' expr
  414     | expr . '/' expr
  415     | expr . '%' expr
  416     | expr . '<' expr
  417     | expr . '>' expr
  418     | expr . "==" expr
  419     | expr . "!=" expr
  420     | expr . "<=" expr
  421     | expr . ">=" expr
  422     | expr . '&' expr
  423     | expr . '|' expr
  424     | expr . '^' expr
  425     | expr . "&&" expr
  426     | expr . "||" expr
  427     | expr . "^^" expr
  428     | expr . ".." expr
  431     | expr . "++"
  432     | expr . "--"
  434     | expr . '[' expr ']'
  435     | expr . '.' '[' expr ']'
  436     | expr . "?[" expr ']'
  437     | expr . '.' "?[" expr ']'
  438     | expr . "?." "name"
  439     | expr . '.' "?." "name"
  446     | expr . "??" expr
  447     | expr . '?' expr ':' expr
  450     | expr . "is" "type" '<' $@27 type_declaration_no_options '>' $@28
  451     | expr . "is" basic_type_declaration
  452     | expr . "is" "name"
  453     | expr . "as" "name"
  456     | expr . "as" "type" '<' $@29 type_declaration '>' $@30
  457     | expr . "as" basic_type_declaration
  458     | expr . '?' "as" "name"
  461     | expr . '?' "as" "type" '<' $@31 type_declaration '>' $@32
  462     | expr . '?' "as" basic_type_declaration
  470     | expr . "<|" expr
  471     | expr . "|>" expr
  472     | expr . "|>" basic_type_declaration
  486 expr_mtag: expr . '.' "$f" '(' expr ')'
  487          | expr . "?." "$f" '(' expr ')'
  488          | expr . '.' '.' "$f" '(' expr ')'
  489          | expr . '.' "?." "$f" '(' expr ')'
  490          | expr . "as" "$f" '(' expr ')'
  491          | expr . '?' "as" "$f" '(' expr ')'
  492          | expr . "is" "$f" '(' expr ')'
  826 array_comprehension_where: ';' "where" expr .

    "is"   shift, and go to state 603
    "as"   shift, and go to state 604
    "<<"   shift, and go to state 605
    ">>"   shift, and go to state 606
    "++"   shift, and go to state 607
    "--"   shift, and go to state 608
    "<="   shift, and go to state 609
    ">="   shift, and go to state 610
    "=="   shift, and go to state 611
    "!="   shift, and go to state 612
    "->"   shift, and go to state 613
    "??"   shift, and go to state 614
    "?."   shift, and go to state 615
    "?["   shift, and go to state 616
    "<|"   shift, and go to state 617
    "|>"   shift, and go to state 618
    "<<<"  shift, and go to state 619
    ">>>"  shift, and go to state 620
    "&&"   shift, and go to state 621
    "||"   shift, and go to state 622
    "^^"   shift, and go to state 623
    ".."   shift, and go to state 624
    '?'    shift, and go to state 625
    '|'    shift, and go to state 626
    '^'    shift, and go to state 627
    '&'    shift, and go to state 628
    '<'    shift, and go to state 629
    '>'    shift, and go to state 630
    '-'    shift, and go to state 631
    '+'    shift, and go to state 632
    '*'    shift, and go to state 633
    '/'    shift, and go to state 634
    '%'    shift, and go to state 635
    '.'    shift, and go to state 636
    '['    shift, and go to state 637

    $default  reduce using rule 826 (array_comprehension_where)


State 1504

  830 array_comprehension: '[' "iterator" "for" '(' variable_name_with_pos_list "in" expr_list ')' ';' expr array_comprehension_where ']' .

    $default  reduce using rule 830 (array_comprehension)


State 1505

   67 expression_else: elif_or_static_elif '(' expr ')' . optional_emit_semis expression_block expression_else

    "emitted ;"  shift, and go to state 171

    $default  reduce using rule 63 (optional_emit_semis)

    emit_semis           go to state 172
    optional_emit_semis  go to state 1508


State 1506

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header optional_emit_semis . expression_block

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1509
    $@9               go to state 330


State 1507

  776 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 776 (make_struct_dim_list)


State 1508

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis . expression_block expression_else

    $default  reduce using rule 234 ($@9)

    expression_block  go to state 1510
    $@9               go to state 330


State 1509

  514 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list_with_emit_semis "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@35 function_declaration_header optional_emit_semis expression_block .

    $default  reduce using rule 514 (struct_variable_declaration_list)


State 1510

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block . expression_else

    "else"         shift, and go to state 1453
    "elif"         shift, and go to state 1454
    "static_elif"  shift, and go to state 1455

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1456
    expression_else      go to state 1511


State 1511

   67 expression_else: elif_or_static_elif '(' expr ')' optional_emit_semis expression_block expression_else .

    $default  reduce using rule 67 (expression_else)
